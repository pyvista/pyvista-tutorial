# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, PyVista Developers
# This file is distributed under the same license as the PyVista Tutorial package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyVista Tutorial\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 00:48+0000\n"
"PO-Revision-Date: 2022-07-24 15:42+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/tkoyama010/teams/112279/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:6
msgid "Lessons"
msgstr "レッスン内容"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:4
msgid "PyVista Tutorial"
msgstr "PyVistaチュートリアル"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:22
msgid "Welcome to the PyVista Tutorial!"
msgstr "PyVistaチュートリアルへようこそ!"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:24
msgid ""
"Below you'll find the schedule for the tutorial. Each lesson is split up "
"into a talk and an exercise section where you'll be able to practice what "
"was demonstrated in the tutorial. These lessons are designed to be highly "
"interactive, where each lesson page below contains a MyBinder button where "
"you can run the notebooks in the `MyBinder <https://mybinder.org/>`_ "
"environment. You can also download notebooks and Python scripts for your "
"local environment."
msgstr ""
"チュートリアルのスケジュールは以下の通りです．各レッスンは，講義と演習に分かれており，チュートリアルで実演された内容を実践することができます．これらのレッスンは非常にインタラクティブに設計されており，以下の各レッスンページにはMyBinderボタンがあり，`MyBinder"
" <https://mybinder.org/>`_ "
"環境でノートブックを実行することができます．また，ノートブックとPythonスクリプトは，あなたのローカル環境用にダウンロードすることができます．"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:31
msgid "Download the Tutorial's Jupyter Notebooks"
msgstr "Download the Tutorial's Jupyter Notebooks"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:39
msgid "Community Support"
msgstr "コミュニティサポート"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:41
msgid ""
"If you have any questions about PyVista, feel free to post your questions in"
" |discuss|."
msgstr "PyVistaについて何か質問があれば， |discuss| に気軽に投稿してください．"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:88
msgid "discuss"
msgstr "discuss"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:45
msgid "Professional Support"
msgstr "プロフェッショナルサポート"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:47
msgid ""
"While PyVista is an Open Source project with a big community, you might be "
"looking for professional support. This section aims to list companies with "
"VTK/PyVista expertise who can help you with your software project."
msgstr ""
"PyVistaは大きなコミュニティを持つオープンソースプロジェクトですが，専門的なサポートを求めているかもしれません．このセクションでは，VTK/PyVistaの専門知識を持ち，あなたのソフトウェアプロジェクトを手助けしてくれる企業を紹介します．"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:51
msgid "Company Name"
msgstr "会社名"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:51
msgid "Kitware Inc."
msgstr "Kitware Inc."

#: ../../pyvista-tutorial/doc/source/tutorial.rst:53
msgid "Description"
msgstr "説明"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:53
msgid ""
"Kitware is dedicated to build solutions for our customers based on our well-"
"established open source platforms."
msgstr "Kitware は，定評あるオープンソースプラットフォームをベースに，お客様のためのソリューションを構築することに専念しています．"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:57
msgid "Expertise"
msgstr "専門知識"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:57
msgid "CMake, VTK, PyVista, ParaView, Trame"
msgstr "CMake, VTK, PyVista, ParaView, Trame"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:59
msgid "Contact"
msgstr "お問い合わせ"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:59
msgid "https://www.kitware.com/contact/"
msgstr "https://www.kitware.com/contact/"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:63
msgid "Tutorial Overview"
msgstr "チュートリアルの概要"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:66
msgid "**Lesson**"
msgstr "**レッスン**"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:66
msgid "**Description**"
msgstr "**説明**"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:68
msgid ":ref:`intro`"
msgstr ":ref:`intro`"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:68
msgid "Introduction - Using PyVista for 3D Visualization within Python."
msgstr "はじめに - PyVistaを使ってPythonで3Dビジュアライゼーションを行います．"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:70
msgid ":ref:`jupyter`"
msgstr ":ref:`jupyter`"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:70
msgid "Using PyVista in Jupyter."
msgstr "JupyterでPyVistaを使います．"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:72
msgid ":ref:`basic`"
msgstr ":ref:`basic`"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:72
msgid ""
"Reading and plotting 3D data using the `pyvista.examples`_ module and "
"external files."
msgstr "`pyvista.examples`_ モジュールと外部ファイルを使って，3Dデータを読み込んでプロットします．"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:74
msgid ":ref:`mesh`"
msgstr ":ref:`mesh`"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:74
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:8
msgid ""
"Learn the basics of the PyVista data types and how to open common 3D file "
"formats to visualize the data in 3D."
msgstr "PyVistaのデータ型の基本を学び，一般的な3Dファイル形式を開いてデータを3Dで可視化する方法を紹介します．"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:76
msgid ":ref:`figures`"
msgstr ":ref:`figures`"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:76
msgid ""
"Demonstrate many features of the PyVista plotting API to create compelling "
"3D visualizations and touch on animations."
msgstr "PyVistaプロッティングAPIの多くの機能を実演し，魅力的な3Dビジュアリゼーションとタッチオンアニメーションを作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:78
msgid ":ref:`filters`"
msgstr ":ref:`filters`"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:78
msgid ""
"Demonstrate the PyVista filters API to perform mesh analysis and alteration."
msgstr "メッシュの解析と変更を行うためのPyVistaフィルタAPIのデモを行います．"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:80
msgid ":ref:`action`"
msgstr ":ref:`action`"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:80
msgid ""
"Show how PyVista is already being used within several projects and can be "
"used for all things visualization."
msgstr "PyVistaがすでにいくつかのプロジェクトで使用されており，あらゆる可視化に使用できることを紹介します．"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:82
msgid ":ref:`trame`"
msgstr ":ref:`trame`"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:82
msgid ""
"Leverage PyVista and Trame to make awesome interactive web applications."
msgstr "PyVistaとTrameを活用して，素晴らしいインタラクティブなWebアプリケーションを作成することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:84
msgid ":ref:`vtk`"
msgstr ":ref:`vtk`"

#: ../../pyvista-tutorial/doc/source/tutorial.rst:84
msgid ""
"Show how PyVista uses VTK and how you can combine the best of both worlds!"
msgstr "PyVistaがVTKをどのように使っているか，そして両者の長所をどのように組み合わせられるかを紹介します!"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/a_basic.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_00_intro_a_basic.py>` to "
"download the full example code or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_00_intro_a_basic.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/a_basic.rst:24
msgid "Create Basic Geometric Objects"
msgstr "基本的な幾何学的オブジェクトを作成します"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/a_basic.rst:26
msgid "This is the \"Hello, world!\" of PyVista."
msgstr "これは，PyVistaの \"Hello, world!\" です．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/a_basic.rst:44
msgid ""
"This runs through several of the available geometric objects available in "
"VTK which PyVista provides simple convenience methods for generating."
msgstr ""
"これは，VTKで利用可能ないくつかのジオメトリックオブジェクトを介して実行され，PyVistaは生成するための簡単で便利なメソッドを提供します．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/a_basic.rst:47
msgid "Let's run through creating a few geometric objects!"
msgstr "ジオメトリオブジェクトをいくつか作成してみましょう!"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/a_basic.rst:73
msgid "Now let's plot them all in one window"
msgstr "ここで，すべてを1つのウィンドウにプロットします．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/a_basic.rst:132
msgid "**Total running time of the script:** (0 minutes 2.309 seconds)"
msgstr "**Total running time of the script:** (0 minutes 2.309 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/a_basic.rst:143
#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:222
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:365
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:160
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:394
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:605
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:240
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:282
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:183
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:220
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:445
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10743
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:382
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:574
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:552
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:320
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:267
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:426
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/g_orbit.rst:181
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:352
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/d_gif.rst:115
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:155
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:142
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:116
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:668
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:320
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:203
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:258
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:174
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:279
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/c_compute-normals.rst:129
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:140
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:155
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:723
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:274
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:342
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:405
#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:20105
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:559
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:318
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:277
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:1511
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/d_wasm.rst:258
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:274
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:154
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:241
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:145
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:181
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:452
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:225
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:356
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:139
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:115
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_trame_simple.rst:76
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_actor_color.rst:104
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_vtk.rst:102
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/c_trame_scalars.rst:119
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/d_trame_scalar_range.rst:103
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/e_trame_algorithm.rst:109
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/f_trame_open_file.rst:113
msgid "Launch binder"
msgstr "Binderの起動"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/a_basic.rst:150
msgid ":download:`Download Jupyter notebook: a_basic.ipynb <a_basic.ipynb>`"
msgstr ":download:`Download Jupyter notebook: a_basic.ipynb <a_basic.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/a_basic.rst:154
msgid ":download:`Download Python source code: a_basic.py <a_basic.py>`"
msgstr ":download:`Download Python source code: a_basic.py <a_basic.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/a_basic.rst:161
#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:353
#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:220
#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:244
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:387
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:182
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:257
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:416
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:627
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:262
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:304
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:205
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:242
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:477
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:467
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10765
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:400
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:592
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:574
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:342
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:289
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:444
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/g_orbit.rst:199
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:374
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/d_gif.rst:133
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:177
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:164
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:138
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:594
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:686
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:342
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:221
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:276
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:196
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:301
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/c_compute-normals.rst:151
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:162
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:177
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:424
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:745
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:296
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:360
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:427
#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:20123
#: ../../pyvista-tutorial/doc/source/tutorial/05_action/index.rst:30
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:581
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:340
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:299
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:1533
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/d_wasm.rst:280
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:296
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:527
#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:279
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:176
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:263
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:167
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:203
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:474
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:247
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:378
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:161
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:199
#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:186
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:137
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_trame_simple.rst:98
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_actor_color.rst:126
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_vtk.rst:124
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/c_trame_scalars.rst:141
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/d_trame_scalar_range.rst:125
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/e_trame_algorithm.rst:131
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/f_trame_open_file.rst:135
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:313
#: ../../pyvista-tutorial/doc/source/tutorial/10_trame/index.rst:48
msgid ""
"`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr "`Sphinx-Galleryによるギャラリー <https://sphinx-gallery.github.io>`_"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:6
msgid "Introduction"
msgstr "はじめに"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:8
msgid ""
"This section includes a brief explanation of the background and history of "
"PyVista."
msgstr "ここでは，PyVistaの背景や歴史について簡単に説明します．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:12
msgid ""
"This section of the tutorial was adopted from `Getting Started "
"<https://docs.pyvista.org/getting-started/index.html>`_ chapter of the "
"PyVista documentation."
msgstr ""
"このチュートリアルのセクションは，PyVista ドキュメントの `Getting Started "
"<https://docs.pyvista.org/getting-started/index.html>`_ の章から採用されています．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:16
msgid ""
"PyVista is one of many visualization libraries built on top `VTK - The "
"Visualization Toolkit <https://vtk.org/>`_. It's primary intent was to be an"
" abstraction layer over VTK to provide convenience and functionality to VTK "
"exposed \"Pythonically\"."
msgstr ""
"PyVistaは `VTK - The Visualization Toolkit <https://vtk.org/>`_ "
"の上に構築された多くの視覚化ライブラリの一つです．PyVistaの主な目的は，VTKの上の抽象化レイヤとして，VTKの便利さと機能を "
"\"Python的に\" 提供することです．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:23
msgid "Brief History"
msgstr "沿革"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:24
msgid ""
"PyVista was created out of a desire to make a reusable higher level "
"abstraction layer that \"wraps\" the lower level functionality of VTK."
msgstr "PyVistaは，VTKの低レベルの機能を \"包む\" 再利用可能な高位の抽象化レイヤーを作りたいという思いから生まれました．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:27
msgid ""
"Originally created as a sub-libary for `femorph "
"<https://www.wpafb.af.mil/News/Article-Display/Article/1503043/afrl-signs-"
"first-of-its-kind-software-license-with-pratt-whitney/>`_ by `@akaszynski "
"<https://github.com/akaszynski>`_ in 2016."
msgstr ""
"元々は2016年に `@akaszynski <https://github.com/akaszynski>`_ によって `femorph "
"<https://www.wpafb.af.mil/News/Article-Display/Article/1503043/afrl-signs-"
"first-of-its-kind-software-license-with-pratt-whitney/>`_ "
"のサブライブラリとして作成されました．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:30
msgid ""
"First posted to GitHub as `akaszynski/vtki "
"<https://github.com/akaszynski/vtki>`_ back in 2017."
msgstr ""
"2017年に `akaszynski/vtki <https://github.com/akaszynski/vtki>`_ "
"としてGitHubに最初に投稿されました．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:32
msgid ""
"`@banesullivan <https://github.com/banesullivan/>`_ joined the project in "
"2018 to expand functionality, features, and improve the documentation with "
"examples."
msgstr ""
"`@banesullivan <https://github.com/banesullivan/>`_ "
"が2018年にプロジェクトに参加し，機能，特徴の拡張，例を用いたドキュメントの改善を行っています．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:34
msgid ""
"First release of `PyVista <https://pypi.org/project/pyvista/#history>`_ on "
"PyPI in 2019."
msgstr ""
"2019年， `PyVista <https://pypi.org/project/pyvista/#history>`_ をPyPIで初公開．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:36
msgid ""
"Published a paper `Sullivan, B., & Kaszynski, A. (2019). PyVista: 3D "
"plotting and mesh analysis through a streamlined interface for the "
"Visualization Toolkit (VTK). Journal of Open Source Software, 4(37), 1450. "
"https://doi.org/10.21105/joss.01450 "
"<https://joss.theoj.org/papers/10.21105/joss.01450>`_"
msgstr ""
"論文 `Sullivan, B., & Kaszynski, A. (2019). PyVista: 3D plotting and mesh "
"analysis through a streamlined interface for the Visualization Toolkit "
"(VTK). Journal of Open Source Software, 4(37), 1450. "
"https://doi.org/10.21105/joss.01450 "
"<https://joss.theoj.org/papers/10.21105/joss.01450>`_ を発表しました．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:40
msgid ""
"As of October 2024, Over 150+ contributors and `~2.4k Stars "
"<https://github.com/pyvista/pyvista/stargazers>`_ on GitHub."
msgstr ""
"2024年10月現在，GitHubに150人以上のコントリビューターと `~2.4k Stars "
"<https://github.com/pyvista/pyvista/stargazers>`_ がいます．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:42
msgid ""
"Used by at least 2.8k other `libraries, examples, and repositories "
"<https://github.com/pyvista/pyvista/network/dependents>`_ on GitHub."
msgstr ""
"GitHubにある他の `libraries, examples, and repositories "
"<https://github.com/pyvista/pyvista/network/dependents>`_ "
"で少なくとも2.8k以上使用されています．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:43
msgid "Greatly expanded internal presence and continuing support thanks to"
msgstr "プロジェクト内のプレゼンスを大きく向上させ，継続的なサポートを実現しました"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:45
msgid "`@tkoyama010 <https://github.com/tkoyama010>`_"
msgstr "`@tkoyama010 <https://github.com/tkoyama010>`_"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:46
msgid "`@adeak <https://github.com/adeak>`_"
msgstr "`@adeak <https://github.com/adeak>`_"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:47
msgid "`@MatthewFlamm <https://github.com/MatthewFlamm>`_"
msgstr "`@MatthewFlamm <https://github.com/MatthewFlamm>`_"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:48
msgid "`@user27182 <https://github.com/user27182>`_"
msgstr "`@user27182 <https://github.com/user27182>`_"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:49
msgid "Greatly expanded PyVista ecosystem thanks to"
msgstr "PyVistaエコシステムが大幅に拡張されました"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:51
msgid ""
"`@bjlittle <https://github.com/bjlittle>`_ creator of `GeoVista "
"<https://github.com/bjlittle/geovista>`_"
msgstr ""
"`GeoVista <https://github.com/bjlittle/geovista>`_ の作成者 `@bjlittle "
"<https://github.com/bjlittle>`_ "

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:52
msgid ""
"`@adtzlr <https://github.com/adtzlr>`_ creator of `FElupe "
"<https://github.com/adtzlr/felupe>`_"
msgstr ""
"`FElupe <https://github.com/adtzlr/felupe>`_ の作成者 `@adtzlr "
"<https://github.com/adtzlr>`_ "

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:54
msgid "|PyPIact| |condaact| |contributors| |stars|"
msgstr "|PyPIact| |condaact| |contributors| |stars|"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:66
msgid "PyPIact"
msgstr "PyPIact"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:69
msgid "condaact"
msgstr "condaact"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:72
msgid "contributors"
msgstr "contributors"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:75
msgid "GitHub"
msgstr "GitHub"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:59
msgid ""
"Please take a look at the `contributors page`_ and the active `list of "
"authors`_ to learn more about the developers of PyVista."
msgstr ""
"PyVistaの開発者についてもっと知るには， `contributors page`_ とアクティブな `list of authors`_ "
"ご覧ください．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:62
msgid "|contrib.rocks|"
msgstr "|contrib.rocks|"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:79
msgid "contrib.rocks"
msgstr "contrib.rocks"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:64
msgid "Made with `contrib rocks`_."
msgstr "`Contrib rocks`_ で作られました．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:89
msgid "Who is PyVista for?"
msgstr "PyVistaは誰のためのものですか？"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:91
msgid "Anyone who wants to visualize 3D data using Python."
msgstr "Pythonを使って3Dデータを可視化したい人．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:93
msgid "Here's how people are using PyVista:"
msgstr "PyVistaの活用事例をご紹介します．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:95
msgid ""
"`PyVista User Stories "
"<https://github.com/pyvista/pyvista/discussions/2133>`_"
msgstr ""
"`PyVista User Stories "
"<https://github.com/pyvista/pyvista/discussions/2133>`_"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:97
msgid ""
"Feel free to write about what you have achieved with PyVista or what you "
"would like to achieve in the future."
msgstr "PyVistaで実現したこと，これから実現したいことを自由に書いてください．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:101
msgid "Brief Examples"
msgstr "簡単な例"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:104
msgid "Read and Plot a Surface Mesh"
msgstr "サーフェスメッシュの読み込みとプロット"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:105
msgid ""
"VTK is powerful, really powerful! You can do just about anything within VTK "
"and PyVista just wants to make it easier to do it using ``numpy``-like and "
"``Matplotlib``-like syntax. For example, if you wanted to be able to plot a "
"simple surface mesh:"
msgstr ""
"VTKは強力です，本当に強力です!VTKでは何でもできるのですが，PyVistaはそれをより簡単にするために， ``numpy`` や "
"``Matplotlib`` 風の構文を使っています．例えば，単純なサーフェスメッシュをプロットすることができればいいのです．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:123
msgid "**Load and plot a surface dataset**"
msgstr "**サーフェスデータセットの読み込みとプロット**"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:126
msgid "Using ``vtk``"
msgstr "``vtk`` の使用"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:126
msgid "Using PyVista"
msgstr "PyVistaの使用"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:0
msgid "Static Scene"
msgstr "スタティックなシーン"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:0
msgid "Interactive Scene"
msgstr "インタラクティブなシーン"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:152
msgid "Construct a Simple Point Cloud with Color"
msgstr "色を使った簡単な点群の構築"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:154
msgid ""
"These examples demonstrate how you can use both PyVista and VTK to construct"
" and visualize a point cloud using ``numpy``. Here, we demonstrate how easy "
"it is to work directly with NumPy arrays."
msgstr ""
"これらの例は，PyVistaとVTKの両方を使用して， ``numpy`` "
"を使った点群の構築と可視化を行う方法を示しています．ここでは，NumPyの配列を直接操作することがいかに簡単であるかを示しています．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:268
msgid "VTK"
msgstr "VTK"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:162
msgid ""
"This example was taken from this `SO Answer "
"<https://stackoverflow.com/a/7604478/3369879>`_."
msgstr ""
"この例は，この `SO Answer <https://stackoverflow.com/a/7604478/3369879>`_ "
"から引用したものです．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:0
msgid "PyVista"
msgstr "PyVista"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:248
msgid "How other Libraries Compare"
msgstr "他のライブラリとの比較"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:250
msgid ""
"There are a ton of excellent visualization libraries out there and if you're"
" interested in data visualization, I'd encourage you for explore them all!"
msgstr "データビジュアライゼーションに興味があるのであれば，ぜひいろいろなライブラリを試してみてください．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:253
msgid ""
"`Python Libraries for Mesh, Point Cloud, and Data Visualization "
"<https://towardsdatascience.com/python-libraries-for-mesh-and-point-cloud-"
"visualization-part-1-daa2af36de30?gi=70edd77e5fc>`_"
msgstr ""
"`メッシュ，点群，データ可視化のための Python ライブラリ <https://towardsdatascience.com/python-"
"libraries-for-mesh-and-point-cloud-visualization-"
"part-1-daa2af36de30?gi=70edd77e5fc>`_"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:254
msgid ""
"`How does PyVista relate to other visualization tools? "
"<https://github.com/pyvista/pyvista/discussions/1438>`_"
msgstr ""
"`PyVistaと他の可視化ツールとの関連は？ "
"<https://github.com/pyvista/pyvista/discussions/1438>`_"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:255
msgid "`SciVis Libraries <https://pyviz.org/scivis/index.html>`_"
msgstr "`SciVis ライブラリ <https://pyviz.org/scivis/index.html>`_"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:257
msgid "Here's a few of them:"
msgstr "そのいくつかをご紹介します．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:0
msgid "vtk"
msgstr "vtk"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:263
msgid ""
"The Visualization Toolkit (`VTK <https://vtk.org/>`_) is open source "
"software for manipulating and displaying scientific data. It comes with "
"state-of-the-art tools for 3D rendering, a suite of widgets for 3D "
"interaction, and extensive 2D plotting capability."
msgstr ""
"Visualization Toolkit (`VTK <https://vtk.org/>`_) "
"は，科学的データを操作・表示するためのオープンソースソフトウェアです．3Dレンダリングのための最先端のツール，3Dインタラクションのためのウィジェット群，そして広範な2Dプロット機能が付属しています．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:279
msgid "ParaView"
msgstr "ParaView"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:273
msgid ""
"`ParaView <https://www.paraview.org/>`_ is an open-source, multi-platform "
"data analysis and visualization application. ParaView users can quickly "
"build visualizations to analyze their data using qualitative and "
"quantitative techniques. The data exploration can be done interactively in "
"3D or programmatically using ParaView’s batch processing capabilities."
msgstr ""
"`ParaView <https://www.paraview.org/>`_ "
"は，オープンソースのマルチプラットフォーム・データ分析・可視化アプリケーションです．ParaViewのユーザーは，定性的および定量的な手法を使ってデータを分析するための可視化を迅速に構築することができます．データの探索は，3Dでインタラクティブに行うことも，ParaViewのバッチ処理機能を使ってプログラムで行うこともできます．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:287
msgid "vedo"
msgstr "vedo"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:284
msgid ""
"`vedo <https://vedo.embl.es/>`_ is a Python library for scientific analysis "
"of 3D objects and point clouds based on VTK and numpy."
msgstr ""
"`vedo <https://vedo.embl.es/>`_ "
"は，VTKとnumpyをベースにした，3Dオブジェクトや点群の科学的解析のためのPythonライブラリです．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:0
#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:296
msgid "Mayavi"
msgstr "Mayavi"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:292
msgid ""
"`Mayavi <https://docs.enthought.com/mayavi/mayavi/>`_ is a general purpose, "
"cross-platform tool for 2-D and 3-D scientific data visualization."
msgstr ""
"`Mayavi <https://docs.enthought.com/mayavi/mayavi/>`_ "
"は，2次元および3次元の科学的データを可視化するための汎用クロスプラットフォームツールです．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:302
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/index.rst:6
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:173
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:250
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:279
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:165
#: ../../pyvista-tutorial/doc/source/tutorial/05_action/index.rst:6
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:390
#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:222
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:140
msgid "Exercises"
msgstr "演習"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:303
msgid "Install PyVista by visiting :ref:`getting_started`."
msgstr ":ref:`getting_started` にアクセスして，PyVistaをインストールします．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:305
msgid ""
"Once you've installed PyVista, open the example below and see if you can run"
" the \"Hello World\" of PyVista. You can download the example by scrolling "
"to the bottom of the page and clicking on either the ``*.py`` (script) or "
"``*.ipynb`` (notebook) file format."
msgstr ""
"PyVistaをインストールしたら，以下のサンプルを開いて，PyVistaの \"Hello World "
"\"を実行できるかどうか試してみてください．ページの一番下までスクロールして， ``*.py`` (スクリプト) または ``*.ipynb`` "
"(ノートブック) ファイル形式のいずれかをクリックすると，サンプルをダウンロードすることができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/index.rst:327
msgid ":ref:`sphx_glr_tutorial_00_intro_a_basic.py`"
msgstr ":ref:`sphx_glr_tutorial_00_intro_a_basic.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/05_action/sg_execution_times.rst:7
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:8
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:8
msgid "Computation times"
msgstr "計算時間"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/sg_execution_times.rst:9
msgid ""
"**00:02.309** total execution time for 1 file **from tutorial/00_intro**:"
msgstr ""
"**00:02.309** total execution time for 1 file **from tutorial/00_intro**:"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:234
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10624
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:32
msgid "Example"
msgstr "例"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:33
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:33
msgid "Time"
msgstr "Time"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:34
msgid "Mem (MB)"
msgstr "Mem (MB)"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/sg_execution_times.rst:35
msgid ":ref:`sphx_glr_tutorial_00_intro_a_basic.py` (``a_basic.py``)"
msgstr ":ref:`sphx_glr_tutorial_00_intro_a_basic.py` (``a_basic.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/sg_execution_times.rst:36
msgid "00:02.309"
msgstr "00:02.309"

#: ../../pyvista-tutorial/doc/source/tutorial/00_intro/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:40
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:46
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:40
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:46
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:40
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:40
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:40
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:46
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:40
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:40
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:46
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:40
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:46
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:40
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:46
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:49
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:52
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:40
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:46
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:49
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:52
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:55
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:58
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:37
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:40
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:46
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:49
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:52
msgid "0.0"
msgstr "0.0"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:6
msgid "Using PyVista in Jupyter"
msgstr "JupyterでPyVistaを使う"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:8
msgid ""
"PyVista is designed to be used in Jupyter notebooks. This section of the "
"tutorial will walk you through the basics of using PyVista in Jupyter "
"notebooks and will be a reference guide for you when configuring PyVista to "
"work in Jupyter."
msgstr ""
"PyVistaはJupyterノートブックで使用するように設計されています．チュートリアルのこのセクションでは，JupyterノートブックでPyVistaを使用するための基本を説明し，Jupyterで動作するようにPyVistaを設定する際の参考ガイドを提供します．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:13
msgid "PyVista's Jupyter backend"
msgstr "PyVistaのJupyterバックエンド"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:19
msgid "Trame Jupyter Backend for PyVista"
msgstr "PyVista用Trame Jupyterバックエンド"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:21
msgid ""
"PyVista has the ability to display fully featured plots within a Jupyter "
"environment using `Trame <https://kitware.github.io/trame/index.html>`_. We "
"provide mechanisms to pair PyVista and Trame so that PyVista plotters can be"
" used in a web context with both server and client-side rendering."
msgstr ""
"PyVistaには， `Trame <https://kitware.github.io/trame/index.html>`_ "
"を使用してJupyter環境内で完全な機能を持つプロットを表示する機能があります．我々は，PyVistaとTrameをペアリングするメカニズムを提供し，PyVistaプロッタをサーバサイドレンダリングとクライアントサイドレンダリングの両方でWebコンテキストで使用できるようにします．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:26
msgid ""
"The server-side rendering mode of the Trame backend works by streaming the "
"current render window to a canvas within Jupyter and then passing any user "
"actions from the canvas back to the VTK render window (this is done under "
"the hood by the ``vtkRemoteView`` in ``trame-vtk``."
msgstr ""
"Trameバックエンドのサーバーサイドレンダリングモードは，現在のレンダーウィンドウをJupyter内のcanvasにストリーミングし，canvasからのユーザーアクションをVTKレンダーウィンドウに戻すことで動作します（これは，"
" ``trame-vtk`` 内の ``vtkRemoteView`` によって、フードの下で行われます．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:31
msgid ""
"For example, both sections of code will display an interactive canvas within"
" Jupyter:"
msgstr "例えば，この2つのコードはJupyterのインタラクティブキャンバスを表示します:"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:47
msgid "For convenience, you can enable ``trame`` with (this is the default):"
msgstr "便宜上， ``trame`` を有効にすることもできます(これがデフォルト):"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:56
msgid "Trame Jupyter Modes"
msgstr "Trame Jupyter モード"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:58
msgid ""
"The PyVista Trame jupyter backend provides three modes of operation "
"(technically as three separate backend choices):"
msgstr ""
"PyVista Trame jupyterバックエンドは，3つの動作モードを提供します（技術的には3つの別々のバックエンドを選択できます）:"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:61
msgid ""
"``'trame'``: Uses a view that can switch between client- and server-"
"rendering modes."
msgstr "``'trame'``: クライアントレンダリングモードとサーバーレンダリングモードを切り替えることができるビューを使用します．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:62
msgid "``'server'``: Uses a view that is purely server-rendering."
msgstr "``'server'``: 純粋にサーバーレンダリングのビューを使用します．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:63
msgid ""
"``'client'``: Uses a view that is purely client-rendering (generally safe "
"without a virtual frame buffer)"
msgstr "``'client'``：純粋なクライアントレンダリングのビューを使用します（一般的に仮想フレームバッファなしで安全）"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:65
msgid ""
"You can choose your backend either by using :func:`set_jupyter_backend() "
"<pyvista.set_jupyter_backend>` or passing ``jupyter_backend`` on the "
":func:`show() <pyvista.Plotter.show>` call."
msgstr ""
":func:`set_jupyter_backend() <pyvista.set_jupyter_backend>` を使用するか， "
":func:`show() <pyvista.Plotter.show>` 呼び出し時に ``jupyter_backend`` "
"を渡すことでバックエンドを選択することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:87
msgid "Installation"
msgstr "インストール"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:89
msgid "Using pip, you can set up your jupyter environment with:"
msgstr "pipを使って，次のようにjupyter環境をセットアップすることがでます:"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:97
msgid "Remote JupyterHubs"
msgstr "リモートJupyterHubs"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:99
msgid ""
"When using PyVista in Jupyter that is hosted remotely (docker, cloud "
"JupyterHub, or otherwise), you will need to pair the Trame backend with "
"either ``jupyter-server-proxy`` or ``trame-jupyter-extension``."
msgstr ""
"リモートでホストされているJupyter（docker，クラウドJupyterHubなど）でPyVistaを使用する場合は，Trameバックエンドと "
"``jupyter-server-proxy`` または ``trame-jupyter-extension`` とペアリングする必要があります．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:103
msgid ""
"These tools allow us to connect to the Trame web application that embeds "
"PyVista's render window directly in Jupyter. Without one of these "
"mechanisms, you may see server connection issues or 404 pages where you "
"expect to see a PyVista Plotter."
msgstr ""
"これらのツールを使うと、PyVistaのレンダーウィンドウをJupyterに直接埋め込むTrame Webアプリケーションに接続することができます。 "
"これらの仕組みがないと、サーバ接続の問題が発生したり、PyVistaプロッタが表示されるはずの404ページが表示されたりすることがあります。"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:108
msgid "Jupyter-Server-Proxy"
msgstr "Jupyter-Server-Proxy"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:110
msgid ""
"`Jupyter Server Proxy <https://jupyter-server-"
"proxy.readthedocs.io/en/latest/>`_ lets you access the Trame server hosting "
"the views of the PyVista plotters alongside your notebook, and provide "
"authenticated web access to them directly through Jupyter."
msgstr ""
"`Jupyter Server Proxy <https://jupyter-server-"
"proxy.readthedocs.io/en/latest/>`_ "
"を使用すると，ノートブックと一緒にPyVistaプロッタのビューをホスティングしているTrameサーバにアクセスし， "
"Jupyterから直接認証されたウェブアクセスを提供することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:116
msgid ""
"In a future version of `wslink <https://github.com/Kitware/wslink>`_ (the "
"driving mechanism behind Trame's server), we plan to add support such that "
"the server can communicate via the `Jupyter Comms <https://jupyter-"
"notebook.readthedocs.io/en/stable/comms.html>`_ to avoid the need for a "
"secondary web server and thus ``jupyter-server-proxy``."
msgstr ""
"将来のバージョンの `wslink <https://github.com/Kitware/wslink>`_ "
"(Trameのサーバーの背後にある駆動メカニズム)では，サーバーが `Jupyter Comms <https://jupyter-"
"notebook.readthedocs.io/en/stable/comms.html>`_ "
"を介して通信できるようなサポートを追加し，セカンダリWebサーバーの必要性を回避する予定です．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:122
msgid ""
"To configure PyVista and Trame to work with ``jupyter-server-proxy`` in a "
"remote environment, you will need to set some options on the global PyVista "
"theme:"
msgstr ""
"リモート環境で ``jupyter-server-proxy`` を使って動作するように PyVista と Trame を設定するには，PyVista"
" のグローバルテーマでいくつかのオプションを設定する必要があります．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:125
msgid ""
":py:attr:`pyvista.global_theme.trame.server_proxy_enabled "
"<pyvista.themes._TrameConfig.server_proxy_enabled>`"
msgstr ""
":py:attr:`pyvista.global_theme.trame.server_proxy_enabled "
"<pyvista.themes._TrameConfig.server_proxy_enabled>`"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:127
msgid ""
":py:attr:`pyvista.global_theme.trame.server_proxy_prefix "
"<pyvista.themes._TrameConfig.server_proxy_prefix>`"
msgstr ""
":py:attr:`pyvista.global_theme.trame.server_proxy_prefix "
"<pyvista.themes._TrameConfig.server_proxy_prefix>`"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:130
msgid ""
"The default for ``server_proxy_prefix`` is ``'/proxy/'`` and this should be "
"sufficient for most remote Jupyter environment and use within Docker."
msgstr ""
"デフォルトの ``server_proxy_prefix`` は ``'/proxy/'`` "
"で，ほとんどのリモートJupyter環境やDocker内での使用にはこれで十分です．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:133
msgid "This can also be set with an environment variable:"
msgstr "これは，環境変数で設定することもできます:"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:140
msgid "The prefix will need to be modified for JupyterHub deployments."
msgstr "JupyterHubのデプロイメントではプレフィックスを変更する必要があります．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:142
msgid ""
"On MyBinder, the ``JUPYTERHUB_SERVICE_PREFIX`` string often needs to prefix "
"``'/proxy/'``. This makes it so the prefix includes the users ID in the URL."
" In PyVista, we automatically check for the presence of this variable and "
"prepend it to the ``server_proxy_prefix``."
msgstr ""
"MyBinderでは、 ``JUPYTERHUB_SERVICE_PREFIX`` の文字列の前に ``'/proxy/'`` "
"を付ける必要があることが多いです．これにより，接頭辞にユーザIDがURLに含まれるようになります． PyVista "
"では，この変数があるかどうかを自動的にチェックし， ``server_proxy_prefix`` の前に追加します．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:149
msgid "Trame-Jupyter-Extension"
msgstr "Trame-Jupyter-Extension"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:151
msgid ""
"`Trame Jupyter Extension <https://github.com/Kitware/trame-jupyter-"
"extension/>`_ enables the trame server and client to communicate over the "
"existing `Jupyter Comms <https://jupyter-"
"notebook.readthedocs.io/en/stable/comms.html>`_ infrastructure, instead of "
"creating a separate WebSocket connection."
msgstr ""
"`Trame Jupyter Extension <https://github.com/Kitware/trame-jupyter-"
"extension/>`_ は、WebSocket接続を個別に作成する代わりに、既存の `Jupyter Comms <https://jupyter-"
"notebook.readthedocs.io/en/stable/comms.html>`_ "
"インフラストラクチャ上でtrameサーバーとクライアントの通信を可能にします。"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:156
msgid ""
"Using this extension removes the need for a secondary web server and thus "
"``jupyter-server-proxy``."
msgstr "この拡張機能を使うことで、セカンダリウェブサーバーが不要になり、 ``jupyter-server-proxy`` が不要になります。"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:159
msgid "Using pip, you can install the extension:"
msgstr "pipを使って、拡張機能をインストールすることができます:"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:165
msgid ""
"If using Jupyter Lab 3.x, make sure to install the version 1.x of the "
"extension:"
msgstr "Jupyter Lab 3.xを使用している場合は、拡張機能のバージョン1.xをインストールしてください:"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:171
msgid ""
"Once the extension is installed, you can select whether PyVista will use it "
"by setting the following flag to ``True`` or ``False``:"
msgstr ""
"拡張機能がインストールされたら、次のフラグを ``True`` または ``False`` に設定することで、PyVista "
"がその拡張機能を使用するかどうかを選択できます:"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:174
msgid ""
":py:attr:`pyvista.global_theme.trame.jupyter_extension_enabled "
"<pyvista.plotting.themes._TrameConfig.jupyter_extension_enabled>`"
msgstr ""
":py:attr:`pyvista.global_theme.trame.jupyter_extension_enabled "
"<pyvista.plotting.themes._TrameConfig.jupyter_extension_enabled>`"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/index.rst:194
msgid ":ref:`sphx_glr_tutorial_00_jupyter_jupyter.py`"
msgstr ":ref:`sphx_glr_tutorial_00_jupyter_jupyter.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_00_jupyter_jupyter.py>` to "
"download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_00_jupyter_jupyter.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:22
msgid "Test out PyVista's Jupyter Backend"
msgstr "PyVistaのJupyterバックエンドを試す"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:24
msgid "Become familiar with PyVista Jupyter backend."
msgstr "PyVista Jupyterバックエンドに慣れる．"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:89
msgid "Client-side rendering only (in browser)"
msgstr "(ブラウザで)クライアント側レンダリングのみ"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:145
msgid "Server-side rendering only"
msgstr "サーバー側レンダリングのみ"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:211
msgid "**Total running time of the script:** (0 minutes 4.447 seconds)"
msgstr "**Total running time of the script:** (0 minutes 4.447 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:229
msgid ":download:`Download Jupyter notebook: jupyter.ipynb <jupyter.ipynb>`"
msgstr ":download:`Download Jupyter notebook: jupyter.ipynb <jupyter.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:233
msgid ":download:`Download Python source code: jupyter.py <jupyter.py>`"
msgstr ":download:`Download Python source code: jupyter.py <jupyter.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/jupyter.rst:237
msgid ":download:`Download zipped: jupyter.zip <jupyter.zip>`"
msgstr ":download:`Download zipped: jupyter.zip <jupyter.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/sg_execution_times.rst:9
msgid ""
"**00:04.447** total execution time for 1 file **from tutorial/00_jupyter**:"
msgstr ""
"**00:04.447** total execution time for 1 file **from tutorial/00_jupyter**:"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/sg_execution_times.rst:35
msgid ":ref:`sphx_glr_tutorial_00_jupyter_jupyter.py` (``jupyter.py``)"
msgstr ":ref:`sphx_glr_tutorial_00_jupyter_jupyter.py` (``jupyter.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/00_jupyter/sg_execution_times.rst:36
msgid "00:04.447"
msgstr "00:04.447"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_01_basic_a_lesson_basic.py>`"
" to download the full example code. or to run this example in your browser "
"via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_01_basic_a_lesson_basic.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:24
msgid "Basic Usage Lesson"
msgstr "基本的な使い方のレッスン"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:26
msgid ""
"This section demonstrates how to use PyVista to read and plot 3D data using "
"the `pyvista.examples.downloads "
"<https://docs.pyvista.org/api/examples/_autosummary/pyvista.examples.downloads.html>`_"
" module and external files."
msgstr ""
"このセクションでは， `pyvista.examples.downloads "
"<https://docs.pyvista.org/api/examples/_autosummary/pyvista.examples.downloads.html>`_"
" モジュールと外部ファイルを使用して，PyVistaで3Dデータを読み取り，プロットする方法を説明します．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:53
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:20
msgid "Using Existing Data"
msgstr "既存データの活用"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:54
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:21
msgid ""
"There are two main ways of getting data into PyVista: creating it yourself "
"from scratch or loading the dataset from any one of the `compatible file "
"formats <https://docs.pyvista.org/api/readers/index.html>`_. Since we're "
"just starting out, let's load a file."
msgstr ""
"PyVistaにデータを取り込む方法は主に2つあります．ゼロから自分で作成するか， `互換性のあるファイルフォーマット "
"<https://docs.pyvista.org/api/readers/index.html>`_ "
"のいずれかからデータセットを読み込むかです．これから始めるので，ファイルをロードしてみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:101
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:55
msgid ""
"Note how this is a :class:`pyvista.PolyData`, which is effectively a surface"
" dataset containing points, lines, and/or faces. We can immediately plot "
"this with:"
msgstr ""
"これは :class:`pyvista.PolyData` "
"であり，事実上，点，線，面を含むサーフェスデータセットであることに注意してください．このデータセットを使って，すぐにプロットすることができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:147
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:65
msgid ""
"This is a fairly basic plot. You can change how its plotted by adding "
"parameters as ``show_edges=True`` or changing the color by setting ``color``"
" to a different value. All of this is described in PyVista's API "
"documentation in :func:`pyvista.plot`, but for now let's take a look at "
"another dataset. This one is a volumetric dataset."
msgstr ""
"これはかなり基本的なプロットです． ``show_edges=True`` などのパラメータを追加したり， ``color`` "
"を別の値に設定して色を変更することで，プロット方法を変更することができます．これらのことは，PyVistaのAPIドキュメントである "
":func:`pyvista.plot` に記載されていますが，ここでは別のデータセットを見てみましょう．これは体積のデータセットです．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:195
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:79
msgid ""
"This is a :class:`pyvista.ImageData`, which is a dataset containing a "
"uniform set of points with consistent spacing. When we plot this dataset, we"
" have the option of enabling volumetric plotting, which plots individual "
"cells based on the content of the data associated with those cells."
msgstr ""
"これは :class:`pyvista.ImageData` "
"で，一貫した間隔を持つ一様な点の集合を含むデータセットです．このデータセットをプロットするとき，個々のセルを，そのセルに関連するデータの内容に基づいてプロットする，volumetric"
" plottingを有効にするオプションがあります．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:245
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:100
msgid "Read from a file"
msgstr "ファイルから読み込む"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:246
msgid ""
"You can read datasets directly from a file if you have access to it on your "
"environment. This can be one of the many file formats that VTK supports, and"
" many more that it doesn't as PyVista can rely on libraries like `meshio "
"<https://github.com/nschloe/meshio>`_."
msgstr ""
"あなたの環境にアクセスできるのであれば，ファイルから直接データセットを読み込むことができます．これは，VTKがサポートしている多くのファイルフォーマットの1つであり，PyVistaが"
" `meshio <https://github.com/nschloe/meshio>`_ "
"のようなライブラリに依存できるように，サポートしていない多くのファイルフォーマットでもあり得ます．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:251
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:106
msgid ""
"In the following example, we load VTK's iron protein dataset `ironProt.vtk "
"<https://github.com/naucoin/VTKData/blob/master/Data/ironProt.vtk>`_ from a "
"file using :func:`pyvista.read`."
msgstr ""
"以下の例では，VTKの鉄タンパク質データセット `ironProt.vtk "
"<https://github.com/naucoin/VTKData/blob/master/Data/ironProt.vtk>`_ を "
":func:`pyvista.read` を使ってファイルからロードしています．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:297
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:119
msgid ""
"This is again a :class:`pyvista.ImageData` and we can plot it volumetrically"
" with:"
msgstr "これもまた :class:`pyvista.ImageData` で，ボリューム的にプロットすることができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:354
msgid "**Total running time of the script:** (0 minutes 4.738 seconds)"
msgstr "**Total running time of the script:** (0 minutes 4.738 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:372
msgid ""
":download:`Download Jupyter notebook: a_lesson_basic.ipynb "
"<a_lesson_basic.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_lesson_basic.ipynb "
"<a_lesson_basic.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:376
msgid ""
":download:`Download Python source code: a_lesson_basic.py "
"<a_lesson_basic.py>`"
msgstr ""
":download:`Download Python source code: a_lesson_basic.py "
"<a_lesson_basic.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/a_lesson_basic.rst:380
msgid ":download:`Download zipped: a_lesson_basic.zip <a_lesson_basic.zip>`"
msgstr ":download:`Download zipped: a_lesson_basic.zip <a_lesson_basic.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_01_basic_exercises_a_load_examples_exercise.py>`"
" to download the full example code. or to run this example in your browser "
"via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_01_basic_exercises_a_load_examples_exercise.py>`"
" 。"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:24
msgid "Download and Plot Examples"
msgstr "ダウンロードとプロット例"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:26
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:30
msgid "Download and plot example datasets."
msgstr "サンプルデータセットをダウンロードし，プロットすることができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:28
msgid ""
"PyVista contains many downloadable datasets documented at "
"`pyvista.examples.downloads "
"<https://docs.pyvista.org/api/examples/_autosummary/pyvista.examples.downloads.html>`_."
" You can download these through Python and immediately plot them."
msgstr ""
"PyVistaには， `pyvista.examples.downloads "
"<https://docs.pyvista.org/api/examples/_autosummary/pyvista.examples.downloads.html>`_"
" で文書化された多くのダウンロード可能なデータセットがあります．Pythonを通じてこれらをダウンロードし，すぐにプロットすることができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:32
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:36
msgid ""
"This is an easy way to immediately get started with example datasets within "
"PyVista without having to manually download and load them."
msgstr "これは，PyVista内のサンプルデータセットを手動でダウンロードしてロードすることなく，すぐに使い始めることができる簡単な方法です．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:38
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:42
msgid "Import PyVista and the examples module"
msgstr "PyVista と examples モジュールをインポートします"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:51
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:61
msgid "Surface DataSet - Download"
msgstr "表面データセット - ダウンロード"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:52
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:62
msgid ""
"Download a surface dataset of pine roots. Note how the dataset is "
"automatically loaded right into Python."
msgstr "松の根の表面データセットをダウンロードします．データセットが自動的にPythonに読み込まれることに注意してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:67
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:107
msgid "Surface DataSet - Plot"
msgstr "表面データセット - プロット"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:68
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:108
msgid "Plot the pine roots using PyVista's default plotting settings."
msgstr "PyVistaのデフォルトのプロット設定を使用して，松根をプロットします．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:81
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:154
msgid "Volume DataSet - Download"
msgstr "ボリュームデータセット - ダウンロード"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:82
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:155
msgid ""
"Download the bolt dataset. This is an excellent dataset to visualize using "
"\"volumetric\" plotting."
msgstr ""
"ボルトのデータセットをダウンロードします．このデータセットは， \"volumetric\" プロットを使って可視化するのに最適なデータセットです．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:98
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:199
msgid "Volume DataSet - Plot"
msgstr "ボリュームデータセット - プロット"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:99
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:200
msgid ""
"Here, we plot the dataset using a custom view direction using "
":class:`pyvista.Plotter`."
msgstr "ここでは，データセットをプロットしています．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:122
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:256
msgid "Exercise #1 - Use PyVista Examples"
msgstr "練習問題 #1 - PyVistaのサンプルを使う"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:123
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:257
msgid "Visualize one of PyVista's built in examples."
msgstr "PyVistaの組み込み例の一つを可視化します．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:125
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:259
msgid ""
"If your IDE supports it, you should be able to type ``dataset = "
"examples.download_`` and press tab to see all the available examples you can"
" download."
msgstr ""
"IDEがサポートしていれば， ``dataset = examples.download_`` "
"と入力し，タブを押すと，ダウンロードできるすべてのサンプルを見ることができるはずです．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:132
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:315
msgid "Exercise #2 - Download and View a File"
msgstr "練習問題#2 - ファイルのダウンロードと表示"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:133
msgid ""
"Experiment on your own by downloading a dataset and reading it in with "
":func:`pyvista.read`. You can use one of your own files or try downloading "
"one from the following sources:"
msgstr ""
"データセットをダウンロードして， :func:`pyvista.read` "
"で読み込んで実験してみてください．自分で作ったファイルを使ってもいいですし，以下のソースからダウンロードしてもいいでしょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:137
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:320
msgid ""
"`Sample VTK DataSets <https://github.com/pyvista/vtk-"
"data/tree/master/Data>`_"
msgstr ""
"`サンプルVTKデータセット <https://github.com/pyvista/vtk-data/tree/master/Data>`_"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:138
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:321
msgid ""
"`Sample STL files <https://www.amtekcompany.com/teaching-resources/stl-"
"files/>`_"
msgstr ""
"`サンプルSTLファイル <https://www.amtekcompany.com/teaching-resources/stl-files/>`_"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:139
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:322
msgid "`Thingiverse <https://www.thingiverse.com/>`_"
msgstr "`Thingiverse <https://www.thingiverse.com/>`_"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:167
msgid ""
":download:`Download Jupyter notebook: a_load_examples_exercise.ipynb "
"<a_load_examples_exercise.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_load_examples_exercise.ipynb "
"<a_load_examples_exercise.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:171
msgid ""
":download:`Download Python source code: a_load_examples_exercise.py "
"<a_load_examples_exercise.py>`"
msgstr ""
":download:`Download Python source code: a_load_examples_exercise.py "
"<a_load_examples_exercise.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/a_load_examples_exercise.rst:175
msgid ""
":download:`Download zipped: a_load_examples_exercise.zip "
"<a_load_examples_exercise.zip>`"
msgstr ""
":download:`Download zipped: a_load_examples_exercise.zip "
"<a_load_examples_exercise.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/index.rst:25
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:192
msgid ""
":ref:`sphx_glr_tutorial_01_basic_exercises_a_load_examples_exercise.py`"
msgstr ""
":ref:`sphx_glr_tutorial_01_basic_exercises_a_load_examples_exercise.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 1 file **from "
"tutorial/01_basic/exercises**:"
msgstr ""
"**00:00.000** total execution time for 1 file **from "
"tutorial/01_basic/exercises**:"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_01_basic_exercises_a_load_examples_exercise.py` "
"(``a_load_examples_exercise.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_01_basic_exercises_a_load_examples_exercise.py` "
"(``a_load_examples_exercise.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/exercises/sg_execution_times.rst:36
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:36
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:39
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:45
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:45
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:39
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:36
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:39
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:45
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:39
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:36
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:39
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:45
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:45
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:48
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:51
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:36
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:39
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:45
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:48
#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:51
msgid "00:00.000"
msgstr "00:00.000"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:6
msgid "Basic usage"
msgstr "基本的な使い方"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:8
msgid ""
"This section demonstrates how to use PyVista to reading and plotting 3D data"
" using the `pyvista.examples`_ module and external files."
msgstr ""
"このセクションでは， `pyvista.examples`_ "
"モジュールと外部ファイルを使って，PyVistaで3Dデータを読み込んでプロットする方法を説明します．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:13
msgid ""
"This section of the tutorial was adopted from the `Basic API Usage "
"<https://docs.pyvista.org/user-guide/simple.html>`_ chapter of the PyVista "
"documentation."
msgstr ""
"このチュートリアルのセクションは，PyVistaドキュメントの `Basic API Usage "
"<https://docs.pyvista.org/user-guide/simple.html>`_ の章から採用されています．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:26
msgid ""
"If you have a dataset handy, like a surface model, point cloud, or VTK file,"
" you can use that. If you don't have something immediately available, "
"PyVista has a variety of files you can download in its "
"`pyvista.examples.downloads "
"<https://docs.pyvista.org/api/examples/_autosummary/pyvista.examples.downloads.html>`_"
" module."
msgstr ""
"もし，サーフェスモデルや点群，VTKファイルのような手近なデータセットがあれば，それを使うことができます．すぐに使えるものがない場合は，PyVistaの"
" `pyvista.examples.downloads "
"<https://docs.pyvista.org/api/examples/_autosummary/pyvista.examples.downloads.html>`_"
" モジュールでさまざまなファイルをダウンロードすることができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:32
msgid "Here's a very basic dataset you can download."
msgstr "ここでは，非常に基本的なデータセットをダウンロードすることができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:90
msgid ""
"One thing you might have noticed by now is that the plots here in the online"
" tutorial may look slightly different than your plots depending on how "
"you're plotting them on your computer. This depends on your "
"``jupyter_backend``, or if you're even using a jupyter notebook. As you're "
"playing around with these examples, feel free to change settings like "
"disabling (or enabling) ``notebook``, or using a different plotting backend "
"for displaying within your notebook (if applicable)."
msgstr ""
"もうお気づきかもしれませんが，オンラインチュートリアルのプロットは，あなたのコンピュータでどのようにプロットしているかによって，あなたのプロットとは少し違って見えるかもしれません．これは使用している"
" ``jupyter_backend`` や，jupyter notebook を使用しているかどうかによって異なります．これらの例で遊んでいる間に， "
"``notebook`` "
"を無効にする(または有効にする)，あるいはノートブック内で表示するために別のプロットバックエンドを使用するなど，自由に設定を変更してください(該当する場合)．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:101
msgid ""
"You can read datasets directly from a file if you have access to it locally "
"on your computer. This can be one of the many file formats that VTK "
"supports, and many more that it doesn't as PyVista can rely on libraries "
"like `meshio <https://github.com/nschloe/meshio>`_."
msgstr ""
"コンピュータのローカルにアクセスできるのであれば，ファイルから直接データセットを読み込むことができます．これは，VTKがサポートしている多くのファイルフォーマットの1つであり，PyVistaが"
" `meshio <https://github.com/nschloe/meshio>`_ "
"のようなライブラリに依存できるように，サポートしていない多くのファイルフォーマットでもあり得ます．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:130
msgid "Lesson Material"
msgstr "レッスン教材"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:132
msgid ""
"This is the notebook rendering of this page where you can interactively "
"follow along with this lesson."
msgstr "このページでは，このレッスンにインタラクティブについていけるノートブックのレンダリングを行っています．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:152
msgid ":ref:`sphx_glr_tutorial_01_basic_a_lesson_basic.py`"
msgstr ":ref:`sphx_glr_tutorial_01_basic_a_lesson_basic.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:207
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/index.rst:6
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:378
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/index.rst:6
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:511
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/index.rst:6
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:324
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/index.rst:6
msgid "Solutions"
msgstr "解答"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:209
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/index.rst:8
msgid "These are the solutions to the above examples."
msgstr "以上が，上記の例に対する解答です．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/index.rst:228
#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/index.rst:27
msgid ""
":ref:`sphx_glr_tutorial_01_basic_solutions_a_load_examples_solution.py`"
msgstr ""
":ref:`sphx_glr_tutorial_01_basic_solutions_a_load_examples_solution.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/sg_execution_times.rst:9
msgid ""
"**00:04.738** total execution time for 1 file **from tutorial/01_basic**:"
msgstr ""
"**00:04.738** total execution time for 1 file **from tutorial/01_basic**:"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_01_basic_a_lesson_basic.py` (``a_lesson_basic.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_01_basic_a_lesson_basic.py` (``a_lesson_basic.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/sg_execution_times.rst:36
msgid "00:04.738"
msgstr "00:04.738"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_01_basic_solutions_a_load_examples_solution.py>`"
" to download the full example code. or to run this example in your browser "
"via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_01_basic_solutions_a_load_examples_solution.py>`"
"  。"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:27
msgid ""
"This is the solution to :ref:`load_examples`. If you haven't already tried "
"to solve it on your own, you probably should try that first."
msgstr ""
"これは :ref:`load_examples` "
"に対する解答です．もしまだ自力で解決しようとしていないのであれば，おそらく最初にそれを試すべきでしょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:32
msgid ""
"PyVista contains many downloadable datasets documented at "
"`pyvista.examples.downloads "
"<https://docs.pyvista.org/api/examples/_autosummary/pyvista.examples.downloads.html>`_."
" You can download these through Python and then immediately plot them."
msgstr ""
"PyVistaには， `pyvista.examples.downloads "
"<https://docs.pyvista.org/api/examples/_autosummary/pyvista.examples.downloads.html>`_"
" で文書化された多くのダウンロード可能なデータセットがあります．Pythonを通じてこれらをダウンロードし，すぐにプロットすることができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:316
msgid ""
"Experiment on your own by downloading a dataset and reading it in with "
":class:`pyvista.read`. You can use one of your own files or try downloading "
"one from the following sources:"
msgstr ""
"データセットをダウンロードして， :class:`pyvista.read` "
"で読み込んで実験してみてください．自分で作ったファイルを使ってもいいですし，以下のソースからダウンロードしてもいいでしょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:324
msgid ""
"**Solution** Download the file ``'P_shelf_pin.stl'`` from "
"https://www.thingiverse.com/thing:5412753"
msgstr ""
"**解決方法** ファイル ``'P_shelf_pin.stl'`` を "
"https://www.thingiverse.com/thing:5412753 からダウンロードします．"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:383
msgid "**Total running time of the script:** (0 minutes 4.327 seconds)"
msgstr "**Total running time of the script:** (0 minutes 4.327 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:401
msgid ""
":download:`Download Jupyter notebook: a_load_examples_solution.ipynb "
"<a_load_examples_solution.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_load_examples_solution.ipynb "
"<a_load_examples_solution.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:405
msgid ""
":download:`Download Python source code: a_load_examples_solution.py "
"<a_load_examples_solution.py>`"
msgstr ""
":download:`Download Python source code: a_load_examples_solution.py "
"<a_load_examples_solution.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/a_load_examples_solution.rst:409
msgid ""
":download:`Download zipped: a_load_examples_solution.zip "
"<a_load_examples_solution.zip>`"
msgstr ""
":download:`Download zipped: a_load_examples_solution.zip "
"<a_load_examples_solution.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/sg_execution_times.rst:9
msgid ""
"**00:04.327** total execution time for 1 file **from "
"tutorial/01_basic/solutions**:"
msgstr ""
"**00:04.327** total execution time for 1 file **from "
"tutorial/01_basic/solutions**:"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_01_basic_solutions_a_load_examples_solution.py` "
"(``a_load_examples_solution.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_01_basic_solutions_a_load_examples_solution.py` "
"(``a_load_examples_solution.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/01_basic/solutions/sg_execution_times.rst:36
msgid "00:04.327"
msgstr "00:04.327"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_02_mesh_a_lesson_mesh.py>` "
"to download the full example code. or to run this example in your browser "
"via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_02_mesh_a_lesson_mesh.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:22
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:22
msgid "Lesson Overview"
msgstr "レッスンの概要"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:24
msgid ""
"This exercise provides an overview of the example in the initial lesson for "
"you to try out!"
msgstr "この演習では，最初のレッスンの例の概要を説明しますので，試してみてください!"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:46
msgid "What is a Point?"
msgstr "ポイントとは？"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:48
msgid ""
"Let's start with a point cloud - this is a mesh type that only has vertices."
" You can create one by defining a 2D array of Cartesian coordinates like so:"
msgstr "ポイントクラウドから始めましょう - これは頂点のみを持つメッシュタイプです．作成するには，2 D配列の直交座標を次のように定義します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:78
msgid "Pass numpy array of points (n by 3) to PolyData"
msgstr "点 (n x 3) の numpy 配列を PolyData に渡します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:154
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:78
msgid ""
"But it's important to note that most meshes have some sort of connectivity "
"between points such as this gridded mesh:"
msgstr "しかし，ほとんどのメッシュは，この格子状のメッシュのように，点と点の間に何らかのつながりがあることに注意が必要です．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:254
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:117
msgid "What is a Cell?"
msgstr "セルとは？"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:256
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:118
msgid ""
"A cell is the geometry between points that defines the connectivity or "
"topology of a mesh. In the examples above, cells are defined by the lines "
"(edges colored in black) connecting points (colored in red). For example, a "
"cell in the beam example is a voxel defined by the region between eight "
"points in that mesh:"
msgstr ""
"セルとは，メッシュの接続性またはトポロジーを定義する点間のジオメトリです．上記の例では，セルは線（黒で着色されたエッジ）と接続点（赤で着色された）によって定義されています．例えば，ビームの例におけるセルは，そのメッシュの8つの点の間の領域によって定義されるボクセルである．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:315
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:144
msgid ""
"Cells aren't limited to voxels, they could be a triangle between three "
"points, a line between two points, or even a single point could be its own "
"cell (but that's a special case)."
msgstr "セルはボクセルに限らず，3点間の三角形や2点間の線，あるいは1点をセルとすることもできます（ただし，これは特殊なケースです）．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:322
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:150
msgid "What are attributes?"
msgstr "アトリビュートとは?"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:324
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:151
msgid ""
"Attributes are data values that live on either the points or cells of a "
"mesh. In PyVista, we work with both point data and cell data and allow easy "
"access to data dictionaries to hold arrays for attributes that live either "
"on all points or on all cells of a mesh. These attributes can be accessed in"
" a dictionary-like attribute attached to any PyVista mesh accessible as one "
"of the following:"
msgstr ""
"アトリビュートは，メッシュのポイントまたはセルに存在するデータ値です．PyVistaでは，ポイントデータとセルデータの両方を処理し，データ辞書に簡単にアクセスして，メッシュのすべてのポイントまたはすべてのセルに存在するアトリビュートの配列を保持できます．これらの属性は，以下のようにアクセスできるPyVistaメッシュに付けられた辞書のような属性にアクセスできます．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:334
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:163
msgid "Point Data"
msgstr "ポイントデータ"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:335
msgid ""
"Point data refers to arrays of values (scalars, vectors, etc.) that live on "
"each point of the mesh. Each element in an attribute array corresponds to a "
"point in the mesh. Let's create some point data for the beam mesh. When "
"plotting, the values between points are interpolated across the cells."
msgstr ""
"点データとは，メッシュの各点に存在する値（スカラー，ベクトルなど）の配列のことです．属性配列の各要素は，メッシュの各点に対応します．梁のメッシュの点データを作ってみましょう．プロットする場合，点間の値はセルをまたいで補間されます．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:385
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:177
msgid "Cell Data"
msgstr "セルデータ"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:386
msgid ""
"Cell data refers to arrays of values (scalars, vectors, etc.) that live "
"throughout each cell of the mesh. That is the entire cell (2D face or 3D "
"volume) is assigned the value of that attribute."
msgstr ""
"セルデータは，メッシュの各セル全体に存在する値の配列(スカラー，ベクトルなど)を参照します．つまり，セル全体(2 D面または3 "
"D体積)にそのアトリビュートの値が割り当てられます．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:434
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:190
msgid ""
"Here's a comparison of point data versus cell data and how point data is "
"interpolated across cells when mapping colors. This is unlike cell data "
"which has a single value across the cell's domain:"
msgstr ""
"ここでは，点データとセルデータを比較し，色をマッピングするときに点データがセル間でどのように補間されるかを示します．これは，セルのドメイン全体で単一の値を持つセルデータとは異なります．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:492
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:211
msgid "Field Data"
msgstr "フィールドデータ"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:493
msgid ""
"Field data is not directly associated with either the points or cells but "
"still should be attached to the mesh. This may be a string array storing "
"notes."
msgstr ""
"フィールドデータはポイントやセルとは直接関連していませんが，メッシュに添付する必要があります． これはメモを格納した文字列の配列であったりします．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:523
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:220
msgid "Assigning Scalars to a Mesh"
msgstr "スカラーをメッシュに割り当てる"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:525
msgid ""
"Here's how we assign values to cell attributes and plot it. Here, we "
"generate cube containing 6 faces and assign each face an integer from "
"``range(6)`` and then have it plotted."
msgstr ""
"ここでは，セルの属性に値を割り当て，それをプロットする方法を紹介します． ここでは，6つの面を含む立方体を生成し，それぞれの面に "
"``range(6)`` から整数を割り当てて，それをプロットしています．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:529
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:226
msgid "Note how this varies from assigning scalars to each point"
msgstr "これは，各点にスカラーを割り当てるのとは異なることに注意してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:594
msgid "**Total running time of the script:** (0 minutes 2.800 seconds)"
msgstr "**Total running time of the script:** (0 minutes 2.800 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:612
msgid ""
":download:`Download Jupyter notebook: a_lesson_mesh.ipynb "
"<a_lesson_mesh.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_lesson_mesh.ipynb "
"<a_lesson_mesh.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:616
msgid ""
":download:`Download Python source code: a_lesson_mesh.py <a_lesson_mesh.py>`"
msgstr ""
":download:`Download Python source code: a_lesson_mesh.py <a_lesson_mesh.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/a_lesson_mesh.rst:620
msgid ":download:`Download zipped: a_lesson_mesh.zip <a_lesson_mesh.zip>`"
msgstr ":download:`Download zipped: a_lesson_mesh.zip <a_lesson_mesh.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_02_mesh_exercises_b_create-"
"point-cloud.py>` to download the full example code. or to run this example "
"in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_02_mesh_exercises_b_create.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:24
msgid "Create Point Cloud"
msgstr "点群を作成"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:26
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:26
msgid ""
"Create a :class:`pyvista.PolyData` object from a point cloud of vertices and"
" scalar arrays for those points."
msgstr "頂点のポイントクラウドとそれらのポイントのスカラー配列から :class:`pyvista.PolyData` オブジェクトを作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:41
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:47
msgid ""
"Point clouds are generally constructed using :class:`pyvista.PolyData` and "
"can easily have scalar or vector data arrays associated with the individual "
"points. In this example, we'll start by working backwards using a point "
"cloud that is available from our ``examples`` module. This however is no "
"different than creating a PyVista mesh with your own NumPy arrays of vertice"
" locations."
msgstr ""
"点群は一般的に :class:`pyvista.PolyData` を使用して構築され， "
"個々の点に関連付けられたスカラーまたはベクトルデータ配列を簡単に持つことができます．この例では， まず ``examples`` "
"モジュールから入手可能な点群を使って逆算してみます．ただし，これは独自の頂点位置のNumPy配列を使用してPyVistaメッシュを作成するのと同じです．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:70
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:92
msgid ""
"Now that you have a NumPy array of points/vertices either from our sample "
"data or your own project, create a PyVista mesh using those points."
msgstr "サンプルデータまたは自分のプロジェクトからの点/頂点のNumPy配列ができたので，それらの点からPyVistaメッシュを作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:84
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:130
msgid ""
"Now, perform a sanity check to show that the points have been loaded "
"correctly."
msgstr "ここで，ポイントが正しくロードされたことを示すために、サニティチェックを実行します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:97
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:155
msgid ""
"Now that we have a PyVista mesh, we can plot it. Note that we add an option "
"to use eye dome lighting - this is a shading technique to improve depth "
"perception with point clouds (learn more about `EDL "
"<https://docs.pyvista.org/examples/02-plot/edl.html>`_)."
msgstr ""
"これでPyVistaメッシュができたので，プロットすることができます．ここでは，eye "
"domeライティングを使用するオプションを追加します．これは，ポイントクラウド( `EDL "
"<https://docs.pyvista.org/examples/02-plot/edl.html>`_ "
"についてもっと学ぶ)を使用して深さの認識を向上させるシェーディング技法です．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:111
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:202
msgid ""
"Now what if you have data attributes (scalar or vector arrays) that you'd "
"like to associate with every point of your mesh? You can easily add NumPy "
"data arrays that have a length equal to the number of points in the mesh "
"along the first axis. For example, lets add a few arrays to this new "
"``point_cloud`` mesh."
msgstr ""
"ここで，メッシュのすべてのノードに関連付けるデータアトリビュート(スカラーまたはベクトル配列)があるとします．最初の軸に沿ったメッシュ内のノードの数と同じ長さのNumPyデータ配列を簡単に追加できます．例えば，この新しい"
" ``point_cloud`` メッシュにいくつかの配列を追加しましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:117
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:208
msgid ""
"Make an array of scalar values with the same length as the points array. "
"Each element in this array will correspond to points at the same index:"
msgstr "points配列と同じ長さのスカラ値の配列を作成します．この配列の各要素は，同じインデックスのポイントに対応します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:121
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:212
msgid ""
"You can use a component of the ``points`` array or use the ``n_points`` "
"property of the mesh to make an array of that length."
msgstr ""
"``points`` 配列のコンポーネントを使用するか，メッシュの ``n_points`` "
"プロパティを使用すると，その長さの配列を作成することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:134
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:232
msgid "Add that data to the mesh with the name \"elevation\"."
msgstr "そのデータを \"elevation\" という名前でメッシュに追加します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:146
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:250
msgid ""
"And now we can plot the point cloud with that elevation data. PyVista is "
"smart enough to plot the scalar array you added by default. This time, let's"
" render every point as its own sphere using ``render_points_as_spheres``."
msgstr "今回は， ``render_points_as_spheres`` を使って，すべての点を球体としてレンダリングしてみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:159
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:296
msgid ""
"That data is kind of boring, right? You can also add data arrays with more "
"than one scalar value - perhaps a vector with three elements? Let's make a "
"little function that will compute vectors for every point in the point cloud"
" and add those vectors to the mesh."
msgstr ""
"そのデータは退屈ですよね?複数のスカラ値を持つデータ配列，例えば3つの要素を持つベクトルを追加することもできます．ポイントクラウド内のすべてのノードのベクトルを計算し，それらのベクトルをメッシュに追加する簡単な関数を作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:164
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:301
msgid ""
"This time, we're going to create a totally new, random point cloud "
"containing 100 points using :func:`numpy.random.random`."
msgstr "今回は :func:`numpy.random.random` を使って，100点からなる全く新しいランダムな点群を作成する．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:192
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:345
msgid "Add the vector array as point data to the new mesh:"
msgstr "ベクトル配列を点データとして新しいメッシュに追加します:"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:196
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:363
msgid ""
"Now we can make arrows using those vectors using the glyph filter (see the "
"`Glyph Example <https://docs.pyvista.org/examples/01-filter/glyphs.html>`_ "
"for more details)."
msgstr ""
"さて，これらのベクトルを使って，グリフフィルタで矢印を作ることができます(詳しくは `グリフの例 "
"<https://docs.pyvista.org/examples/01-filter/glyphs.html>`_ を参照してください)．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:247
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:452
msgid ""
":download:`Download Jupyter notebook: b_create-point-cloud.ipynb <b_create-"
"point-cloud.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: b_create-point-cloud.ipynb <b_create-"
"point-cloud.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:251
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:456
msgid ""
":download:`Download Python source code: b_create-point-cloud.py <b_create-"
"point-cloud.py>`"
msgstr ""
":download:`Download Python source code: b_create-point-cloud.py <b_create-"
"point-cloud.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/b_create-point-cloud.rst:255
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:460
msgid ""
":download:`Download zipped: b_create-point-cloud.zip <b_create-point-"
"cloud.zip>`"
msgstr ""
":download:`Download zipped: b_create-point-cloud.zip <b_create-point-"
"cloud.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_02_mesh_exercises_c_create-"
"uniform-grid.py>` to download the full example code. or to run this example "
"in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_02_mesh_exercises_c_create-uniform-grid.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:24
msgid "Creating a Uniform Grid"
msgstr "均一グリッドを作成"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:26
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:26
msgid "Create a simple uniform grid from a 3D NumPy array of values."
msgstr "値の3D NumPy配列から単純な均一グリッドを作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:39
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:45
msgid ""
"Take a 3D NumPy array of data values that holds some spatial data where each"
" axis corresponds to the XYZ cartesian axes. This example will create a "
":class:`pyvista.ImageData` that will hold the spatial reference for a 3D "
"grid by which a 3D NumPy array of values can be plotted against."
msgstr ""
"各軸がXYZデカルト軸に対応する空間データを保持するデータ値の3 D NumPy配列を取ります．この例では，値の3 D NumPy配列をプロットできる3"
" Dグリッドの空間参照を保持する :class:`pyvista.ImageData` を作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:46
msgid ""
"Create the 3D NumPy array of spatially referenced data. This is spatially "
"referenced such that the grid is ``(20, 5, 10)``, ``(nx, ny, nz)``."
msgstr ""
"空間的に参照されるデータの3 D NumPy配列を作成します．これは，グリッドが ``(20, 5, 10)``, ``(nx, ny, nz)`` "
"であるように空間的に参照さます．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:59
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:77
msgid "Create the ImageData"
msgstr "ImageDataの作成"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:70
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:94
msgid ""
"Set the grid dimensions to ``shape + 1`` because we want to inject our "
"values on the CELL data."
msgstr "CELLデータに値を注入したいので，グリッドの寸法を ``shape + 1`` に設定します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:82
msgid "Edit the spatial reference."
msgstr "空間リファレンスを編集する．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:94
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:130
msgid ""
"Assign the data to the cell data. Be sure to flatten the data for "
"``ImageData`` objects using Fortran ordering."
msgstr "セルデータにデータを代入します． ``ImageData`` オブジェクトのデータは必ずFortranオーダリングを使用して平坦化します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:107
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:166
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:174
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:315
msgid "Now plot the grid!"
msgstr "さて，グリッドをプロットしてみましょう!"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:119
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:219
msgid ""
"Don't like cell data? You could also add the NumPy array to the point data "
"of a :class:`pyvista.ImageData`. Take note of the subtle difference when "
"setting the grid dimensions upon initialization."
msgstr ""
"セルデータが嫌いですか？NumPyの配列を :class:`pyvista.ImageData` "
"の点データに追加することもできます．初期化時にグリッドの寸法を設定する際に，微妙な違いに注意してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:135
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:247
msgid "Create the PyVista object and set the same attributes as earlier."
msgstr "PyVistaオブジェクトを作成し，上記と同じように属性を設定します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:154
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:272
msgid "Add the data values to the cell data"
msgstr "セルデータにデータ値を追加する"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:179
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:187
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:361
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:530
msgid "Exercise"
msgstr "演習"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:180
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:362
msgid "Now create your own :class:`pyvista.ImageData` from a 3D NumPy array!"
msgstr "それでは，3D NumPyの配列から，あなた自身の :class:`pyvista.ImageData` を作ってみましょう!"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:191
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10529
msgid ""
"Generate example 3D data using :func:`numpy.random.random`. Feel free to use"
" your own 3D numpy array here."
msgstr ""
":func:`numpy.random.random` を使って3Dデータを生成します．ここでは，ご自分の3D numpy配列を自由に使ってください．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:204
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10554
msgid "Create the :class:`pyvista.ImageData`."
msgstr "クラス :`pyvista.ImageData` を作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:207
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10557
msgid ""
"You will likely need to ``ravel`` the array with Fortran-ordering: "
"``arr.ravel(order=\"F\")``"
msgstr ""
"おそらく Fortran-ordering で配列を ``ravel`` する必要があります: ``arr.ravel(order=\"F\")`` "
"とします．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:221
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10578
msgid "Plot the ImageData"
msgstr "ImageDataのプロット"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:235
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10625
msgid "PyVista has several examples that use ``ImageData``."
msgstr "PyVista には ``ImageData`` を使う例がいくつかあります．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:237
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10627
msgid ""
"See the PyVista documentation for further details on `Volume Rendering "
"<https://docs.pyvista.org/examples/02-plot/volume.html>`_"
msgstr ""
"`ボリュームレンダリング <https://docs.pyvista.org/examples/02-plot/volume.html>`_ "
"の詳細については，PyVistaのドキュメントを参照してください"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:240
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10630
msgid "Here's one of these example datasets:"
msgstr "以下にデータセットの例を挙げます:"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:289
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10750
msgid ""
":download:`Download Jupyter notebook: c_create-uniform-grid.ipynb <c_create-"
"uniform-grid.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: c_create-uniform-grid.ipynb <c_create-"
"uniform-grid.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:293
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10754
msgid ""
":download:`Download Python source code: c_create-uniform-grid.py <c_create-"
"uniform-grid.py>`"
msgstr ""
":download:`Download Python source code: c_create-uniform-grid.py <c_create-"
"uniform-grid.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/c_create-uniform-grid.rst:297
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10758
msgid ""
":download:`Download zipped: c_create-uniform-grid.zip <c_create-uniform-"
"grid.zip>`"
msgstr ""
":download:`Download zipped: c_create-uniform-grid.zip <c_create-uniform-"
"grid.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_02_mesh_exercises_d_create-"
"tri-surface.py>` to download the full example code. or to run this example "
"in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_02_mesh_exercises_d_create-tri-surface.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:24
msgid "Create Triangulated Surface"
msgstr "三角形状のサーフェスを作成する"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:26
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:26
msgid ""
"Create a surface from a set of points through a Delaunay triangulation."
msgstr "ドロネーの三角形分割により，点群から曲面を作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:29
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:29
msgid ""
"We will use a filter from PyVista to perform our triangulation: `delaunay_2d"
" "
"<https://docs.pyvista.org/api/core/_autosummary/pyvista.PolyData.delaunay_2d.html>`_."
msgstr ""
"PyVistaのフィルターを使って三角形分割を行います： `delaunay_2d "
"<https://docs.pyvista.org/api/core/_autosummary/pyvista.PolyData.delaunay_2d.html>`_"
" ．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:49
msgid "Simple Triangulations"
msgstr "単純な三角形分割"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:45
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:51
msgid "First, create some points for the surface."
msgstr "まず，サーフェス用のポイントをいくつか作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:67
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:89
msgid ""
"Now use those points to create a point cloud PyVista data object. This will "
"be encompassed in a :class:`pyvista.PolyData` object."
msgstr ""
"次に，これらの点を使って，点群PyVistaデータオブジェクトを作成します．これは :class:`pyvista.PolyData` "
"オブジェクトに包含されることになります．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:82
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:115
msgid ""
"Now that we have a PyVista data structure of the points, we can perform a "
"triangulation to turn those boring discrete points into a connected surface."
" See :func:`pyvista.UnstructuredGridFilters.delaunay_2d`."
msgstr ""
"点のPyVistaデータ構造ができたので，三角形分割を実行して，つまらない離散点を接続された曲面に変えることができます．  "
":func:`pyvista.UnstructuredGridFilters.delaunay_2d` を参照してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:95
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:220
msgid "Apply the ``delaunay_2d`` filter."
msgstr "``delaunay_2d`` フィルタを適用します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:112
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:248
msgid "Clean Edges & Triangulations"
msgstr "クリーンエッジと三角形分割"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:141
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:312
msgid "Run the triangulation on these points"
msgstr "これらの点に対して三角測量を実行します"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:153
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:335
msgid ""
"Note that some of the outer edges are unconstrained and the triangulation "
"added unwanted triangles. We can mitigate that with the ``alpha`` parameter."
msgstr ""
"外側のエッジの一部は拘束されておらず，三角形分割によって不要な三角形が追加されていることに注意してください．私たちは ``alpha`` "
"パラメータでそれを緩和します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:190
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:393
msgid ""
":download:`Download Jupyter notebook: d_create-tri-surface.ipynb <d_create-"
"tri-surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: d_create-tri-surface.ipynb <d_create-"
"tri-surface.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:194
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:389
msgid ""
":download:`Download Python source code: d_create-tri-surface.py <d_create-"
"tri-surface.py>`"
msgstr ""
":download:`Download Python source code: d_create-tri-surface.py <d_create-"
"tri-surface.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/d_create-tri-surface.rst:198
msgid ""
":download:`Download zipped: d_create-tri-surface.zip <d_create-tri-"
"surface.zip>`"
msgstr ""
":download:`Download zipped: d_create-tri-surface.zip <d_create-tri-"
"surface.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_02_mesh_exercises_e_read-"
"file.py>` to download the full example code. or to run this example in your "
"browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_02_mesh_exercises_e_read-file.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:24
msgid "Load and Plot from a File"
msgstr "ファイルからロードおよびプロットする"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:26
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:26
msgid "Read a dataset from a known file type."
msgstr "既知のファイルタイプからデータセットを読み取ります．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:30
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:30
msgid ""
"We try to make loading a mesh as easy as possible - if your data is in one "
"of the many supported file formats, simply use :func:`pyvista.read` to load "
"your spatially referenced dataset into a PyVista mesh object."
msgstr ""
"データがサポートされている多くのファイルフォーマットのうちの1つであれば， :func:`pyvista.read` "
"を使って，空間参照されたデータセットを PyVista メッシュオブジェクトに読み込むだけで，メッシュをできるだけ簡単にロードできるようにします．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:34
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:34
msgid ""
"The following code block uses a built-in example file and displays an "
"airplane mesh."
msgstr "次のコードブロックでは，組み込みのサンプルファイルを使用して，飛行機のメッシュを表示します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:55
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:139
msgid ""
"PyVista supports a wide variety of file formats. The supported file "
"extensions are listed in an internal function:"
msgstr "PyVistaは様々なファイル形式をサポートしています．サポートされているファイル拡張子は，内部関数にリストアップされています．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:68
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:308
msgid ""
"The following code block uses a built-in example file, displays an airplane "
"mesh and returns the camera's position:"
msgstr "次のコードブロックでは，組み込みのサンプルファイルを使用して，飛行機のメッシュを表示し，カメラの位置を取得します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:83
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:335
msgid ""
"Note the above filename, it's a ``.ply`` file - one of the many supported "
"formats in PyVista."
msgstr "上記のファイル名に注意してください．これは ``.ply`` ファイルで，PyVistaでサポートされている多くのフォーマットの1つです．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:86
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:338
msgid "Use ``pv.read`` to load the file as a mesh:"
msgstr "ファイルをメッシュとして読み込むには， ``pv.read`` を使用します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:100
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:363
msgid "The points from the mesh are directly accessible as a NumPy array:"
msgstr "メッシュからの点は，NumPyの配列として直接アクセスできます．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:112
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:393
msgid "The faces from the mesh are also directly accessible as a NumPy array:"
msgstr "また，メッシュからの面はNumPyの配列として直接アクセスすることができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:125
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:424
msgid ""
"Loading other files types is just as easy! Simply pass your file path to the"
" :func:`pyvista.read` function and that's it!"
msgstr "他のファイルタイプのロードも同じくらい簡単です．ファイルパスを :func:`pyvista.read` 関数に渡すだけです．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:128
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:427
msgid ""
"Here are a few other examples - simply replace ``examples.download_*`` in "
"the examples below with ``pyvista.read('path/to/you/file.ext')``"
msgstr ""
"以下の例の ``examples.download_*`` を ``pyvista.read('path/to/you/file.ext')`` "
"に置き換えるだけで，他のいくつかの例があります．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:133
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:432
msgid "Example STL file:"
msgstr "STLファイルの例:"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:146
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:456
msgid "Example OBJ file"
msgstr "OBJファイルの例:"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:159
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:480
msgid "Example BYU file"
msgstr "BYUファイルの例:"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:172
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:504
msgid "Example VTK file"
msgstr "VTKファイルの例:"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:188
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:531
msgid ""
"Read a file yourself with :func:`pyvista.read`. If you have a supported file"
" format, use that! Otherwise, download this file: "
"https://github.com/pyvista/pyvista-"
"tutorial/raw/main/tutorial/02_mesh/scipy.vtk"
msgstr ""
":func:`pyvista.read` "
"を使って，自分でファイルを読み込んでください．サポートされているファイル形式があれば，それを使ってください．そうでない場合は，このファイルをダウンロードしてください:"
" https://github.com/pyvista/pyvista-"
"tutorial/raw/main/tutorial/02_mesh/scipy.vtk"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:227
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:581
msgid ""
":download:`Download Jupyter notebook: e_read-file.ipynb <e_read-file.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: e_read-file.ipynb <e_read-file.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:231
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:585
msgid ""
":download:`Download Python source code: e_read-file.py <e_read-file.py>`"
msgstr ""
":download:`Download Python source code: e_read-file.py <e_read-file.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/e_read-file.rst:235
msgid ":download:`Download zipped: e_read-file.zip <e_read-file.zip>`"
msgstr ":download:`Download zipped: e_read-file.zip <e_read-file.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/index.rst:6
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:293
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/index.rst:6
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:443
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/index.rst:6
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:239
msgid "Do it yourself"
msgstr "やってみよう"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/index.rst:25
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:312
msgid ":ref:`sphx_glr_tutorial_02_mesh_exercises_b_create-point-cloud.py`"
msgstr ":ref:`sphx_glr_tutorial_02_mesh_exercises_b_create-point-cloud.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/index.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:329
msgid ":ref:`sphx_glr_tutorial_02_mesh_exercises_c_create-uniform-grid.py`"
msgstr ":ref:`sphx_glr_tutorial_02_mesh_exercises_c_create-uniform-grid.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/index.rst:59
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:346
msgid ":ref:`sphx_glr_tutorial_02_mesh_exercises_d_create-tri-surface.py`"
msgstr ":ref:`sphx_glr_tutorial_02_mesh_exercises_d_create-tri-surface.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/index.rst:76
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:363
msgid ":ref:`sphx_glr_tutorial_02_mesh_exercises_e_read-file.py`"
msgstr ":ref:`sphx_glr_tutorial_02_mesh_exercises_e_read-file.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 4 files **from "
"tutorial/02_mesh/exercises**:"
msgstr ""
"**00:00.000** total execution time for 4 files **from "
"tutorial/02_mesh/exercises**:"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_02_mesh_exercises_b_create-point-cloud.py` "
"(``b_create-point-cloud.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_02_mesh_exercises_b_create-point-cloud.py` "
"(``b_create-point-cloud.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_tutorial_02_mesh_exercises_c_create-uniform-grid.py` "
"(``c_create-uniform-grid.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_02_mesh_exercises_c_create-uniform-grid.py` "
"(``c_create-uniform-grid.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_tutorial_02_mesh_exercises_d_create-tri-surface.py` "
"(``d_create-tri-surface.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_02_mesh_exercises_d_create-tri-surface.py` "
"(``d_create-tri-surface.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/exercises/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_tutorial_02_mesh_exercises_e_read-file.py` (``e_read-"
"file.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_02_mesh_exercises_e_read-file.py` (``e_read-"
"file.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:6
msgid "What is a Mesh?"
msgstr "メッシュとは?"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:13
msgid ""
"This section of the tutorial was adopted from `What is a mesh? "
"<https://docs.pyvista.org/user-guide/what-is-a-mesh.html>`_ chapter of the "
"User Guide in the PyVista documentation."
msgstr ""
"チュートリアルのこのセクションは，PyVista ドキュメントのユーザーガイドの `What is a mesh? "
"<https://docs.pyvista.org/user-guide/what-is-a-mesh.html>`_ の章から採用されています．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:17
msgid ""
"In PyVista, a mesh is any spatially referenced information and usually "
"consists of geometrical representations of a surface or volume in 3D space."
"  We commonly refer to any spatially referenced dataset as a mesh, so often "
"the distinction between a mesh, a grid, and a volume can get fuzzy – but "
"that does not matter in PyVista. If you have a dataset that is a surface "
"mesh with 2D geometries like triangles, we call it a mesh, and if you have a"
" dataset with 3D geometries like voxels, tetrahedra, hexahedra, etc., then "
"we also call that a mesh! Why? Because it is simple that way."
msgstr ""
"PyVistaでは，メッシュは空間的に参照される情報であり，通常は3 "
"D空間内の表面またはボリュームのジオメトリ表現で構成されます．一般的に，空間的に参照されるデータセットはメッシュと呼ばれるため，メッシュ，グリッド，ボリュームの区別があいまいになることがありますが，PyVistaでは関係ありません．三角形のような2"
" Dジオメトリを持つ表面メッシュのデータセットがある場合はメッシュと呼び，ボクセル，4面体，6面体などの3 "
"Dジオメトリのデータセットがある場合はメッシュと呼びます．なぜか? その方が簡単だからです．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:27
msgid ""
"In all spatially referenced datasets, there lies an underlying mesh "
"structure – the connectivity or geometry between nodes to define cells. "
"Whether those cells are 2D or 3D is not always of importance and we've "
"worked hard to make PyVista work for datasets of either or mixed geometries "
"so that you as a user do not have to get bogged down in the nuances."
msgstr ""
"空間的に参照されるすべてのデータセットには，基礎となるメッシュ構造 – セルを定義するノード間の接続またはジオメトリが存在します．これらのセルが2 "
"Dであるか3 "
"Dであるかは常に重要ではなく，ユーザがニュアンスにとらわれないように，いずれかのジオメトリまたは混合ジオメトリのデータセットでPyVistaを動作させるために私たちは懸命に努力してきました．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:34
msgid ""
"This is a very high level overview of the PyVista API to familiarize users "
"with PyVista's data structures.  For further details regarding our data "
"model, how it relates to the underlying VTK data model, and how to create "
"your own meshes, please see `this detailed guide of the Data Model "
"<https://docs.pyvista.org/user-guide/data_model.html>`_."
msgstr ""
"これは，PyVistaのデータ構造に慣れるための，PyVista APIの非常にハイレベルな概要です． "
"データモデルの詳細，VTKデータモデルとの関係，独自のメッシュを作成する方法については， `データモデルの詳細ガイド "
"<https://docs.pyvista.org/user-guide/data_model.html>`_ を参照してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:41
msgid "What is a point?"
msgstr "ポイントとは？"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:42
msgid ""
"Points are the vertices of the mesh – the Cartesian coordinates of the "
"underlying structure. All PyVista datasets (meshes!) have points and "
"sometimes, you can have a mesh that only has points – like a point cloud."
msgstr ""
"ポイントはメッシュの頂点，つまり基礎となる直交座標です．すべてのPyVistaデータセット (メッシュ!) "
"にはポイントがあり，場合によっては，ポイントクラウドのようにポイントのみを持つメッシュを作成できます．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:47
msgid ""
"For example, you can create a point cloud mesh using the "
":class:`pyvista.PolyData` class which is built for meshes that have 1D and "
"2D cell types (we'll get into what a cell is briefly)."
msgstr ""
"たとえば，1 Dおよび2 Dのセルタイプ(セルとは何か簡単に説明します)を持つメッシュ用に作成された :class:`pyvista.PolyData`"
" クラスを使用して，ポイントクラウドメッシュを作成できます．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:51
msgid ""
"Let's start with a point cloud – this is a mesh type that only has vertices."
" You can create one by defining a 2D array of Cartesian coordinates like so:"
msgstr "ポイントクラウドから始めましょう – これは頂点のみを持つメッシュタイプです．作成するには，2 D配列の直交座標を次のように定義します．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:99
msgid "Or this triangulated surface:"
msgstr "または，この三角形表面:"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:158
msgid ":attr:`point_data <pyvista.DataSet.point_data>`"
msgstr ":attr:`point_data <pyvista.DataSet.point_data>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:159
msgid ":attr:`cell_data <pyvista.DataSet.cell_data>`"
msgstr ":attr:`cell_data <pyvista.DataSet.cell_data>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:160
msgid ":attr:`field_data <pyvista.DataObject.field_data>`"
msgstr ":attr:`field_data <pyvista.DataObject.field_data>`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:164
msgid ""
"Point data refers to arrays of values (scalars, vectors, etc.) that live on "
"each point of the mesh.  Each element in an attribute array corresponds to a"
" point in the mesh.  Let's create some point data for the beam mesh.  When "
"plotting, the values between points are interpolated across the cells."
msgstr ""
"点データとは，メッシュの各点に存在する値（スカラー，ベクトルなど）の配列のことです．属性配列の各要素は，メッシュの各点に対応します．梁のメッシュの点データを作ってみましょう．プロットする場合，点間の値はセルをまたいで補間されます．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:178
msgid ""
"Cell data refers to arrays of values (scalars, vectors, etc.) that live "
"throughout each cell of the mesh.  That is the entire cell (2D face or 3D "
"volume) is assigned the value of that attribute."
msgstr ""
"セルデータは，メッシュの各セル全体に存在する値の配列(スカラー，ベクトルなど)を参照します．つまり，セル全体(2 D面または3 "
"D体積)にそのアトリビュートの値が割り当てられます．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:212
msgid ""
"Field data is not directly associated with either the points or cells but "
"still should be attached to the mesh.  This may be a string array storing "
"notes, or even indices of a `Collision "
"<https://docs.pyvista.org/version/stable/examples/01-filter/collisions.html>`_."
msgstr ""
"フィールドデータはポイントやセルとは直接関連していませんが，メッシュに添付する必要があります． これはメモを格納した文字列の配列であったり，あるいは "
"`Collision "
"<https://docs.pyvista.org/version/stable/examples/01-filter/collisions.html>`_"
" のインデックスであったりします．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:222
msgid ""
"Here's how we assign values to cell attributes and plot it.  Here, we "
"generate cube containing 6 faces and assign each face an integer from "
"``range(6)`` and then have it plotted."
msgstr ""
"ここでは，セルの属性に値を割り当て，それをプロットする方法を紹介します． ここでは，6つの面を含む立方体を生成し，それぞれの面に "
"``range(6)`` から整数を割り当てて，それをプロットしています．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:244
msgid ""
"We use :func:`pyvista.PolyDataFilters.clean` to merge the faces of the cube "
"since, by default, the cube is created with unmerged faces and duplicate "
"points."
msgstr ""
"デフォルトでは，立方体はマージされていない面と重複したポイントで作成されるので，立方体の面をマージするために "
":func:`pyvista.PolyDataFilters.clean` を使用しています．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:252
msgid ""
"For more examples, please see the mesh creation section of the `PyVista "
"Examples Gallery <https://docs.pyvista.org/examples/index.html#mesh-"
"creation>`_."
msgstr ""
"その他の例については， `PyVista Examples Gallery "
"<https://docs.pyvista.org/examples/index.html#mesh-creation>`_ "
"のメッシュ作成セクションを参照してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:272
msgid ":ref:`sphx_glr_tutorial_02_mesh_a_lesson_mesh.py`"
msgstr ":ref:`sphx_glr_tutorial_02_mesh_a_lesson_mesh.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:397
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/index.rst:25
msgid ":ref:`sphx_glr_tutorial_02_mesh_solutions_b_create-point-cloud.py`"
msgstr ":ref:`sphx_glr_tutorial_02_mesh_solutions_b_create-point-cloud.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:414
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/index.rst:42
msgid ":ref:`sphx_glr_tutorial_02_mesh_solutions_c_create-uniform-grid.py`"
msgstr ":ref:`sphx_glr_tutorial_02_mesh_solutions_c_create-uniform-grid.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:431
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/index.rst:59
msgid ":ref:`sphx_glr_tutorial_02_mesh_solutions_d_create-tri-surface.py`"
msgstr ":ref:`sphx_glr_tutorial_02_mesh_solutions_d_create-tri-surface.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/index.rst:448
#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/index.rst:76
msgid ":ref:`sphx_glr_tutorial_02_mesh_solutions_e_read-file.py`"
msgstr ":ref:`sphx_glr_tutorial_02_mesh_solutions_e_read-file.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/sg_execution_times.rst:9
msgid ""
"**00:02.800** total execution time for 1 file **from tutorial/02_mesh**:"
msgstr ""
"**00:02.800** total execution time for 1 file **from tutorial/02_mesh**:"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_02_mesh_a_lesson_mesh.py` (``a_lesson_mesh.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_02_mesh_a_lesson_mesh.py` (``a_lesson_mesh.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/sg_execution_times.rst:36
msgid "00:02.800"
msgstr "00:02.800"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_02_mesh_solutions_b_create-"
"point-cloud.py>` to download the full example code. or to run this example "
"in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_02_mesh_solutions_b_create-point-cloud.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/b_create-point-cloud.rst:434
msgid "**Total running time of the script:** (0 minutes 3.428 seconds)"
msgstr "**Total running time of the script:** (0 minutes 3.428 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_02_mesh_solutions_c_create-"
"uniform-grid.py>` to download the full example code. or to run this example "
"in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_02_mesh_solutions_c_create-uniform-grid.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:52
msgid ""
"Create the 3D NumPy array of spatially referenced data.  This is spatially "
"referenced such that the grid is ``(20, 5, 10)`` ``(nx, ny, nz)``."
msgstr ""
"空間的に参照されるデータの3 D NumPy配列を作成します．これは，グリッドが ``(20, 5, 10)``, ``(nx, ny, nz)`` "
"であるように空間的に参照さます．"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:112
msgid "Edit the spatial reference"
msgstr "空間リファレンスを編集する"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/c_create-uniform-grid.rst:10732
msgid "**Total running time of the script:** (0 minutes 5.189 seconds)"
msgstr "**Total running time of the script:** (0 minutes 5.189 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_tutorial_02_mesh_solutions_d_create-tri-"
"surface.py>` to download the full example code or to run this example in "
"your browser via Binder"
msgstr ""
"Click :ref:`here <sphx_glr_download_tutorial_02_mesh_solutions_d_create-tri-"
"surface.py>` to download the full example code or to run this example in "
"your browser via Binder"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/d_create-tri-surface.rst:370
msgid "**Total running time of the script:** ( 0 minutes  1.597 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.597 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_02_mesh_solutions_e_read-"
"file.py>` to download the full example code or to run this example in your "
"browser via Binder"
msgstr ""
":ref:`Go to the end <sphx_glr_download_tutorial_02_mesh_solutions_e_read-"
"file.py>` to download the full example code or to run this example in your "
"browser via Binder"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/e_read-file.rst:563
msgid "**Total running time of the script:** (0 minutes 2.113 seconds)"
msgstr "**Total running time of the script:** (0 minutes 2.113 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:9
msgid ""
"**00:08.617** total execution time for 4 files **from "
"tutorial/02_mesh/solutions**:"
msgstr ""
"**00:08.617** total execution time for 4 files **from "
"tutorial/02_mesh/solutions**:"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_02_mesh_solutions_c_create-uniform-grid.py` "
"(``c_create-uniform-grid.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_02_mesh_solutions_c_create-uniform-grid.py` "
"(``c_create-uniform-grid.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:36
msgid "00:05.189"
msgstr "00:05.189"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_tutorial_02_mesh_solutions_b_create-point-cloud.py` "
"(``b_create-point-cloud.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_02_mesh_solutions_b_create-point-cloud.py` "
"(``b_create-point-cloud.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:39
msgid "00:03.428"
msgstr "00:03.428"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_tutorial_02_mesh_solutions_d_create-tri-surface.py` "
"(``d_create-tri-surface.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_02_mesh_solutions_d_create-tri-surface.py` "
"(``d_create-tri-surface.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/02_mesh/solutions/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_tutorial_02_mesh_solutions_e_read-file.py` (``e_read-"
"file.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_02_mesh_solutions_e_read-file.py` (``e_read-"
"file.py``)"

msgid ""
"point-cloud.py>` to download the full example code or to run this example in"
" your browser via Binder"
msgstr ""
"point-cloud.py>` to download the full example code or to run this example in"
" your browser via Binder"

msgid ""
"Point clouds are generally constructed in the :class:`pyvista.PolyData` "
"class and can easily have scalar/vector data arrays associated with the "
"point cloud. In this example, we'll work a bit backwards using a point cloud"
" that that is available from our ``examples`` module. This however is no "
"different than creating a PyVista mesh with your own NumPy arrays of vertice"
" locations."
msgstr ""
"点群は一般に :class:`pyvista.PolyData` "
"クラスで構成され，点群に関連付けられたスカラー/ベクトルデータ配列を簡単に持つことができます．この例では， ``examples`` "
"モジュールから使用可能な点群を使用して，少し逆方向に作業します．ただし，これは独自の頂点位置のNumPy配列を使用してPyVistaメッシュを作成するのと同じです．"

msgid "Out:"
msgstr "Out:"

msgid ""
"Now that you have a NumPy array of points/vertices either from our sample "
"data or your own project, creating a PyVista mesh of those points:"
msgstr "サンプルデータまたは自分のプロジェクトからの点/頂点のNumPy配列ができたので，それらの点からPyVistaメッシュを作成します．"

msgid "Now, perform a sanity check"
msgstr "ここで，サニティチェックを実行します"

msgid ""
"And now that we have a PyVista mesh, we can plot it. Note that we add an "
"option to use eye dome lighting - this is a shading technique to improve "
"depth perception with point clouds (learn more about `EDL "
"<https://docs.pyvista.org/examples/02-plot/edl.html>`_)."
msgstr ""
"これでPyVistaメッシュができたので，プロットすることができます．ここでは，eye "
"domeライティングを使用するオプションを追加します．これは，ポイントクラウド( `EDL "
"<https://docs.pyvista.org/examples/02-plot/edl.html>`_ "
"についてもっと学ぶ)を使用して深さの認識を向上させるシェーディング技法です．"

msgid ""
"Now what if you have data attributes (scalar/vector arrays) that you'd like "
"to associate with every node of your mesh? You can easily add NumPy data "
"arrays that have a length equal to the number of points in the mesh along "
"the first axis. For example, lets add a few arrays to this new "
"``point_cloud`` mesh."
msgstr ""
"ここで，メッシュのすべてのノードに関連付けるデータアトリビュート(スカラー/ベクトル配列)があるとします．最初の軸に沿ったメッシュ内の点の数と同じ長さのNumPyデータ配列を簡単に追加できます．例えば，この新しい"
" ``point_cloud`` メッシュにいくつかの配列を追加しましょう．"

msgid ""
"Hint, you can use a component of the ``points`` array or use the "
"``n_points`` property of the mesh object to make an array of that length."
msgstr ""
"ヒント: ``points`` 配列のコンポーネントを使用するか，メッシュオブジェクトの ``n_points`` "
"プロパティを使用すると，その長さの配列を作成することができます．"

msgid "Add that data to the mesh with the name \"elevation\""
msgstr "そのデータを \"elevation\" という名前でメッシュに追加します．"

msgid ""
"And now we can plot the point cloud with that elevation data. PyVista is "
"smart enough to plot the scalar array you added by default. Note that this "
"time, we specify to render every point as its own sphere."
msgstr ""
"そして，その標高データを使って点群をプロットすることができるようになりました．PyVistaは賢いので，デフォルトで追加したスカラー配列をプロットしてくれます．今回は，すべての点を球体としてレンダリングするように指定したことに注意してください．"

msgid ""
"That data is kind of boring, right? You can also add data arrays with more "
"than one scalar value - perhaps a vector with three elements? Let's make a "
"little function that will compute vectors for every node in the point cloud "
"and add those vectors to the mesh."
msgstr ""
"そのデータは退屈ですよね?複数のスカラ値を持つデータ配列，例えば3つの要素を持つベクトルを追加することもできます．ポイントクラウド内のすべてのノードのベクトルを計算し，それらのベクトルをメッシュに追加する簡単な関数を作成します．"

msgid "This time, we're going to create a totally new, random point cloud."
msgstr "今回は，全く新しいランダムな点群を作成します．"

msgid ""
"Now we can make arrows using those vectors using the glyph filter (see `this"
" example <https://docs.pyvista.org/examples/01-filter/glyphs.html>`_ for "
"more details)."
msgstr ""
"さて，これらのベクトルを使って，グリフフィルタで矢印を作ることができます（詳しくは `この例 "
"<https://docs.pyvista.org/examples/01-filter/glyphs.html>`_ を参照してください）．"

msgid "**Total running time of the script:** ( 0 minutes  4.447 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  4.447 seconds)"

msgid ""
"uniform-grid.py>` to download the full example code or to run this example "
"in your browser via Binder"
msgstr ""
"uniform-grid.py>` to download the full example code or to run this example "
"in your browser via Binder"

msgid ""
"Take a 3D NumPy array of data values that holds some spatial data where each"
" axis corresponds to the XYZ cartesian axes. This example will create a "
":class:`pyvista.ImageData` object that will hold the spatial reference for a"
" 3D grid which a 3D NumPy array of values can be plotted against."
msgstr ""
"各軸がXYZデカルト軸に対応する空間データを保持するデータ値の3 D NumPy配列を取ります．この例では，値の3 D NumPy配列をプロットできる3"
" Dグリッドの空間参照を保持する :class:`pyvista.ImageData` オブジェクトを作成します．"

msgid ""
"Create the 3D NumPy array of spatially referenced data. This is spatially "
"referenced such that the grid is 20 by 5 by 10 (nx by ny by nz)"
msgstr ""
"空間的に参照されるデータの3 D NumPy配列を作成します．これは，グリッドが20×5×10 (nx × ny × "
"nz)であるように空間的に参照さます"

msgid "Create the PyVista object"
msgstr "PyVistaオブジェクトの作成"

msgid ""
"Set the grid dimensions: shape + 1 because we want to inject our values on"
msgstr "に値を注入したいので，グリッドの寸法を shape + 1 に設定します．"

msgid "the CELL data"
msgstr "CELLデータ"

msgid "Create the PyVista object and set the same attributes like above"
msgstr "PyVistaオブジェクトを作成し，上記と同じように属性を設定します．"

msgid ""
"Here are some example 3D data using random data. Feel free to use your own "
"3D numpy array here!"
msgstr "ランダムデータを使った3Dデータの例を紹介します．ここで，ご自分の3D numpy配列を自由に使ってみてください!"

msgid "Create the :class:`pyvista.ImageData`"
msgstr "クラス :`pyvista.ImageData` を作成します．"

msgid ""
"Hint, you will likely need to ``ravel`` the array with F-ordering: "
"``arr.ravel(order=\"F\")``"
msgstr ""
"ヒント: おそらく F-ordering で配列を ``ravel`` する必要があります: ``arr.ravel(order=\"F\")`` "
"とします．"

msgid "Here are some examples of this kind of data in PyVista!"
msgstr "このようなデータをPyVistaで表示した例をご紹介します!"

msgid "**Total running time of the script:** ( 0 minutes  7.066 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  7.066 seconds)"

msgid ""
"surface.py>` to download the full example code or to run this example in "
"your browser via Binder"
msgstr ""
"surface.py>` to download the full example code or to run this example in "
"your browser via Binder"

msgid ""
"We will use a filter from PyVista to perform our triangulation: `delaunay_2d"
" "
"<https://docs.pyvista.org/api/core/_autosummary/pyvista.PolyData.delaunay_2d.html>`_"
msgstr ""
"PyVistaのフィルターを使って三角形分割を行います： `delaunay_2d "
"<https://docs.pyvista.org/api/core/_autosummary/pyvista.PolyData.delaunay_2d.html>`_"

msgid ""
"Now that we have a PyVista data structure of the points, we can perform a "
"triangulation to turn those boring discrete points into a connected surface."
" See "
"https://docs.pyvista.org/api/core/_autosummary/pyvista.PolyData.delaunay_2d.html"
msgstr ""
"点のPyVistaデータ構造ができたので，三角形分割を実行して，つまらない離散点を接続された曲面に変えることができます． "
"https://docs.pyvista.org/api/core/_autosummary/pyvista.PolyData.delaunay_2d.html"
" を参照してください．"

msgid "Apply the `delaunay_2d` filter"
msgstr "`delaunay_2d` フィルタを適用します．"

msgid "**Total running time of the script:** ( 0 minutes  1.275 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.275 seconds)"

msgid ""
"file.py>` to download the full example code or to run this example in your "
"browser via Binder"
msgstr ""
"file.py>` to download the full example code or to run this example in your "
"browser via Binder"

msgid "**Total running time of the script:** ( 0 minutes  2.604 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.604 seconds)"





msgid ""
msgstr ""

msgid ""
"file.py``)"
msgstr ""
"file.py``)"

msgid "00:02.604"
msgstr "00:02.604"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/sg_execution_times.rst:11
msgid "0.0 MB"
msgstr "0.0 MB"

msgid ""
"(``b_create-point-cloud.py``)"
msgstr ""
"(``b_create-point-cloud.py``)"

msgid ""
"(``c_create-uniform-grid.py``)"
msgstr ""
"(``c_create-uniform-grid.py``)"

msgid ""
"(``d_create-tri-surface.py``)"
msgstr ""
"(``d_create-tri-surface.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_03_figures_a_lesson_figures.py>` to download the"
" full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_03_figures_a_lesson_figures.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:44
msgid "``add_mesh``"
msgstr "``add_mesh``"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:46
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:43
msgid ""
"When plotting, users must first create a :class:`pyvista.Plotter` instance "
"(much like a Matplotlib figure). Then data are added to the plotter instance"
" through the :func:`pyvista.Plotter.add_mesh` method. This workflow "
"typically looks like:"
msgstr ""
"プロットする場合，ユーザーはまず :class:`pyvista.Plotter` のインスタンスを作成する必要があります（Matplotlib "
"の図形のようなものです）．それから， :func:`pyvista.Plotter.add_mesh` "
"メソッドを通して，プロッタのインスタンスにデータを追加します．このワークフローは，典型的には次のようになります．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:93
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:70
msgid ""
"You can customize how that mesh is displayed through the parameters of the "
":func:`pyvista.Plotter.add_mesh` method. For example, we can change the "
"colormap via the ``cmap`` argument:"
msgstr ""
":func:`pyvista.Plotter.add_mesh` "
"メソッドのパラメータを使用すると，メッシュの表示方法をカスタマイズすることができます．例えば， ``cmap`` "
"引数でカラーマップを変更することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:140
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:82
msgid "Or show the edges of the mesh with ``show_edges``:"
msgstr "また， ``show_edges`` でメッシュのエッジを表示することもできます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:187
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:92
msgid ""
"Or adjust the opacity to be a scalar value or linear transfer function via "
"the ``opacity`` argument:"
msgstr "また， ``opacity`` 引数で不透明度をスカラー値や線形伝達関数に調整することもできます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:236
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:106
msgid ""
"Take a look at all of the options for `add_mesh "
"<https://docs.pyvista.org/api/plotting/_autosummary/pyvista.Plotter.add_mesh.html>`_."
msgstr ""
"`add_mesh "
"<https://docs.pyvista.org/api/plotting/_autosummary/pyvista.Plotter.add_mesh.html>`_"
" のすべてのオプションを見てみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:238
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:108
msgid ""
"The ``add_mesh`` method can be called over and over to add different data to"
" the same ``Plotter`` scene. For example, we can create many different mesh "
"objects and plot them together:"
msgstr ""
"``add_mesh`` メソッドは，同じ ``Plotter`` "
"のシーンに異なるデータを追加するために何度も呼び出すことができます．例えば，多くの異なるメッシュオブジェクトを作成し，それらを一緒にプロットすることができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:307
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:145
msgid "Subplotting"
msgstr "サブプロット"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:309
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:147
msgid ""
"Creating side-by-side comparisons of datasets is easy with PyVista's "
"subplotting API. Get started by specifying the shape of the "
":class:`pyvista.Plotter` object then registering the active subplot by the "
":func:`pyvista.Plotter.subplot` method much like how you subplot with "
"Matplotlib's API."
msgstr ""
"PyVistaのサブプロットAPIを使えば，データセットを横に並べて比較することも簡単にできます．まず :class:`pyvista.Plotter`"
" オブジェクトの形状を指定して，次に :func:`pyvista.Plotter.subplot` "
"メソッドでアクティブなサブプロットを登録します．これは Matplotlib の API でサブプロットを行う方法と同じように行います．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:361
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:164
msgid ""
"Below is an example of side-by-side comparisons of the contours and slices "
"of a single dataset."
msgstr "以下は，1つのデータセットのコンターとスライスを並べて比較した例です．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:365
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:168
msgid ""
"You can link the cameras of both views with the "
":func:`pyvista.Plotter.link_views` method"
msgstr "両方のビューのカメラをリンクさせるには :func:`pyvista.Plotter.link_views` メソッドを使用します．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:423
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:241
msgid "Axes and Bounds"
msgstr "軸と境界"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:425
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:243
msgid "Axes can be added to the scene with :func:`pyvista.Plotter.show_axes`"
msgstr "軸は :func:`pyvista.Plotter.show_axes` を使ってシーンに追加することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:476
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:257
msgid "And bounds similarly with :func:`pyvista.Plotter.show_bounds`"
msgstr "境界線も同様に :func:`pyvista.Plotter.show_bounds` で表示されます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:480
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:261
msgid ""
"See `Plotting Bounds "
"<https://docs.pyvista.org/examples/02-plot/bounds.html>`_ for more details."
msgstr ""
"詳しくは `Plotting Bounds "
"<https://docs.pyvista.org/examples/02-plot/bounds.html>`_ を参照してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:541
msgid "**Total running time of the script:** (0 minutes 4.679 seconds)"
msgstr "**Total running time of the script:** (0 minutes 4.679 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:559
msgid ""
":download:`Download Jupyter notebook: a_lesson_figures.ipynb "
"<a_lesson_figures.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_lesson_figures.ipynb "
"<a_lesson_figures.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:563
msgid ""
":download:`Download Python source code: a_lesson_figures.py "
"<a_lesson_figures.py>`"
msgstr ""
":download:`Download Python source code: a_lesson_figures.py "
"<a_lesson_figures.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/a_lesson_figures.rst:567
msgid ""
":download:`Download zipped: a_lesson_figures.zip <a_lesson_figures.zip>`"
msgstr ""
":download:`Download zipped: a_lesson_figures.zip <a_lesson_figures.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_03_figures_b_shading.py>` to"
" download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_03_figures_b_shading.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:24
msgid "Types of Shading"
msgstr "シェーディングのタイプ"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:26
msgid "Comparison of default, flat shading vs. smooth shading."
msgstr "デフォルトのフラットシェーディングとスムーズシェーディングの比較．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:45
msgid ""
"PyVista supports two types of shading: flat and smooth shading that uses "
"VTK's Phong shading algorithm."
msgstr ""
"PyVistaは，VTKのPhongシェーディングアルゴリズムを使用したフラットシェーディングとスムースシェーディングの2種類のシェーディングをサポートしています．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:48
msgid "This is a plot with the default flat shading."
msgstr "これは，デフォルトのフラットシェーディングを使ったプロットです．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:94
msgid "Here's the same sphere with smooth shading."
msgstr "同じ球体にスムースシェーディングを施したものがこちらです．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:139
msgid ""
"Note how smooth shading makes edges that should be sharp look odd, it's "
"because the points of these normals are averaged between two faces that have"
" a sharp angle between them.  You can avoid this by enabling "
"``split_sharp_edges``."
msgstr ""
"スムーズシェーディングによって，シャープであるべきエッジが奇妙に見えることに注意してください．これは，これらの法線のポイントが，鋭い角度を持つ2つの面の間で平均化されるためです．"
" これを避けるには ``split_sharp_edges`` を有効にします．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:145
msgid ""
"You can configure the splitting angle with the optional ``feature_angle`` "
"keyword argument."
msgstr "オプションの ``feature_angle`` キーワード引数で分割角度を構成することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:191
msgid ""
"We can even plot the edges that will be split using "
":func:`extract_feature_edges "
"<pyvista.PolyDataFilters.extract_feature_edges>`."
msgstr ""
":func:`extract_feature_edges "
"<pyvista.PolyDataFilters.extract_feature_edges>` "
"を使って，分割されるエッジをプロットすることもできます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:248
msgid ""
"The ``split_sharp_edges`` keyword argument is compatible with physically "
"based rendering as well."
msgstr "キーワード引数の ``split_sharp_edges`` は，物理ベースのレンダリングにも対応しています．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:309
msgid "**Total running time of the script:** (0 minutes 1.283 seconds)"
msgstr "**Total running time of the script:** (0 minutes 1.283 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:327
msgid ""
":download:`Download Jupyter notebook: b_shading.ipynb <b_shading.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: b_shading.ipynb <b_shading.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:331
msgid ":download:`Download Python source code: b_shading.py <b_shading.py>`"
msgstr ":download:`Download Python source code: b_shading.py <b_shading.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/b_shading.rst:335
msgid ":download:`Download zipped: b_shading.zip <b_shading.zip>`"
msgstr ":download:`Download zipped: b_shading.zip <b_shading.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_03_figures_bonus_d_pbr.py>` "
"to download the full example code. or to run this example in your browser "
"via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_03_figures_bonus_d_pbr.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:24
msgid "Physically Based Rendering"
msgstr "物理ベースのレンダリング"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:26
msgid ""
"VTK 9 introduced Physically Based Rendering (PBR) and we have exposed that "
"functionality in PyVista. Read the `blog about PBR "
"<https://blog.kitware.com/vtk-pbr/>`_ for more details."
msgstr ""
"VTK9は物理ベースレンダリング(PBR)を導入しており，その機能をPyVistaで公開しています．詳細については `blog about PBR "
"<https://blog.kitware.com/vtk-pbr/>`_ をお読みください．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:30
msgid ""
"PBR is only supported for :class:`pyvista.PolyData` and can be triggered via"
" the ``pbr`` keyword argument of ``add_mesh``. Also use the ``metallic`` and"
" ``roughness`` arguments for further control."
msgstr ""
"PBRは :class:`pyvista.PolyData` に対してのみサポートされており， ``add_mesh`` の ``pbr`` "
"キーワード引数を介して起動できます．また， ``metallic`` および ``roughness`` 引数を使用してさらに制御できます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:34
msgid ""
"Let's show off this functionality by rendering a high quality mesh of a "
"statue as though it were metallic."
msgstr "この機能を，彫像の高品質メッシュを金属のようにレンダリングすることで示しましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:64
msgid ""
"Let's render the mesh with a base color of \"linen\" to give it a metal "
"looking finish."
msgstr "ベースカラーが \"linen\" のメッシュをレンダリングして，メタルのような仕上がりにしてみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:118
msgid "Show the variation of the metallic and roughness parameters."
msgstr "メタリックパラメータと粗さパラメータの変化を表示します．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:120
msgid ""
"Plot with metallic increasing from left to right and roughness increasing "
"from bottom to top."
msgstr "左から右にメタリックが増加し，下から上に粗さが増加するようにプロットします．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:177
msgid "Combine custom lighting and physically based rendering."
msgstr "カスタム照明と物理ベースレンダリングを組み合わせます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:256
msgid "**Total running time of the script:** (0 minutes 48.207 seconds)"
msgstr "**Total running time of the script:** (0 minutes 48.207 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:274
msgid ":download:`Download Jupyter notebook: d_pbr.ipynb <d_pbr.ipynb>`"
msgstr ":download:`Download Jupyter notebook: d_pbr.ipynb <d_pbr.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:278
msgid ":download:`Download Python source code: d_pbr.py <d_pbr.py>`"
msgstr ":download:`Download Python source code: d_pbr.py <d_pbr.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/d_pbr.rst:282
msgid ":download:`Download zipped: d_pbr.zip <d_pbr.zip>`"
msgstr ":download:`Download zipped: d_pbr.zip <d_pbr.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_03_figures_bonus_e_labels.py>` to download the "
"full example code or to run this example in your browser via Binder"
msgstr ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_03_figures_bonus_e_labels.py>` to download the "
"full example code or to run this example in your browser via Binder"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:22
msgid "Label Points"
msgstr "ラベルポイント"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:24
msgid "Use string arrays in a point set to label points"
msgstr "ポイントセットで文字列配列を使用してポイントにラベルを付ける"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:44
msgid ""
"The :func:`pyvista.Plotter.add_point_labels` method makes it easy to add "
"point labels to a scene."
msgstr ""
":func:`pyvista.Plotter.add_point_labels` "
"メソッドを使用すると，シーンにポイントラベルを簡単に追加することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:194
msgid "Label Point Cloud"
msgstr "ラベル点群"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:196
msgid "Let's make a random point cloud and label each point in 3D space"
msgstr "ランダムな点群を作り，各点に3次元空間上のラベルを付けてみよう．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:215
msgid ""
"Add string labels to the point data - this associates a label with every "
"node:"
msgstr "文字列ラベルをポイントデータに追加します．これにより，各ノードにラベルが関連付けられます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:259
msgid ""
"Now plot the points with labels using "
":func:`pyvista.Plotter.add_point_labels`"
msgstr ":func:`pyvista.Plotter.add_point_labels` を使って，ラベルを付けて点をプロットします．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:300
msgid "Label Node Locations"
msgstr "ラベルノードの位置"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:302
msgid ""
"This example will label the nodes of a mesh with their coordinate locations"
msgstr "この例では，メッシュの節点に座標位置のラベルを付けます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:322
msgid "Create plotting class and add the unstructured grid"
msgstr "プロッティングクラスを作成し，非構造化グリッドを追加します"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:356
msgid "Label Scalar Values"
msgstr "ラベルスカラー値"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:358
msgid "This example will label each point with their scalar values"
msgstr "この例では，各ポイントにスカラー値のラベルを付けます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:415
msgid "**Total running time of the script:** (0 minutes 0.781 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.781 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:433
msgid ":download:`Download Jupyter notebook: e_labels.ipynb <e_labels.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: e_labels.ipynb <e_labels.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/e_labels.rst:437
msgid ":download:`Download Python source code: e_labels.py <e_labels.py>`"
msgstr ":download:`Download Python source code: e_labels.py <e_labels.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/g_orbit.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_tutorial_03_figures_bonus_g_orbit.py>` "
"to download the full example code or to run this example in your browser via"
" Binder"
msgstr ""
"Click :ref:`here <sphx_glr_download_tutorial_03_figures_bonus_g_orbit.py>` "
"to download the full example code or to run this example in your browser via"
" Binder"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/g_orbit.rst:24
msgid "Orbiting"
msgstr "オービット"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/g_orbit.rst:26
msgid "Orbit around a scene."
msgstr "シーンを周回します．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/g_orbit.rst:29
msgid ""
"The quality of the movie will be better when using "
"``p.open_movie('orbit.mp4')`` instead of ``p.open_gif('orbit.gif')``"
msgstr ""
"``p.open_gif('orbit.gif')`` ではなく， ``p.open_movie('orbit.mp4')`` "
"を使うと，ムービーの品質が向上します．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/g_orbit.rst:33
msgid ""
"For orbiting to work you first have to show the scene and leave the plotter "
"open with ``.show(auto_close=False)``.  You may also have to set "
"``pv.Plotter(off_screen=True)``"
msgstr ""
"軌道を描くには，まずシーンを表示し，プロッターを ``.show(auto_close=False)`` で開いたままにしておく必要があります． また，"
" ``pv.Plotter(off_screen=True)`` を設定する必要があるかもしれません．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/g_orbit.rst:38
msgid ""
"Use ``lighting=False`` to reduce the size of the color space to avoid "
"\"jittery\" GIFs when showing the scalar bar."
msgstr ""
"スカラーバーを表示する際に \"カクカク \"したGIFにならないように， ``lighting=False`` "
"を使って色空間のサイズを小さくしてください．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/g_orbit.rst:60
msgid "Orbit around the Mt. St Helens dataset."
msgstr "St Helens山のデータセット周辺のオービット．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/g_orbit.rst:169
msgid "**Total running time of the script:** ( 1 minutes  32.053 seconds)"
msgstr "**Total running time of the script:** ( 1 minutes  32.053 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/g_orbit.rst:188
msgid ":download:`Download Python source code: g_orbit.py <g_orbit.py>`"
msgstr ":download:`Download Python source code: g_orbit.py <g_orbit.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/g_orbit.rst:192
msgid ":download:`Download Jupyter notebook: g_orbit.ipynb <g_orbit.ipynb>`"
msgstr ":download:`Download Jupyter notebook: g_orbit.ipynb <g_orbit.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/index.rst:6
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:375
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/index.rst:6
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:205
msgid "Bonus Content"
msgstr "ボーナスコンテンツ"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/index.rst:25
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:394
msgid ":ref:`sphx_glr_tutorial_03_figures_bonus_d_pbr.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_bonus_d_pbr.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/index.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:411
msgid ":ref:`sphx_glr_tutorial_03_figures_bonus_e_labels.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_bonus_e_labels.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/index.rst:59
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:428
msgid ":ref:`sphx_glr_tutorial_03_figures_bonus_g_orbit.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_bonus_g_orbit.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:9
msgid ""
"**00:48.207** total execution time for 3 files **from "
"tutorial/03_figures/bonus**:"
msgstr ""
"**00:48.207** total execution time for 3 files **from "
"tutorial/03_figures/bonus**:"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:35
msgid ":ref:`sphx_glr_tutorial_03_figures_bonus_d_pbr.py` (``d_pbr.py``)"
msgstr ":ref:`sphx_glr_tutorial_03_figures_bonus_d_pbr.py` (``d_pbr.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:36
msgid "00:48.207"
msgstr "00:48.207"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_tutorial_03_figures_bonus_e_labels.py` (``e_labels.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_03_figures_bonus_e_labels.py` (``e_labels.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/bonus/sg_execution_times.rst:41
msgid ":ref:`sphx_glr_tutorial_03_figures_bonus_g_orbit.py` (``g_orbit.py``)"
msgstr ":ref:`sphx_glr_tutorial_03_figures_bonus_g_orbit.py` (``g_orbit.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_03_figures_c_geological-"
"map.py>` to download the full example code. or to run this example in your "
"browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_03_figures_c_geological-map.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:22
msgid "Geological Map on Topography"
msgstr "地形上の地質図"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:24
msgid "Texture mapping for a GeoTIFF on a topography surface."
msgstr "地形面上のGeoTIFFのテクスチャマッピング．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:26
msgid ""
"To overlay an image/map from a GeoTIFF on to a topography surface, it's "
"necessary to have texture coordinates (\"texture mapping\") matching the "
"proper extends of the mesh/surface you'd like to drape the texture (GeoTIFF)"
" on."
msgstr ""
"GeoTIFFから地形に画像や地図を重ね合わせるためには，テクスチャ（GeoTIFF）を貼り付けたいメッシュや地形の延長線上にテクスチャ座標（「テクスチャマッピング」）が一致する必要があるのです．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:28
msgid ""
"We can do this by using the spatial reference of the GeoTIFF itself, as this"
" allows you to preserve the entire mesh that the texture is being draped on "
"without having to clip out the parts where you don't have imagery. In this "
"example, we explicitly set the texture extents onto a topography surface "
"where the texture/GeoTIFF has a much larger extent than the topography "
"surface."
msgstr ""
"これは，GeoTIFF "
"自体の空間リファレンスを使用することで，イメージのない部分を切り取ることなく，テクスチャがドレープされているメッシュ全体を保持することができるからです．この例では，テクスチャが地形サーフェス上に伸びるように明示的に設定し，テクスチャ/GeoTIFF"
" が地形サーフェスよりはるかに大きな範囲を持つようにしています．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:30
msgid ""
"Originally posted here: https://github.com/pyvista/pyvista-support/issues/14"
msgstr "原文はこちら： https://github.com/pyvista/pyvista-support/issues/14"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:86
msgid ""
"Load the GeoTIFF/texture (this could take a minute to download) "
"https://dl.dropbox.com/s/bp9j3fl3wbi0fld/downsampled_Geologic_map_on_air_photo.tif?dl=0"
msgstr ""
"GeoTIFF/テクスチャを読み込みます(ダウンロードに1分程度かかる場合があります) "
"https://dl.dropbox.com/s/bp9j3fl3wbi0fld/downsampled_Geologic_map_on_air_photo.tif?dl=0"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:115
msgid ""
"In the block below, we can use the ``get_gcps`` function to get the Ground "
"Control Points of the raster, however this depends on GDAL. For this "
"tutorial, we are going to hard code the GCPs to avoid having users install "
"GDAL."
msgstr ""
"以下のブロックでは， ``get_gcps`` 関数を使用してラスターの Ground Control Point を取得することができますが，これは "
"GDAL に依存します．このチュートリアルでは，ユーザーがGDALをインストールするのを避けるために，GCPをハードコードするつもりです．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:216
msgid ""
"Show GCPs in relation to topo surface with texture coordinates displayed"
msgstr "GCPをトポサーフェスに関連づけ，テクスチャ座標を表示する"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:275
msgid "Read the GeoTIFF as a ``Texture`` in PyVista:"
msgstr "GeoTIFFをPyVistaで ``Texture`` として読み込みます:"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:341
msgid "**Total running time of the script:** (0 minutes 14.728 seconds)"
msgstr "**Total running time of the script:** (0 minutes 14.728 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:359
msgid ""
":download:`Download Jupyter notebook: c_geological-map.ipynb <c_geological-"
"map.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: c_geological-map.ipynb <c_geological-"
"map.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:363
msgid ""
":download:`Download Python source code: c_geological-map.py <c_geological-"
"map.py>`"
msgstr ""
":download:`Download Python source code: c_geological-map.py <c_geological-"
"map.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/c_geological-map.rst:367
msgid ""
":download:`Download zipped: c_geological-map.zip <c_geological-map.zip>`"
msgstr ""
":download:`Download zipped: c_geological-map.zip <c_geological-map.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/d_gif.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_tutorial_03_figures_d_gif.py>` to "
"download the full example code or to run this example in your browser via "
"Binder"
msgstr ""
"Click :ref:`here <sphx_glr_download_tutorial_03_figures_d_gif.py>` to "
"download the full example code or to run this example in your browser via "
"Binder"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/d_gif.rst:24
msgid "Create a GIF Movie"
msgstr "GIFムービーの作成"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/d_gif.rst:25
msgid "Generate a moving gif from an active plotter."
msgstr "アクティブなプロッタから動くgifを生成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/d_gif.rst:28
msgid ""
"Use ``lighting=False`` to reduce the size of the color space to avoid "
"\"jittery\" GIFs, especially for the scalar bar."
msgstr ""
"特にスカラーバーでは，\"jittery\" な GIF を避けるために，``lighting=False`` "
"を使って色空間のサイズを小さくしてください．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/d_gif.rst:103
msgid "**Total running time of the script:** ( 0 minutes  2.931 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.931 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/d_gif.rst:122
msgid ":download:`Download Python source code: d_gif.py <d_gif.py>`"
msgstr ":download:`Download Python source code: d_gif.py <d_gif.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/d_gif.rst:126
msgid ":download:`Download Jupyter notebook: d_gif.ipynb <d_gif.ipynb>`"
msgstr ":download:`Download Jupyter notebook: d_gif.ipynb <d_gif.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_03_figures_exercises_a_display_options.py>` to "
"download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_03_figures_exercises_a_display_options.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:22
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:22
msgid "Display Options"
msgstr "表示オプション"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:24
msgid ""
"Take a look at the different display options offered by the ``add_mesh`` "
"method."
msgstr "``add_mesh`` メソッドが提供するさまざまな表示オプションを見てみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:54
msgid ""
"Let's take a look at some different options for the ``add_mesh`` method to "
"alter how the above data are displayed."
msgstr "上記のデータの表示方法を変更するために， ``add_mesh`` メソッドにいくつかの異なるオプションをつけて見てみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:55
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:497
msgid "Plot that mesh with the edges of cells displayed"
msgstr "そのメッシュをセルのエッジを表示させた状態でプロットする"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:68
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:521
msgid ""
"Plot that mesh with the colored edges and as a show the surface as a solid "
"color (use a named color!)"
msgstr "そのメッシュを色付きのエッジでプロットし，サーフェイスをソリッドカラーで表示します（名前付きのカラーを使用します！）．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:82
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:546
msgid "Display with a points representation style"
msgstr "ポイント表示スタイルでの表示"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:95
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:570
msgid "And adjust the points display size"
msgstr "そして，ポイントの表示サイズを調整する"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:108
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:594
msgid "Change the color map and the color limits"
msgstr "カラーマップとカラーリミットを変更する"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:121
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:618
msgid "Add some opacity"
msgstr "不透明度を追加する"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:134
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:642
msgid ""
"There you go! Those are a few of the most commonly used display options!"
msgstr "はい，これです! 以上，よく使われる表示方法をご紹介しました!"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:162
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:675
msgid ""
":download:`Download Jupyter notebook: a_display_options.ipynb "
"<a_display_options.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_display_options.ipynb "
"<a_display_options.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:166
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:679
msgid ""
":download:`Download Python source code: a_display_options.py "
"<a_display_options.py>`"
msgstr ""
":download:`Download Python source code: a_display_options.py "
"<a_display_options.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/a_display_options.rst:170
msgid ""
":download:`Download zipped: a_display_options.zip <a_display_options.zip>`"
msgstr ""
":download:`Download zipped: a_display_options.zip <a_display_options.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_03_figures_exercises_b_lighting_mesh.py>` to "
"download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_03_figures_exercises_b_lighting_mesh.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:22
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:24
msgid "Lighting Properties"
msgstr "照明特性"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:26
msgid ""
"Control aspects of the rendered mesh's lighting such as Ambient, Diffuse, "
"and Specular. These options only work if the ``lighting`` argument to "
"``add_mesh`` is ``True`` (it's ``True`` by default)."
msgstr ""
"Ambient，Diffuse，Specularなどのレンダリングメッシュのライティングをコントロールします．これらのオプションは "
"``add_mesh`` の ``lighting`` 引数が ``True`` である場合のみ動作します（デフォルトでは ``True`` です）．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:28
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:30
msgid ""
"You can turn off all lighting for the given mesh by passing "
"``lighting=False`` to ``add_mesh``."
msgstr "``lighting=False`` を ``add_mesh`` に渡すと，指定したメッシュのすべてのライティングをオフにできます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:31
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:33
msgid ""
"See the ``add_mesh`` docs for lighting options: "
"https://docs.pyvista.org/api/plotting/_autosummary/pyvista.Plotter.add_mesh.html"
msgstr ""
"照明のオプションについては ``add_mesh`` のドキュメントを参照してください: "
"https://docs.pyvista.org/api/plotting/_autosummary/pyvista.Plotter.add_mesh.html"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:49
msgid "First, let's take a look at the mesh with default lighting conditions"
msgstr "まず，デフォルトの照明条件でのメッシュを見てみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:60
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:101
msgid "What about with no lighting?"
msgstr "照明がない場合はどうでしょうか？"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:71
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:145
msgid "Demonstration of the specular property"
msgstr "鏡面特性の実証"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:73
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:147
msgid "Feel free to adjust the specular value in the ``s`` variable."
msgstr "変数 ``s`` でスペキュラ値を自由に調整してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:97
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:204
msgid "Specular power (feel free to adjust)"
msgstr "スペキュラーパワー（自由に調整可能）"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:108
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:248
msgid ""
"Demonstration of all diffuse, specular, and ambient in use together (feel "
"free to adjust)"
msgstr "diffuse，specular，ambient を全て一緒に使用したデモ（自由に調整してください．）"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:120
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:293
msgid ""
"For detailed control over lighting conditions in general see the `lighting "
"examples <https://docs.pyvista.org/examples/index.html#lighting>`_"
msgstr ""
"一般的な照明条件の詳細な制御については， "
"`照明の例<https://docs.pyvista.org/examples/index.html#lighting>`_ を参照してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:149
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:327
msgid ""
":download:`Download Jupyter notebook: b_lighting_mesh.ipynb "
"<b_lighting_mesh.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: b_lighting_mesh.ipynb "
"<b_lighting_mesh.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:153
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:331
msgid ""
":download:`Download Python source code: b_lighting_mesh.py "
"<b_lighting_mesh.py>`"
msgstr ""
":download:`Download Python source code: b_lighting_mesh.py "
"<b_lighting_mesh.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/b_lighting_mesh.rst:157
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:335
msgid ":download:`Download zipped: b_lighting_mesh.zip <b_lighting_mesh.zip>`"
msgstr ""
":download:`Download zipped: b_lighting_mesh.zip <b_lighting_mesh.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_03_figures_exercises_c_edl.py>` to download the "
"full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_03_figures_exercises_c_edl.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:22
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:24
msgid "Eye Dome Lighting"
msgstr "Eye Dome Lighting"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:26
msgid ""
"Eye-Dome Lighting (EDL) is a non-photorealistic, image-based shading "
"technique designed to improve depth perception in scientific visualization "
"images. To learn more, please see `this blog post`_."
msgstr ""
"Eye‐Dome Lighting (EDL) "
"は，科学的可視化画像における奥行き知覚を改善するために設計された非フォトリアリスティック，画像ベースシェーディングテクニックです．詳しくは `this "
"blog post`_ をご覧ください．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:50
msgid "Point Cloud"
msgstr "点群"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:44
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:52
msgid ""
"When plotting a simple point cloud, it can be difficult to perceive depth. "
"Take this Lidar point cloud for example:"
msgstr "単純な点群のプロットでは，奥行きを感じることが難しい場合があります．例えば，このライダー点群:"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:58
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:96
msgid "And now plot this point cloud as-is:"
msgstr "そして，この点群をそのままプロットしてみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:74
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:123
msgid ""
"We can improve the depth mapping by enabling eye dome lighting on the "
"renderer with :func:`pyvista.Renderer.enable_eye_dome_lighting`."
msgstr ""
":func:`pyvista.Renderer.enable_eye_dome_lighting` "
"を使ってレンダラでアイドーム照明を有効にすることで，深度マッピングを改善することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:77
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:126
msgid "Try plotting that point cloud with Eye-Dome-Lighting yourself below:"
msgstr "以下に，その点群を自分でアイドームライティングでプロットしてみてください．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:93
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:153
msgid ""
"The eye dome lighting mode can also handle plotting scalar arrays. Try the "
"above block but by specifying a ``scalars`` array instead of ``color`` in "
"the ``add_mesh`` call."
msgstr ""
"アイドーム照明モードは，スカラー配列のプロットも扱うことができます．上記のブロックを， ``add_mesh`` のコールで ``color`` "
"の代わりに ``scalars`` 配列を指定して試してみてください．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:123
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:210
msgid ":download:`Download Jupyter notebook: c_edl.ipynb <c_edl.ipynb>`"
msgstr ":download:`Download Jupyter notebook: c_edl.ipynb <c_edl.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:127
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:214
msgid ":download:`Download Python source code: c_edl.py <c_edl.py>`"
msgstr ":download:`Download Python source code: c_edl.py <c_edl.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/c_edl.rst:131
msgid ":download:`Download zipped: c_edl.zip <c_edl.zip>`"
msgstr ":download:`Download zipped: c_edl.zip <c_edl.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/index.rst:25
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:462
msgid ":ref:`sphx_glr_tutorial_03_figures_exercises_a_display_options.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_exercises_a_display_options.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/index.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:479
msgid ":ref:`sphx_glr_tutorial_03_figures_exercises_b_lighting_mesh.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_exercises_b_lighting_mesh.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/index.rst:59
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:496
msgid ":ref:`sphx_glr_tutorial_03_figures_exercises_c_edl.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_exercises_c_edl.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 3 files **from "
"tutorial/03_figures/exercises**:"
msgstr ""
"**00:00.000** total execution time for 3 files **from "
"tutorial/03_figures/exercises**:"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_03_figures_exercises_a_display_options.py` "
"(``a_display_options.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_03_figures_exercises_a_display_options.py` "
"(``a_display_options.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_tutorial_03_figures_exercises_b_lighting_mesh.py` "
"(``b_lighting_mesh.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_03_figures_exercises_b_lighting_mesh.py` "
"(``b_lighting_mesh.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/exercises/sg_execution_times.rst:41
msgid ":ref:`sphx_glr_tutorial_03_figures_exercises_c_edl.py` (``c_edl.py``)"
msgstr ":ref:`sphx_glr_tutorial_03_figures_exercises_c_edl.py` (``c_edl.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:6
msgid "Plotting Options and Animations"
msgstr "プロットオプションとアニメーション"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:8
msgid ""
"Demonstrate many features of the PyVista plotting API to create compelling "
"3D visualizations and touch on animations (10 min for talk, 10 min for "
"exercise)"
msgstr ""
"PyVistaプロッティングAPIの多くの機能を使って，説得力のある3Dビジュアリゼーションとタッチオンアニメーションを作成するデモを行います（講演10分，演習10分）"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:12
msgid ""
"This section of the tutorial was adopted from the Plotting section of "
"`PyVista's Example Gallery "
"<https://docs.pyvista.org/examples/index.html#plotting>`_."
msgstr ""
"このチュートリアルのセクションは `PyVista's Example Gallery "
"<https://docs.pyvista.org/examples/index.html#plotting>`_ "
"のプロットセクションから採用されたものです．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:16
msgid ""
"PyVista enables many possibilities for altering how you display 3D data, a "
"few of our most common features include:"
msgstr "PyVistaは，3Dデータの表示方法を変更するための様々な可能性を提供します．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:19
msgid "Color mapping scalar values with ``Matplotlib`` colormaps"
msgstr "``Matplotlib`` のカラーマップを用いたスカラー値のカラーマッピング"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:20
msgid "Showing the edges and nodes of different mesh types"
msgstr "異なる種類のメッシュのエッジとノードの表示"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:21
msgid "Label points in 3D space along side your meshes"
msgstr "メッシュの横にある3D空間のポイントにラベルを貼ることができる"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:22
msgid "Creating side-by-side comparisons"
msgstr "並列比較の作成"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:23
msgid "Making a dataset transparent or using a scalar value to map opacity"
msgstr "データセットを透明にする，またはスカラー値を使用して不透明度をマップします"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:24
msgid "Adding textures/images draped over a mesh (texture mapping)"
msgstr "メッシュ上にまとったテクスチャ/イメージを追加する(テクスチャマッピング)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:25
msgid ""
"Use sophisticated lighting techniques like smooth shading or Eye Dome "
"Lighting"
msgstr "スムースシェーディングやアイドームライティングなどの洗練されたライティングテクニックを使用する"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:26
msgid "Creating animations as GIFs or movie files"
msgstr "GIFまたはムービーファイルとしてアニメーションを作成します"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:28
msgid ""
"This section will overview PyVista's :class:`pyvista.Plotter` API and how to"
" perform these tasks. The goal of this lesson is not to be a comprehensive "
"overview of PyVista's plotting API, but rather to demonstrate how it works "
"and how you can learn to use it!"
msgstr ""
"このセクションでは，PyVista の :class:`pyvista.Plotter` API "
"の概要と，これらのタスクの実行方法について説明します．このレッスンのゴールは，PyVistaのプロットAPIの包括的な概要ではなく，それがどのように動作し，どのように使えばいいのかを示すことです！このレッスンは，PyVistaのプロットAPIがどのように動作するかを説明します．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:34
msgid "The Basics"
msgstr "基礎編"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:36
msgid ""
"PyVista's plotting API is data-centric, where the 3D data are individually "
"added to the scene with different display parameters in a Matplotlib-like "
"fashion."
msgstr ""
"PyVistaのプロットAPIはデータセントリックで，3DデータはMatplotlibライクな方法で表示パラメータを変えて個別にシーンに追加されます．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:41
msgid "Add Mesh to Plotter Object"
msgstr "Plotterオブジェクトにメッシュを追加する"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:191
msgid ""
"Other custom layouts are supported by the ``shape`` argument as string "
"descriptors:"
msgstr "その他のカスタムレイアウトは， ``shape`` 引数の文字列記述子でサポートされています．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:193
msgid "``shape=\"3|1\"`` means 3 plots on the left and 1 on the right,"
msgstr "``shape=\"3|1\"`` とは，左側に3区画，右側に1区画という意味です．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:194
msgid "``shape=\"4/2\"`` means 4 plots on top and 2 at the bottom."
msgstr "``shape=\"4/2\"`` は，上に4プロット，下に2プロットを意味します．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:196
msgid "Here is an example of three plots on the right and one on the left:"
msgstr "ここでは，右側に3つ，左側に1つのプロットを作成した例を示します．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:229
msgid ""
"There is a comprehensive overview of subplotting in the `Multi-Window "
"Plotting Example <https://docs.pyvista.org/examples/02-plot/multi-"
"window.html>`_ This example details how to create more complex layouts."
msgstr ""
"サブプロットの包括的な概要は `Multi-Window Plotting Example "
"<https://docs.pyvista.org/examples/02-plot/multi-window.html>`_ "
"にあります．この例では，より複雑なレイアウトを作成する方法について詳しく説明しています．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:234
msgid "Controlling the Scene"
msgstr "シーンの制御"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:238
msgid ""
"For a full list of methods on the :class:`pyvista.Plotter`, please see the "
"`API documentation "
"<https://docs.pyvista.org/api/plotting/_autosummary/pyvista.Plotter.html>`_"
msgstr ""
":class:`pyvista.Plotter` のメソッドの一覧は， `API documentation "
"<https://docs.pyvista.org/api/plotting/_autosummary/pyvista.Plotter.html>`_ "
"を参照してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:300
msgid ":ref:`sphx_glr_tutorial_03_figures_a_lesson_figures.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_a_lesson_figures.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:317
msgid ":ref:`sphx_glr_tutorial_03_figures_b_shading.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_b_shading.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:334
msgid ":ref:`sphx_glr_tutorial_03_figures_c_geological-map.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_c_geological-map.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:351
msgid ":ref:`sphx_glr_tutorial_03_figures_d_gif.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_d_gif.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:530
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/index.rst:25
msgid ":ref:`sphx_glr_tutorial_03_figures_solutions_a_display_options.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_solutions_a_display_options.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:547
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/index.rst:42
msgid ":ref:`sphx_glr_tutorial_03_figures_solutions_b_lighting_mesh.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_solutions_b_lighting_mesh.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/index.rst:564
#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/index.rst:59
msgid ":ref:`sphx_glr_tutorial_03_figures_solutions_c_edl.py`"
msgstr ":ref:`sphx_glr_tutorial_03_figures_solutions_c_edl.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:9
msgid ""
"**00:20.690** total execution time for 4 files **from tutorial/03_figures**:"
msgstr ""
"**00:20.690** total execution time for 4 files **from tutorial/03_figures**:"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_03_figures_c_geological-map.py` (``c_geological-"
"map.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_03_figures_c_geological-map.py` (``c_geological-"
"map.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:36
msgid "00:14.728"
msgstr "00:14.728"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_tutorial_03_figures_a_lesson_figures.py` "
"(``a_lesson_figures.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_03_figures_a_lesson_figures.py` "
"(``a_lesson_figures.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:39
msgid "00:04.679"
msgstr "00:04.679"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:41
msgid ":ref:`sphx_glr_tutorial_03_figures_b_shading.py` (``b_shading.py``)"
msgstr ":ref:`sphx_glr_tutorial_03_figures_b_shading.py` (``b_shading.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:42
msgid "00:01.283"
msgstr "00:01.283"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/sg_execution_times.rst:44
msgid ":ref:`sphx_glr_tutorial_03_figures_d_gif.py` (``d_gif.py``)"
msgstr ":ref:`sphx_glr_tutorial_03_figures_d_gif.py` (``d_gif.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_03_figures_solutions_a_display_options.py>` to "
"download the full example code or to run this example in your browser via "
"Binder"
msgstr ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_03_figures_solutions_a_display_options.py>` to "
"download the full example code or to run this example in your browser via "
"Binder"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:57
msgid ""
"See also "
"https://docs.pyvista.org/api/plotting/_autosummary/pyvista.Plotter.add_mesh.html"
msgstr ""
"関連項目: "
"https://docs.pyvista.org/api/plotting/_autosummary/pyvista.Plotter.add_mesh.html"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/a_display_options.rst:657
msgid "**Total running time of the script:** (0 minutes 3.045 seconds)"
msgstr "**Total running time of the script:** (0 minutes 3.045 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_03_figures_solutions_b_lighting_mesh.py>` to "
"download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_03_figures_solutions_b_lighting_mesh.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:57
msgid "First, lets take a look at the mesh with default lighting conditions"
msgstr "まず，デフォルトの照明条件でのメッシュを見てみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/b_lighting_mesh.rst:309
msgid "**Total running time of the script:** (0 minutes 9.057 seconds)"
msgstr "**Total running time of the script:** (0 minutes 9.057 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_03_figures_solutions_c_edl.py>` to download the "
"full example code or to run this example in your browser via Binder"
msgstr ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_03_figures_solutions_c_edl.py>` to download the "
"full example code or to run this example in your browser via Binder"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/c_edl.rst:192
msgid "**Total running time of the script:** (0 minutes 37.071 seconds)"
msgstr "**Total running time of the script:** (0 minutes 37.071 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:9
msgid ""
"**00:09.057** total execution time for 3 files **from "
"tutorial/03_figures/solutions**:"
msgstr ""
"**00:09.057** total execution time for 3 files **from "
"tutorial/03_figures/solutions**:"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_03_figures_solutions_b_lighting_mesh.py` "
"(``b_lighting_mesh.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_03_figures_solutions_b_lighting_mesh.py` "
"(``b_lighting_mesh.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:36
msgid "00:09.057"
msgstr "00:09.057"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_tutorial_03_figures_solutions_a_display_options.py` "
"(``a_display_options.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_03_figures_solutions_a_display_options.py` "
"(``a_display_options.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/03_figures/solutions/sg_execution_times.rst:41
msgid ":ref:`sphx_glr_tutorial_03_figures_solutions_c_edl.py` (``c_edl.py``)"
msgstr ":ref:`sphx_glr_tutorial_03_figures_solutions_c_edl.py` (``c_edl.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_04_filters_a_lesson_filters.py>` to download the"
" full example code or to run this example in your browser via Binder"
msgstr ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_04_filters_a_lesson_filters.py>` to download the"
" full example code or to run this example in your browser via Binder"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:24
msgid "Using Common Filters"
msgstr "共通フィルタの使用"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:26
msgid "Using common filters like thresholding and clipping."
msgstr "閾値設定やクリッピングなどの一般的なフィルタを使用します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:45
msgid ""
"PyVista wrapped data objects have a suite of common filters ready for "
"immediate use directly on the object. These filters include the following "
"(see `filters_ref`_ for a complete list):"
msgstr ""
"PyVista wrapped data objects have a suite of common filters ready for "
"immediate use directly on the object. These filters include the following "
"(see `filters_ref`_ for a complete list):"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:49
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:22
msgid ""
"`slice()`_ creates a single slice through the input dataset on a user "
"defined plane"
msgstr "`slice()`_ は，入力データセットをユーザー定義平面でスライスします．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:50
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:23
msgid ""
"`slice_orthogonal()`_: creates a :class:`pyvista.MultiBlock` dataset of "
"three orthogonal slices"
msgstr ""
"`slice_orthogonal()`_: 3つの直交スライスからなる :class:`pyvista.MultiBlock` "
"データセットを作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:51
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:24
msgid ""
"`slice_along_axis()`_: creates a :class:`pyvista.MultiBlock` dataset of many"
" slices along a specified axis"
msgstr ""
"`slice_along_axis()`_: 指定された軸に沿った多くのスライスからなる :class:`pyvista.MultiBlock` "
"データセットを作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:52
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:25
msgid ""
"`threshold()`_: Thresholds a dataset by a single value or range of values"
msgstr "`threshold()`_: データセットを 1 つの値あるいは値の範囲で閾値処理します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:53
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:26
msgid "`threshold_percent()`_: Threshold by percentages of the scalar range"
msgstr "`threshold_percent()`_: スカラー範囲のパーセンテージによる閾値"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:54
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:27
msgid "`clip()`_: Clips the dataset by a user defined plane"
msgstr "`clip()`_: ユーザー定義平面でデータセットを切り取ります．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:55
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:28
msgid "`outline_corners()`_: Outlines the corners of the data extent"
msgstr "`outline_corners()`_: データ領域のコーナーをアウトライン化します"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:56
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:29
msgid "`extract_geometry()`_: Extract surface geometry"
msgstr "`extract_geometry()`_: 表面の形状を抽出します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:68
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:41
msgid ""
"To use these filters, call the method of your choice directly on your data "
"object:"
msgstr "これらのフィルタを使用するには，データ・オブジェクトで選択したメソッドを直接呼び出します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:93
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:70
msgid ""
"And now there is a thresholded version of the input dataset in the new "
"``threshed`` object. To learn more about what keyword arguments are "
"available to alter how filters are executed, print the docstring for any "
"filter attached to PyVista objects with either ``help(dataset.threshold)`` "
"or using ``shift+tab`` in an IPython environment."
msgstr ""
"これで，新しい ``threshed`` "
"オブジェクトに入力データセットのしきい値が設定されたバージョンがあります．フィルタの実行方法を変更するためにどのようなキーワード引数を使用できるかを調べるには，"
" ``help(dataset.threshold)`` またはIPython環境で ``shift+tab`` "
"を使用してPyVistaオブジェクトに付加されたフィルタのdocstringを出力します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:99
msgid ""
"We can now plot this filtered dataset along side an outline of the original "
"dataset"
msgstr "このフィルタ処理されたデータセットを，元のデータセットのアウトラインに沿ってプロットできるようになりました．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:128
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:91
msgid ""
"What about other filters? Let's collect a few filter results and compare "
"them:"
msgstr "他のフィルターはどうですか?いくつかのフィルタ結果を収集して比較してみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:178
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:132
msgid "Filter Pipeline"
msgstr "フィルタパイプライン"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:180
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:134
msgid ""
"In VTK, filters are often used in a pipeline where each algorithm passes its"
" output to the next filtering algorithm. In PyVista, we can mimic the "
"filtering pipeline through a chain; attaching each filter to the last "
"filter. In the following example, several filters are chained together:"
msgstr ""
"VTKでは，フィルタがパイプラインで使用されることが多く，各アルゴリズムはその出力を次のフィルタリング・アルゴリズムに渡します．PyVistaでは，次のようにしてフィルタリングパイプラインを模倣できます．各フィルタを最後のフィルタにアタッチします．次の例では，複数のフィルタが連結されています．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:185
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:139
msgid "First, and empty ``threshold`` filter to clean out any ``NaN`` values."
msgstr "まず， ``threshold`` フィルタを空にして， ``NaN`` 値をすべて消去します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:186
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:140
msgid ""
"Use an ``elevation`` filter to generate scalar values corresponding to "
"height."
msgstr "``elevation`` フィルタを使用して，高さに対応するスカラー値を生成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:187
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:141
msgid "Use the ``clip`` filter to cut the dataset in half."
msgstr "``clip`` フィルタを使用して，データセットを半分にカットします．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:188
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:142
msgid ""
"Create three slices along each axial plane using the ``slice_orthogonal`` "
"filter."
msgstr "``slice_orthogonal`` フィルタを使用して，各軸平面に沿ってスライスを3つ作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:191
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:144
msgid "Apply a filtering chain"
msgstr "フィルタリングチェーンを適用する"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:208
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:151
msgid ""
"And to view this filtered data, simply call the ``plot`` method "
"(``result.plot()``) or create a rendering scene:"
msgstr ""
"フィルタリングされたデータを表示するには， ``plot`` メソッド (``result.plot()``) "
"を呼び出すか，レンダリングシーンを作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:247
msgid "**Total running time of the script:** (0 minutes 7.095 seconds)"
msgstr "**Total running time of the script:** (0 minutes 7.095 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:265
msgid ""
":download:`Download Jupyter notebook: a_lesson_filters.ipynb "
"<a_lesson_filters.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_lesson_filters.ipynb "
"<a_lesson_filters.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/a_lesson_filters.rst:269
msgid ""
":download:`Download Python source code: a_lesson_filters.py "
"<a_lesson_filters.py>`"
msgstr ""
":download:`Download Python source code: a_lesson_filters.py "
"<a_lesson_filters.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_04_filters_bonus_f_sampling_functions_3d.py>` to"
" download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_04_filters_bonus_f_sampling_functions_3d.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:22
msgid "Sample Function: Perlin Noise in 3D"
msgstr "サンプル関数:3DでのPerlinノイズ"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:23
msgid ""
"Here we use :func:`pyvista.core.utilities.features.sample_function` to "
"sample Perlin noise over a region to generate random terrain."
msgstr ""
"ここでは， :func:`pyvista.core.utilities.features.sample_function` "
"を使用して領域上のPerlinノイズをサンプリングし，ランダムな地表を生成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:26
msgid ""
"Video games like Minecraft use Perlin noise to create terrain.  Here, we "
"create a voxelized mesh similar to a Minecraft \"cave\"."
msgstr ""
"Minecraftなどのビデオゲームでは，Perlinノイズを使用して地表を作成します．ここでは，Minecraftの \"洞窟\" "
"に似たボクセル化メッシュを作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:46
msgid "Generate Perlin Noise over a 3D StructuredGrid"
msgstr "3D StructuredGrid上にPerlinノイズを生成する"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:47
msgid ""
"Feel free to change the values of ``freq`` to change the shape of the "
"\"caves\".  For example, lowering the frequency will make the caves larger "
"and more expansive, while a higher frequency in any direction will make the "
"caves appear more \"vein-like\" and less open."
msgstr ""
"\"freq\" の値を自由に変更して， \"洞窟\" "
"の形を変えることができます．たとえば，周波数を低くすると，洞穴が大きく拡張します．一方，任意の方向の周波数を高くすると，洞穴はより \"静脈のように\""
" 見え，開きにくくなります．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:52
msgid ""
"Change the threshold to reduce or increase the percent of the terrain that "
"is open or closed"
msgstr "しきい値を変更して，開いている地形または閉じている地形の割合を増減します"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:98
msgid "color limits without blue"
msgstr "青以外の色の制限"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:163
msgid "**Total running time of the script:** (0 minutes 0.619 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.619 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:181
msgid ""
":download:`Download Jupyter notebook: f_sampling_functions_3d.ipynb "
"<f_sampling_functions_3d.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: f_sampling_functions_3d.ipynb "
"<f_sampling_functions_3d.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:185
msgid ""
":download:`Download Python source code: f_sampling_functions_3d.py "
"<f_sampling_functions_3d.py>`"
msgstr ""
":download:`Download Python source code: f_sampling_functions_3d.py "
"<f_sampling_functions_3d.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/f_sampling_functions_3d.rst:189
msgid ""
":download:`Download zipped: f_sampling_functions_3d.zip "
"<f_sampling_functions_3d.zip>`"
msgstr ""
":download:`Download zipped: f_sampling_functions_3d.zip "
"<f_sampling_functions_3d.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/index.rst:25
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:224
msgid ":ref:`sphx_glr_tutorial_04_filters_bonus_f_sampling_functions_3d.py`"
msgstr ":ref:`sphx_glr_tutorial_04_filters_bonus_f_sampling_functions_3d.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/sg_execution_times.rst:9
msgid ""
"**00:00.619** total execution time for 1 file **from "
"tutorial/04_filters/bonus**:"
msgstr ""
"**00:00.619** total execution time for 1 file **from "
"tutorial/04_filters/bonus**:"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_04_filters_bonus_f_sampling_functions_3d.py` "
"(``f_sampling_functions_3d.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_04_filters_bonus_f_sampling_functions_3d.py` "
"(``f_sampling_functions_3d.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/bonus/sg_execution_times.rst:36
msgid "00:00.619"
msgstr "00:00.619"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_04_filters_exercises_b_clipping.py>` to download"
" the full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_04_filters_exercises_b_clipping.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:22
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:24
msgid "Clipping with Planes & Boxes"
msgstr "平面とボックスでクリップします"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:26
msgid "Clip/cut any dataset using using planes or boxes."
msgstr "平面またはボックスを使用してデータセットをクリップ/カットします．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:38
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:46
msgid "Clip with Plane"
msgstr "平面付きクリップ"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:40
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:48
msgid ""
"Clip any dataset by a user defined plane using the "
":func:`pyvista.DataSetFilters.clip` filter"
msgstr ":func:`pyvista.DataSetFilters.clip` フィルタを使用したユーザ定義平面によるデータセットのクリップ"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:60
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:176
msgid "Perform a clip with a Y axis normal"
msgstr "Y軸法線によるクリップを実行する"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:72
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:218
msgid "Plot the result."
msgstr "結果をプロットします．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:90
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:269
msgid "Clip with Bounds"
msgstr "境界付きクリップ"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:92
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:271
msgid ""
"Clip any dataset by a set of XYZ bounds using the "
":func:`pyvista.DataSetFilters.clip_box` filter."
msgstr ""
":func:`pyvista.DataSetFilters.clip_box` "
"フィルタを使用して，XYZ境界のセットによってデータセットをクリップします．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:95
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:274
msgid "First, download an example dataset."
msgstr "まず，例のデータセットをダウンロードします．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:113
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:366
msgid ""
"Clip the dataset with a bounding box defined by the values in ``bounds`` "
"``(xmin, xmax, ymin, ymax, zmin, zmax)``"
msgstr ""
"``bounds`` ``(xmin, xmax, ymin, ymax, zmin, zmax)`` "
"で定義されるバウンディングボックスでデータセットを切り取ります．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:127
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:410
msgid "Plot the original dataset and the clipped one."
msgstr "元のデータセットと切り取られたデータセットをプロットします．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:144
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:460
msgid "Clip with Rotated Box"
msgstr "回転ボックス付きクリップ"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:146
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:462
msgid ""
"Clip any dataset by an arbitrarily rotated solid box using the "
":func:`pyvista.DataSetFilters.clip_box` filter."
msgstr ""
":func:`pyvista.DataSetFilters.clip_box` "
"フィルタを使用して任意に回転したソリッドボックスでデータセットをクリップします．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:167
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:516
msgid "Run the box clipping algorithm with the defined box geometry."
msgstr "定義されたボックスのジオメトリを使用して，ボックスクリッピングアルゴリズムを実行します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:189
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:571
msgid "Crinkled Clipping"
msgstr "しわくちゃなクリッピング"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:190
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:572
msgid ""
"Crinkled clipping is useful if you don't want the clip filter to truly clip "
"cells on the boundary, but want to preserve the input cell structure and to "
"pass the entire cell on through the boundary."
msgstr ""
"クリンプクリッピングは，クリップフィルタが境界上のセルを本当にクリップするのではなく，入力セルの構造を保持し，セル全体を境界から通過させたい場合に有効です．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:194
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:576
msgid ""
"This option is available for :func:`pyvista.DataSetFilters.clip`, "
":func:`pyvista.DataSetFilters.clip_box`, and "
":func:`pyvista.DataSetFilters.clip_sruface`, but not available when clipping"
" by scalar in :func:`pyvista.DataSetFilters.clip_scalar`."
msgstr ""
"このオプションは :func:`pyvista.DataSetFilters.clip`, "
":func:`pyvista.DataSetFilters.clip_box`, "
":func:`pyvista.DataSetFilters.clip_sruface` で使用できますが， "
":func:`pyvista.DataSetFilters.clip_scalar` でスカラーによるクリッピングを行っても利用することはできません．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:210
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:598
msgid "Define clipping plane"
msgstr "クリッピングプレーンの定義"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:222
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:616
msgid "Perform a standard clip"
msgstr "標準クリップを実行します"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:233
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:633
msgid "Perform a crinkled clip to compare"
msgstr "クリンプクリップを行い，比較する"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:244
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:650
msgid "Plot comparison"
msgstr "プロット比較"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:286
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:730
msgid ""
":download:`Download Jupyter notebook: b_clipping.ipynb <b_clipping.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: b_clipping.ipynb <b_clipping.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:290
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:734
msgid ":download:`Download Python source code: b_clipping.py <b_clipping.py>`"
msgstr ""
":download:`Download Python source code: b_clipping.py <b_clipping.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/b_clipping.rst:294
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:738
msgid ":download:`Download zipped: b_clipping.zip <b_clipping.zip>`"
msgstr ":download:`Download zipped: b_clipping.zip <b_clipping.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/c_compute-normals.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_04_filters_exercises_c_compute-normals.py>` to "
"download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_04_filters_exercises_c_compute-normals.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/c_compute-normals.rst:22
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:24
msgid "Computing Surface Normals"
msgstr "表面の法線を計算します"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/c_compute-normals.rst:25
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:27
msgid "Compute normals on a surface."
msgstr "表面上の法線を計算します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/c_compute-normals.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:77
msgid ""
"Now we have a surface dataset of the globe loaded - unfortunately, the "
"dataset shows the globe with a uniform radius which hides topographic "
"relief. Using :func:`pyvista.PolyData.compute_normals`, we can compute the "
"normal vectors on the globe at all points in the dataset, then use the "
"values given in the dataset to warp the surface in the normals direction to "
"create some exaggerated topographic relief."
msgstr ""
"これで地球のサーフェスデータセットがロードされました．残念ながら，データセットには地形起伏を隠す均一な半径の地球が表示されます． "
":func:`pyvista.PolyData.compute_normals` "
"を使用して，データセット内のすべてのポイントで地球上の法線ベクトルを計算し，データセットで指定された値を使用してサーフェスを法線方向にワープし，誇張された地形レリーフを作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/c_compute-normals.rst:59
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:127
msgid "Now use those normals to warp the surface"
msgstr "次に，これらの法線を使用して，サーフェスをワープさせます．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/c_compute-normals.rst:70
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:144
msgid "And let's see it!"
msgstr "そして，見てみよう!"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/c_compute-normals.rst:82
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:189
msgid ""
"We could also use face or cell normals to extract all the faces of a mesh "
"facing a general direction. In the following snippet, we take a mesh, "
"compute the normals along its cell faces, and extract the faces that face "
"upward."
msgstr ""
"面またはセル法線を使用して，一般的な方向を向いているメッシュのすべての面を抽出することもできます．次のスニペットでは，メッシュを取得し，そのセル面に沿って法線を計算し，上向きの面を抽出します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/c_compute-normals.rst:136
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:281
msgid ""
":download:`Download Jupyter notebook: c_compute-normals.ipynb <c_compute-"
"normals.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: c_compute-normals.ipynb <c_compute-"
"normals.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/c_compute-normals.rst:140
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:285
msgid ""
":download:`Download Python source code: c_compute-normals.py <c_compute-"
"normals.py>`"
msgstr ""
":download:`Download Python source code: c_compute-normals.py <c_compute-"
"normals.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/c_compute-normals.rst:144
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:289
msgid ""
":download:`Download zipped: c_compute-normals.zip <c_compute-normals.zip>`"
msgstr ""
":download:`Download zipped: c_compute-normals.zip <c_compute-normals.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_04_filters_exercises_d_contouring.py>` to "
"download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_04_filters_exercises_d_contouring.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:22
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:24
msgid "Contouring"
msgstr "コンタリング"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:26
msgid ""
"Generate iso-lines or -surfaces for the scalars of a surface or volume."
msgstr "サーフェスまたはボリュームのスカラー用にアイソラインまたはサーフェスを生成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:26
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:28
msgid ""
"3D meshes can have 2D iso-surfaces of a scalar field extracted and 2D "
"surface meshes can have 1D iso-lines of a scalar field extracted."
msgstr ""
"3 Dメッシュはスカラーフィールドの2 D等値面を抽出することができ，2 Dサーフェスメッシュはスカラーフィールドの1 "
"D等値線を抽出することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:41
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:50
msgid "Iso-Lines"
msgstr "等値線"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:43
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:52
msgid "Let's extract 1D iso-lines of a scalar field from a 2D surface mesh."
msgstr "2 Dサーフェスメッシュからスカラーフィールドの1 D等値線を抽出します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:80
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:229
msgid "Iso-Surfaces"
msgstr "等値面"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:82
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:231
msgid "Let's extract 2D iso-surfaces of a scalar field from a 3D mesh."
msgstr "3 Dメッシュからスカラーフィールドの2 D等値面を抽出してみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:95
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:275
msgid ""
"For this example dataset, let's create 5 contour levels between the values "
"of 50 and 200"
msgstr "この例のデータセットでは，50から200の値の間に5つの輪郭レベルを作成しましょう"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:147
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:349
msgid ""
":download:`Download Jupyter notebook: d_contouring.ipynb "
"<d_contouring.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: d_contouring.ipynb "
"<d_contouring.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:151
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:353
msgid ""
":download:`Download Python source code: d_contouring.py <d_contouring.py>`"
msgstr ""
":download:`Download Python source code: d_contouring.py <d_contouring.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/d_contouring.rst:155
msgid ":download:`Download zipped: d_contouring.zip <d_contouring.zip>`"
msgstr ":download:`Download zipped: d_contouring.zip <d_contouring.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_04_filters_exercises_e_glyphs.py>` to download "
"the full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_04_filters_exercises_e_glyphs.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:22
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:24
msgid "Plotting Glyphs (Vectors or PolyData)"
msgstr "グリフ（矢印）によるベクトルの表示"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:26
msgid "Use vectors in a dataset to plot and orient glyphs/geometric objects."
msgstr "データセット内のベクトルを使用して，記号/ジオメトリオブジェクトを印刷したり方向を設定します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:38
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:46
msgid "Example dataset with normals"
msgstr "法線のあるデータセット例"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:49
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:63
msgid ""
"Glyphying can be done via the :func:`pyvista.DataSetFilters.glyph` filter"
msgstr "グリフィイングは :func:`pyvista.DataSetFilters.glyph` フィルターを介して行うことができる"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:60
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:182
msgid ""
"Sometimes you might not want glyphs for every node in the input dataset. In "
"this case, you can choose to build glyphs for a subset of the input dataset "
"by using a merging tolerance. Here we specify a merging tolerance of five "
"percent which equates to five percent of the bounding box's length."
msgstr ""
"入力データセットのすべてのノードにグリフが必要ない場合があります．この場合，マージ許容値を使用して，入力データセットのサブセットのグリフを作成することを選択できます．ここでは，5パーセントのマージ許容値を指定します．これは，バウンディングボックスの長さの5パーセントに相当します．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:65
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:187
msgid "create a subset of arrows using the glyph filter"
msgstr "グリフフィルタを使用して矢印のサブセットを作成する"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:87
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:248
msgid ""
"A common approach is to load vectors directly to the mesh object and then "
"access the :attr:`pyvista.DataSet.arrows` property to produce glyphs."
msgstr ""
"一般的な方法は，メッシュオブジェクトに直接ベクトルをロードして，グリフを生成するために :attr:`pyvista.DataSet.arrows` "
"プロパティにアクセスする方法です．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:124
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:336
msgid "Plot the arrows and the sphere."
msgstr "矢印と球体をプロットします．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:162
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:412
msgid ":download:`Download Jupyter notebook: e_glyphs.ipynb <e_glyphs.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: e_glyphs.ipynb <e_glyphs.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:166
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:416
msgid ":download:`Download Python source code: e_glyphs.py <e_glyphs.py>`"
msgstr ":download:`Download Python source code: e_glyphs.py <e_glyphs.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/e_glyphs.rst:170
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:420
msgid ":download:`Download zipped: e_glyphs.zip <e_glyphs.zip>`"
msgstr ":download:`Download zipped: e_glyphs.zip <e_glyphs.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/index.rst:25
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:258
msgid ":ref:`sphx_glr_tutorial_04_filters_exercises_b_clipping.py`"
msgstr ":ref:`sphx_glr_tutorial_04_filters_exercises_b_clipping.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/index.rst:42
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:275
msgid ":ref:`sphx_glr_tutorial_04_filters_exercises_c_compute-normals.py`"
msgstr ":ref:`sphx_glr_tutorial_04_filters_exercises_c_compute-normals.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/index.rst:59
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:292
msgid ":ref:`sphx_glr_tutorial_04_filters_exercises_d_contouring.py`"
msgstr ":ref:`sphx_glr_tutorial_04_filters_exercises_d_contouring.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/index.rst:76
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:309
msgid ":ref:`sphx_glr_tutorial_04_filters_exercises_e_glyphs.py`"
msgstr ":ref:`sphx_glr_tutorial_04_filters_exercises_e_glyphs.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 4 files **from "
"tutorial/04_filters/exercises**:"
msgstr ""
"**00:00.000** total execution time for 4 files **from "
"tutorial/04_filters/exercises**:"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_04_filters_exercises_b_clipping.py` "
"(``b_clipping.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_04_filters_exercises_b_clipping.py` "
"(``b_clipping.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_tutorial_04_filters_exercises_c_compute-normals.py` "
"(``c_compute-normals.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_04_filters_exercises_c_compute-normals.py` "
"(``c_compute-normals.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_tutorial_04_filters_exercises_d_contouring.py` "
"(``d_contouring.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_04_filters_exercises_d_contouring.py` "
"(``d_contouring.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/exercises/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_tutorial_04_filters_exercises_e_glyphs.py` (``e_glyphs.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_04_filters_exercises_e_glyphs.py` (``e_glyphs.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:6
msgid "Filters"
msgstr "フィルタ"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:8
msgid ""
"Demonstrate the PyVista filters API to perform mesh analysis and alteration"
msgstr "メッシュの解析と変更を行うためのPyVistaフィルタAPIのデモを行います．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:13
msgid ""
"This section of the tutorial was adopted from the Filtering section of "
"`PyVista's Example Gallery "
"<https://docs.pyvista.org/version/stable/examples/01-filter/index.html>`_."
msgstr ""
"このチュートリアルのセクションは `PyVista's Example Gallery "
"<https://docs.pyvista.org/version/stable/examples/01-filter/index.html>`_ "
"のフィルタリングセクションから採用されたものです．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:17
msgid ""
"PyVista mesh objects have a suite of common filters ready for immediate use "
"directly on the object. These filters include the following (see `Filters "
"API <https://docs.pyvista.org/version/stable/api/core/filters.html>`_ for a "
"complete list):"
msgstr ""
"PyVistaのメッシュオブジェクトには，オブジェクト上で直接すぐに使える一般的なフィルタが用意されています．これらのフィルタには以下のものがあります（完全なリストは"
" `Filters API "
"<https://docs.pyvista.org/version/stable/api/core/filters.html>`_ "
"を参照してください）．"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:76
msgid ""
"We can now plot this filtered dataset along side an outline of the original "
"dataset:"
msgstr "このフィルタ処理されたデータセットを，元のデータセットのアウトラインに沿ってプロットできるようになりました:"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:184
msgid ":ref:`sphx_glr_tutorial_04_filters_a_lesson_filters.py`"
msgstr ":ref:`sphx_glr_tutorial_04_filters_a_lesson_filters.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:343
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/index.rst:25
msgid ":ref:`sphx_glr_tutorial_04_filters_solutions_b_clipping.py`"
msgstr ":ref:`sphx_glr_tutorial_04_filters_solutions_b_clipping.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:360
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/index.rst:42
msgid ":ref:`sphx_glr_tutorial_04_filters_solutions_c_compute-normals.py`"
msgstr ":ref:`sphx_glr_tutorial_04_filters_solutions_c_compute-normals.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:377
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/index.rst:59
msgid ":ref:`sphx_glr_tutorial_04_filters_solutions_d_contouring.py`"
msgstr ":ref:`sphx_glr_tutorial_04_filters_solutions_d_contouring.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/index.rst:394
#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/index.rst:76
msgid ":ref:`sphx_glr_tutorial_04_filters_solutions_e_glyphs.py`"
msgstr ":ref:`sphx_glr_tutorial_04_filters_solutions_e_glyphs.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/sg_execution_times.rst:9
msgid ""
"**00:07.095** total execution time for 1 file **from tutorial/04_filters**:"
msgstr ""
"**00:07.095** total execution time for 1 file **from tutorial/04_filters**:"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_04_filters_a_lesson_filters.py` "
"(``a_lesson_filters.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_04_filters_a_lesson_filters.py` "
"(``a_lesson_filters.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/sg_execution_times.rst:36
msgid "00:07.095"
msgstr "00:07.095"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_04_filters_solutions_b_clipping.py>` to download"
" the full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_04_filters_solutions_b_clipping.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/b_clipping.rst:712
msgid "**Total running time of the script:** (0 minutes 1.886 seconds)"
msgstr "**Total running time of the script:** (0 minutes 1.886 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_04_filters_solutions_c_compute-normals.py>` to "
"download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_04_filters_solutions_c_compute-normals.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/c_compute-normals.rst:263
msgid "**Total running time of the script:** (0 minutes 40.861 seconds)"
msgstr "**Total running time of the script:** (0 minutes 40.861 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_04_filters_solutions_d_contouring.py>` to "
"download the full example code or to run this example in your browser via "
"Binder"
msgstr ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_04_filters_solutions_d_contouring.py>` to "
"download the full example code or to run this example in your browser via "
"Binder"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/d_contouring.rst:331
msgid "**Total running time of the script:** (0 minutes 9.271 seconds)"
msgstr "**Total running time of the script:** (0 minutes 9.271 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_04_filters_solutions_e_glyphs.py>` to download "
"the full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_04_filters_solutions_e_glyphs.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/e_glyphs.rst:394
msgid "**Total running time of the script:** (0 minutes 1.248 seconds)"
msgstr "**Total running time of the script:** (0 minutes 1.248 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:9
msgid ""
"**00:43.994** total execution time for 4 files **from "
"tutorial/04_filters/solutions**:"
msgstr ""
"**00:43.994** total execution time for 4 files **from "
"tutorial/04_filters/solutions**:"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_04_filters_solutions_c_compute-normals.py` "
"(``c_compute-normals.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_04_filters_solutions_c_compute-normals.py` "
"(``c_compute-normals.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:36
msgid "00:40.861"
msgstr "00:40.861"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_tutorial_04_filters_solutions_b_clipping.py` "
"(``b_clipping.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_04_filters_solutions_b_clipping.py` "
"(``b_clipping.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:39
msgid "00:01.886"
msgstr "00:01.886"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_tutorial_04_filters_solutions_e_glyphs.py` (``e_glyphs.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_04_filters_solutions_e_glyphs.py` (``e_glyphs.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:42
msgid "00:01.248"
msgstr "00:01.248"

#: ../../pyvista-tutorial/doc/source/tutorial/04_filters/solutions/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_tutorial_04_filters_solutions_d_contouring.py` "
"(``d_contouring.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_04_filters_solutions_d_contouring.py` "
"(``d_contouring.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:13
msgid ""
"Click :ref:`here "
"<sphx_glr_download_tutorial_05_action_a_lesson_geovista.py>` to download the"
" full example code or to run this example in your browser via Binder"
msgstr ""
":ref:`ここ <sphx_glr_download_tutorial_05_action_a_lesson_geovista.py>` "
"をクリックして，サンプルコードをダウンロードするか，Binder を使ってこのサンプルをブラウザで実行してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:22
msgid "Using GeoVista"
msgstr "GeoVistaの使用"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:24
msgid ""
"This is provided by `@bjlittle <https://github.com/bjlittle>`_ in `this "
"discussion <https://github.com/bjlittle/geovista/discussions/343>`_ and "
"modified by `@tkoyama010 <https://github.com/tkoyama010>`_ ."
msgstr ""
"これは， `@bjlittle <https://github.com/bjlittle>`_ が `この議論 "
"<https://github.com/bjlittle/geovista/discussions/343>`_ で提供し， `@tkoyama010 "
"<https://github.com/tkoyama010>`_ が修正したものである．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:30
msgid ""
"You may think that PyVista is a little too abstract for what you want to do."
" Therefore, we will introduce GeoVista, which was developed as a gateway to "
"cartographic capability."
msgstr ""
"PyVistaは自分のやりたいことに対して少し抽象的すぎると思うかもしれません．そこで，地図作成機能への入り口として開発されたGeoVistaを紹介します．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:34
msgid ""
"GeoVista is a very good external example of using PyVista in a more concrete"
" use case."
msgstr "GeoVistaは，より具体的なユースケースでPyVistaを使用する非常に良い外部例です．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:62
msgid "**Motivation of GeoVista**"
msgstr "**GeoVistaのモチベーション**"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:64
msgid ""
"The goal of GeoVista is simple; to complement PyVista with a convenient "
"cartographic capability."
msgstr "GeoVistaの目標はシンプルで，便利な地図作成機能でPyVistaを補完することです．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:67
msgid ""
"In this regard, from a design perspective we aim to keep GeoVista as pure to"
" PyVista as possible i.e., minimise specialisation as far as practically "
"possible in order to maximise native compatibility within the PyVista and "
"VTK ecosystems."
msgstr ""
"この点に関して，設計の観点から，我々はGeoVistaをPyVistaに対して可能な限り純粋な状態に保つこと、つまり，PyVistaとVTKのエコシステム内でのネイティブな互換性を最大化するために，現実的に可能な限り特殊化を最小限に抑えることを目指しています．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:72
msgid ""
"We intend GeoVista to be a cartographic gateway into the powerful world of "
"PyVista, and all that it offers."
msgstr ""
"私たちはGeoVistaを，PyVistaのパワフルな世界，そしてPyVistaが提供するすべてのものへの地図上のゲートウェイにするつもりです．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:75
msgid ""
"GeoVista is intentionally agnostic to packages such as geopandas, iris, "
"xarray et al, which specialise in preparing your spatial data for "
"visualisation. Rather, we delegate that responsibility and choice of tool to"
" you the user, as we want GeoVista to remain as flexible and open-ended as "
"possible to the entire Scientific Python community."
msgstr ""
"GeoVista は，geopandas，iris，xarray "
"など，空間データを可視化するための準備に特化したパッケージには意図的にいぞんしません．むしろ、私たちはGeoVistaがScientific "
"Pythonコミュニティ全体に対して可能な限り柔軟でオープンエンドであることを望んでいるため，その責任とツールの選択をユーザーに委ねます．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:81
msgid "Simply put, \"GeoVista is to PyVista\", as \"Cartopy is to Matplotlib\"."
msgstr "簡単に言えば， \"GeoVistaはPyVistaに似ている\"， \"CartopyはMatplotlibに似ている\" です．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:85
msgid "**Plotting Theme**"
msgstr "**プロットテーマ**"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:87
msgid ""
"GeoVista defines its own plotting theme in `geovista.theme`. PyVista allows "
"you to set global and local plotting themes to easily set (learn more in "
"`Control Global and Local Plotting Themes "
"<https://docs.pyvista.org/version/stable/examples/02-plot/themes.html>`_ )."
msgstr ""
"GeoVista は独自のプロットテーマを `geovista.theme` "
"で定義します。PyVistaではグローバルとローカルのプロットテーマを簡単に設定することができます(詳しくは `Control Global and "
"Local Plotting Themes "
"<https://docs.pyvista.org/version/stable/examples/02-plot/themes.html>`_ "
"を見てください)．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:95
msgid ""
"At the `Met Office <https://www.metoffice.gov.uk/>`_ , they are moving to an"
" unstructured cube-sphere mesh which is a cube projected out onto a sphere "
"i.e., there are six panels on the sphere. Each cube-sphere is defined by the"
" number of \"cells squared\" within each panel e.g., the following example "
"is a C48 cube-sphere, so there are 6 * 48 * 48 cells."
msgstr ""
"`Met Office <https://www.metoffice.gov.uk/>`_ "
"では，立方体を球体に投影した非構造化キューブ球メッシュに移行している．各キューブ球は，各パネル内の \"セルの2乗\" "
"の数で定義されます．例えば，次の例はC48キューブ球なので，6 * 48 * 48個のセルがあります．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:101
msgid "GeoVista has samples for it."
msgstr "GeoVistaにはサンプルがあります．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:160
msgid "**LFRic - a modelling system fit for future computers**"
msgstr "**LFRic - 未来のコンピューターにふさわしいモデリングシステム**"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:162
msgid ""
"If you are interested in LFRic, please refer to `LFRic - a modelling system "
"fit for future computers "
"<https://www.metoffice.gov.uk/research/approach/modelling-systems/lfric>`_ ."
msgstr ""
"LFRicに興味がある方は、`LFRic - a modelelling system fit for future computers "
"<https://www.metoffice.gov.uk/research/approach/modelling-systems/lfric>`_ ."
" を参照してください。"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:167
msgid ""
"Since the `c48` is defined as PolyData in PyVista, it can be drawn using "
"PyVista's plot method."
msgstr "`c48` はPyVistaでPolyDataとして定義されているので，PyVistaのplotメソッドを使って描画することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:191
msgid ""
"Here's a sample C48 cube-sphere populated with Sea Surface Temperature data."
" In this data, cell data from PyVista's PolyData object is used as "
"temperature data:"
msgstr ""
"海面水温データを入力した C48 "
"キューブ球のサンプルです．このデータでは，PyVistaのPolyDataオブジェクトのセルデータが温度データとして使用されています．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:251
msgid "Note that, the land masses are masked."
msgstr "陸地はマスクされていることに注意してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:255
msgid ""
"There is a convenience within `geovista.geodesic` that creates a "
"`geovista.geodesic.BBox` instance for any 1 of the 6 cube-sphere panels "
"i.e., `geovista.geodesic.panel`"
msgstr ""
"`geovista.geodesic` には，6つの立方体-球体パネルのいずれか1つ，つまり  `geovista.geodesic.panel` "
"に対して `geovista.geodesic.BBox` インスタンスを作成する便利な機能がある．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:329
msgid ""
"Note that, this bounding box (bbox) is constructed from geodesic lines i.e.,"
" great circles, and is a 3D manifold. As such, we can then use it to extract"
" points/cells from any underlying mesh. Before doing that, first let's "
"render the bounding box and the mesh together so that we can see their "
"relationship to one another. Note that, our bbox instance is indeed covering"
" the correct panel of the cube-sphere."
msgstr ""
"このバウンディングボックス(bbox)は測地線，つまり大円から構成され、3次元多様体であることに注意してください．そのため，このバウンディングボックスを使って，下にあるメッシュから点/セルを抽出することができます．その前に，まずバウンディングボックスとメッシュを一緒にレンダリングして，お互いの関係を確認しましょう．bboxインスタンスが確かにキューブ球の正しいパネルをカバーしていることに注意してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:362
msgid ""
"As a fun exercise, you could play with opacity on the bbox.mesh to see "
"through the manifold to the underlying cube-sphere surface, or turn on the "
"gridlines of the bbox etc"
msgstr ""
"楽しい練習として，bbox.meshの不透明度を操作して，多様体を通してその下の立方体球面を見たり，bboxのグリッドラインをオンにしたりすることもできます．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:392
msgid "Let's now use the bounding box to extract the mesh that it encloses:"
msgstr "それでは，バウンディングボックスを使って，それが囲むメッシュを抽出してみよう:"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:410
msgid "`region` is defined as PolyData of PyVista."
msgstr "`region` はPyVistaのPolyDataとして定義されている．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:11635
msgid "Let's check what kind of array does `region` have."
msgstr "では， `region` がどのような配列を持っているのか見てみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:11659
msgid ""
"You could perhaps then play with the `preference` kwarg of the "
"`bbox.enclosed` method to see the impact on the end result."
msgstr ""
"そして， `box.enclosed` メソッドの `preference` kwargを使って，最終的な結果への影響を見ることができるでしょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:11664
msgid ""
"However, let's `geo-locate` the region by also rendering a texture mapped "
"base layer in addition to some coastlines:"
msgstr ""
"しかし，いくつかの海岸線に加えて，テクスチャマッピングされたベースレイヤーもレンダリングすることで，その地域を `地理的に位置づけ` てみましょう:"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:11694
msgid ""
"GeoVista has its own `Plotter` class, `GeoPlotter`. It is a customized class"
" that inherits from PyVista's `Plotter` class and provides practical methods"
" for geoscience such as `add_coastlines` and `add_base_layer`."
msgstr ""
"GeoVista には独自の `Plotter` クラスである `GeoPlotter` があります．これは PyVista の `Plotter` "
"クラスを継承してカスタマイズされたクラスで， `add_coastlines` や `add_base_layer` "
"といった地球科学のための実用的なメソッドを提供しています．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19382
msgid ""
"Also, as we're not so interested in the land mask, let's threshold that out "
"and re-spin the render. To threshold the region and make `sea_region` we can"
" use `threshold` method of PyVista."
msgstr ""
"また，陸地のマスクにはあまり興味がないので，閾値を設定してレンダリングをやり直します．領域をしきい値化して `sea_region` "
"を作成するには，PyVistaの `threshold` メソッドを使用します．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19583
msgid ""
"Since we're here... let's transform the sea_region to a Robinson projection:"
msgstr "せっかくなので... sea_region をRobinson投影に変換してみましょう:"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19612
msgid ""
"It's also easily possible to get the inverted result i.e., the surface of "
"the mesh not enclosed by the bbox manifold:"
msgstr "反転した結果，つまりbbox多様体に囲まれていないメッシュの表面を得ることも簡単にできる: "

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19641
msgid ""
"Akin to before, let's render this again, but with a base layer underneath:"
msgstr "先ほどと同じように，ベースレイヤーを下にして、もう一度レンダリングしてみましょう:"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19670
msgid ""
"It's not quite clear what's going on here, although playing with the render "
"interactively helps, but let's transform the mesh to the Mollweider "
"projection to help clarify matters:"
msgstr "レンダーをインタラクティブに操作することは助けになりますが，ここで何が起こっているのかはっきりしません．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19701
msgid ""
"And again, let's remove the land mask so that we can see more of the texture"
" mapped base layer:"
msgstr "もう一度，テクスチャマッピングされたベースレイヤーがもっと見えるように，陸地のマスクを外してみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19733
msgid ""
"Also, explore the BBox class to create custom bounding box instances, and "
"there is also the geovista.geodesic.wedge, a convenience function akin to "
"the `geovista.geodesic.panel`. Plus you can easily render geodesic lines "
"i.e., great circles, with geovista.geodesic.line."
msgstr ""
"`geovista.geodesic.panel` に似た便利な機能である geovista.geodesic.wedge もあります。さらに、 "
"geovista.geodesic.line を使えば，測地線，つまり大円を簡単にレンダリングできます．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19738
msgid ""
"The point here is that this is just the first step. GeoVista is aiming to "
"provide a richer suite of such primitives to extract regions in similar "
"ways. But the capability showcased by `geovista.geodesic` hints at the "
"direction of where I'm taking geovista. The other point to make is that "
"thanks to `pyvista`and `vtk` the extraction operation is pretty darn fast as"
" opposed to other traditional approaches (perhaps I should garner metrics to"
" back that up!)"
msgstr ""
"ここで重要なのは，これは最初の一歩に過ぎないということです．GeoVistaは，同じような方法でリージョンを抽出するために，このようなプリミティブの豊富なスイートを提供することを目指しています．しかし，"
" `geovista.geodesic` "
"によって示された機能は，私がgeovistaをどこに持っていこうとしているのかを示唆しています．もう1つのポイントは， `pyvista` と "
"`vtk` のおかげで，他の伝統的なアプローチとは対照的に、抽出操作がかなり速いということです "
"(それを裏付けるメトリクスを集めるべきかもしれません!)．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19748
msgid ""
"So far we've demonstrated GeoVista's ability to cope with unstructured data."
" Now let's plot a curvilinear mesh using Met Office Unified Model (UM) ORCA2"
" Sea Water Potential Temperature data, with 10m Natural Earth coastlines and"
" a 1:50m Natural Earth I base layer."
msgstr ""
"ここまでは，GeoVistaが構造化されていないデータにも対応できることを示してきました．それでは，Met Office Unified Model "
"(UM) のORCA2海水温位データを使って、10mのNatural Earth海岸線と1:50mのNatural Earth I "
"ベースレイヤーを使って曲線メッシュをプロットしてみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19899
msgid "Create the mesh from the sample data."
msgstr "サンプルデータからメッシュを作成します．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19917
msgid "Remove cells from the mesh with NaN values."
msgstr "メッシュからNaN値のセルを削除します．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19935
msgid "Plot the mesh."
msgstr "メッシュをプロットします．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19965
msgid "**Experimental**"
msgstr "**実験的**"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19967
msgid ""
"GeoVista is still in the experimental stages. They would love your feedback,"
" but as immature packages their API, documentation, test coverage and CI are"
" still 'under construction'."
msgstr ""
"GeoVistaはまだ実験段階です．あなたのフィードバックをお待ちしていますが，未熟なパッケージのため，API，ドキュメント，テストカバレッジ，CIはまだ"
" '建設中' です．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19973
msgid ""
"Whilst you're here, why not hop on over to the `pyvista-xarray project "
"<https://github.com/pyvista/pyvista-xarray>`_ and check it out!"
msgstr ""
"ここにいる間に， `pyvista-xarray project <https://github.com/pyvista/pyvista-"
"xarray>`_ に飛び込んでチェックしてみてはいかがでしょう！"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19977
msgid "xarray DataArray accessors for PyVista to visualize datasets in 3D"
msgstr "xarray データセットを3Dで可視化するためのPyVista用DataArrayアクセサ"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19979
msgid ""
"You must import `pvxarray` in order to register the DataArray accessor with "
"xarray. After which, a pyvista namespace of accessors will be available."
msgstr ""
"DataArrayアクセサをxarrayに登録するには `pvxarray` "
"をインポートする必要があります．その後，アクセサのpyvista名前空間が利用可能になります．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:19999
msgid "Load mean sea surface temperature dataset"
msgstr "平均海面水温データセットをロードします"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:20017
msgid "Plot in 3D"
msgstr "3Dでプロットします"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:20040
msgid "Or grab the mesh object for use with PyVista and GeoVista."
msgstr "または，PyVistaやGeoVistaで使用するためのメッシュオブジェクトを取得します．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:20072
msgid ""
"This is inspired by `Xarray Fundamentals "
"<https://tutorial.xarray.dev/workshops/online-tutorial-"
"series/01_xarray_fundamentals.html>`_ in Xarray Tutorial."
msgstr ""
"これはXarray Tutorialの `Xarray Fundamentals "
"<https://tutorial.xarray.dev/workshops/online-tutorial-"
"series/01_xarray_fundamentals.html>`_  にインスパイアされたものです．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:20093
msgid "**Total running time of the script:** ( 1 minutes  24.252 seconds)"
msgstr "**Total running time of the script:** ( 1 minutes  24.252 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:20112
msgid ""
":download:`Download Python source code: a_lesson_geovista.py "
"<a_lesson_geovista.py>`"
msgstr ""
":download:`Download Python source code: a_lesson_geovista.py "
"<a_lesson_geovista.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/a_lesson_geovista.rst:20116
msgid ""
":download:`Download Jupyter notebook: a_lesson_geovista.ipynb "
"<a_lesson_geovista.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_lesson_geovista.ipynb "
"<a_lesson_geovista.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:5
msgid "PyVista in Action"
msgstr "PyVistaの活用"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:7
msgid ""
"Show how PyVista is already being used within several projects and can be "
"used for all things visualization. (15 min for talk)"
msgstr "PyVistaがすでにいくつかのプロジェクトで使用されており，あらゆる可視化に使用できることを紹介します．(講演時間15分)"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:11
msgid ""
"This section of the tutorial was adopted from `External Examples "
"<https://docs.pyvista.org/getting-started/external_examples.html>`_ chapter "
"of the PyVista documentation."
msgstr ""
"このチュートリアルのセクションは，PyVista ドキュメントの `External Examples "
"<https://docs.pyvista.org/getting-started/external_examples.html>`_ "
"の章から採用されています．"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:17
msgid ""
"Here are a list of longer, more technical examples of what PyVista can do!"
msgstr "PyVistaができることの，より長い，より技術的な例のリストを以下に示します!"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:21
msgid ""
"Please note that these examples link to external websites. If any of these "
"links are broken, please raise an `issue "
"<https://github.com/pyvista/pyvista/issues>`_."
msgstr ""
"これらの例は外部のウェブサイトにリンクしていることに注意してください。これらのリンクが壊れている場合は、 `イシュー "
"<https://github.com/pyvista/pyvista/issues>`_ を提起してください。"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:26
msgid ""
"Do you have a technical processing workflow or visualization routine you "
"would like to share? If so, please consider sharing your work here "
"submitting a PR at `pyvista/pyvista <https://github.com/pyvista/pyvista/>`_ "
"and we would be glad to add it."
msgstr ""
"共有したい技術的な処理ワークフローや可視化ルーチンをお持ちですか？ その場合は、 `pyvista/pyvista "
"<https://github.com/pyvista/pyvista/>`_ にPRを投稿してください。"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:36
msgid "Numerical Tours of Computational Mechanics with FEniCSx"
msgstr "FEniCSxによる計算力学の数値ツアー"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:43
msgid "PyElastica"
msgstr "PyElastica"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:50
msgid "VisualPIC"
msgstr "VisualPIC"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:57
msgid "stpyvista"
msgstr "stpyvista"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:64
msgid "DrillDown"
msgstr "DrillDown"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:71
msgid "FElupe"
msgstr "FElupe"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:78
msgid "Air Racing Trajectory Optimization"
msgstr "エアレースの軌道最適化"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:85
msgid "GemGIS"
msgstr "GemGIS"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:92
msgid "sunkit-pyvista"
msgstr "sunkit-pyvista"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:99
msgid "PyHyperbolic3D"
msgstr "PyHyperbolic3D"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:106
msgid "topoGenesis"
msgstr "topoGenesis"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:113
msgid "pyFBS: Frequency Based Substructuring in Python"
msgstr "pyFBS: Pythonによる周波数ベースのサブストラクチャリング"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:120
msgid "Coil Field Lines example in Magpylib"
msgstr "Magpylibでのコイル磁力線の例"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:127
msgid "Ivan Nikolov on Neighbourhood Analysis"
msgstr "近隣分析についての Ivan Nikolov "

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:134
msgid "Ivan Nikolov on Voxelization"
msgstr "ボクセリゼーションの Ivan Nikolov"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:141
msgid "Ivan Nikolov on Visualization Libraries"
msgstr "視覚化ライブラリの Ivan Nikolov"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:148
msgid "Gradient Descent Visualizer"
msgstr "勾配降下ビジュアライザー"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:155
msgid "GmshModel"
msgstr "GmshModel"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:162
msgid "GeoVista"
msgstr "GeoVista"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:169
msgid "geemap"
msgstr "geemap"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:176
msgid "PteraSoftware"
msgstr "PteraSoftware"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:183
msgid "Stﾃｩphane Laurent's artwork"
msgstr "Stﾃｩphane Laurent's artwork"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:190
msgid "VesselVio"
msgstr "VesselVio"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:197
msgid "Atmospheric Convection"
msgstr "大気対流"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:204
msgid "Damavand Volcano"
msgstr "Damavand火山"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:211
msgid "Anvil Cirrus Plumes"
msgstr "Anvil Cirrus Plumes"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:218
msgid "Optimization visualization with PyVista"
msgstr "PyVistaによる最適化可視化"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:225
msgid "FLEM: A diffusive landscape evolution model"
msgstr "FLEM: 拡散的景観進化モデル"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:232
msgid "Orvisu Demo Application"
msgstr "Orvisuデモアプリケーション"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:239
msgid "PyMeshFix's example gallery"
msgstr "PyMeshFixのサンプルギャラリー"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:246
msgid "TetGen's example gallery"
msgstr "TetGenの実例ギャラリー"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:253
msgid "PVGeo's example gallery"
msgstr "PVGeoの実例ギャラリー"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:260
msgid "FORGE Geothermal Project"
msgstr "FORGE地熱プロジェクト"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:267
msgid "AeroSandbox"
msgstr "エアロサンドボックス"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:274
msgid "OpenFOAM Rendering"
msgstr "OpenFOAMレンダリング"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:281
msgid "3D Rendering with Discretize"
msgstr "離散化を使用した3 Dレンダリング"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/external_gallery.txt:288
msgid "3D visualization for the Open Mining Format (omf)"
msgstr "Open Mining Format (omf) の3 D表示"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/index.rst:8
msgid ""
"See `GeoVista tutorial "
"<https://geovista.readthedocs.io/en/latest/tutorials/region-manifold-"
"extraction.html>`_ ."
msgstr ""
"`GeoVistaチュートリアル "
"<https://geovista.readthedocs.io/en/latest/tutorials/region-manifold-"
"extraction.html>`_ を参照。"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/sg_execution_times.rst:8
msgid "**01:24.252** total execution time for **tutorial_05_action** files:"
msgstr "**01:24.252** total execution time for **tutorial_05_action** files:"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/sg_execution_times.rst:11
msgid ""
":ref:`sphx_glr_tutorial_05_action_a_lesson_geovista.py` "
"(``a_lesson_geovista.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_05_action_a_lesson_geovista.py` "
"(``a_lesson_geovista.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/05_action/sg_execution_times.rst:11
msgid "01:24.252"
msgstr "01:24.252"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_06_vtk_a_1_transition_vtk.py>` to download the "
"full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_06_vtk_a_1_transition_vtk.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:22
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:17
msgid "Transitioning from VTK to PyVista"
msgstr "VTKからPyVistaへの移行"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:20
msgid ""
"VTK is primarily developed in C++ and uses chained setter and getter "
"commands to access data. Instead, PyVista wraps the VTK data types into "
"numpy arrays so that users can benefit from its bracket syntax and fancy "
"indexing.  This section demonstrates the difference between the two "
"approaches in a series of examples."
msgstr ""
"VTKは主にC++で開発されており，データへのアクセスには連鎖したセッターとゲッターのコマンドを使用します．その代わりに，PyVista は VTK "
"のデータタイプを numpy 配列にラップして，ブラケット構文や派手なインデックスの恩恵を受けられるようにしています． "
"このセクションでは，一連の例で2つのアプローチの違いを説明します．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:30
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:26
msgid ""
"For example, to hard-code values for a `vtk.vtkImageData`_ data structure "
"using VTK Python's bindings, one would write the following:"
msgstr ""
"例えば，VTK Python のバインディングを使用して `vtk.vtkImageData`_ "
"データ構造の値をハードコードするには，次のように記述します．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:57
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:35
msgid "Create values for a 300x300 image dataset"
msgstr "300x300の画像データセットの値を作成する"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:59
msgid "In our example, we want to have values from the function"
msgstr "この例では，関数からの値が欲しいのです"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:87
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:49
msgid "Create the image structure"
msgstr "画像構造の作成"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:107
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:59
msgid "Assign the values to the image"
msgstr "画像に値を割り当てる"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:130
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:66
msgid ""
"As you can see, there is quite a bit of boilerplate that goes into the "
"creation of a simple `vtk.vtkImageData`_ dataset. PyVista provides much more"
" concise syntax that is more \"Pythonic\". The equivalent code in PyVista "
"is:"
msgstr ""
"ご覧のように，単純な `vtk.vtkImageData`_ "
"データセットを作成するためには，かなり多くのボイラープレートが必要です．PyVistaでは，より簡潔で，より \"Pythonic "
"\"な構文が提供されています．PyVistaで同等のコードは以下の通りです．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:152
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:78
msgid ""
"Use the meshgrid function to create 2D \"grids\" of the x and y values. This"
" section effectively replaces the vtkDoubleArray."
msgstr ""
"meshgrid 関数を使用して，x および y 値の 2D \"グリッド\" "
"を作成します．ここでは，実質的にvtkDoubleArrayを置き換えています．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:173
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:88
msgid "Create the grid.  Note how the values must use Fortran ordering."
msgstr "グリッドを作成します． 値がどのようにFortran順序を使用しなければならないかに注意してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:192
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:96
msgid "Here, PyVista has done several things for us:"
msgstr "ここでは，PyVistaがいくつかのことをしてくれています．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:194
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:98
msgid ""
"PyVista combines the dimensionality of the data (in the shape of the "
":class:`numpy.ndarray`) with the values of the data in one line. VTK uses "
"\"tuples\" to describe the shape of the data (where it sits in space) and "
"\"components\" to describe the type of data (1 = scalars/scalar fields, 2 = "
"vectors/vector fields, n = tensors/tensor fields). Here, shape and values "
"are stored concretely in one variable."
msgstr ""
"PyVistaでは，データの次元（ :class:`numpy.ndarray` "
"の形をしている）とデータの値を1行にまとめています．VTKでは，データの形状(空間上の位置)を表すために \"タプル\" "
"を使用し，データの種類(1=スカラー/スカラーフィールド，2=ベクトル/ベクトルフィールド，n=テンソル/テンソルフィールド)を表すために "
"\"コンポーネント\" を使用しています．ここでは，1つの変数に形状と値が具体的に格納されています．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:202
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:106
msgid ""
":class:`pyvista.ImageData` wraps `vtk.vtkImageData`_, just with a different "
"name; they are both containers of evenly spaced points. Your data does not "
"have to be an \"image\" to use it with `vtk.vtkImageData`_; rather, like "
"images, values in the dataset are evenly spaced apart like pixels in an "
"image."
msgstr ""
":class:`pyvista.ImageData` は `vtk.vtkImageData`_ "
"をラップしたものです．名前が違うだけで，どちらも等間隔の点のコンテナです．どちらも等間隔の点のコンテナです． `vtk.vtkImageData`_ "
"で使用するデータは \"画像\" である必要はありません．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:208
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:112
msgid ""
"Furthermore, since we know the container is for uniformly spaced data, "
"pyvista sets the origin and spacing by default to ``(0, 0, 0)`` and ``(1, 1,"
" 1)``. This is another great thing about PyVista and Python! Rather than "
"having to know everything about the VTK library up front, you can get "
"started very easily! Once you get more familiar with it and need to do "
"something more complex, you can dive deeper. For example, changing the "
"origin and spacing is as simple as:"
msgstr ""
"さらに，コンテナが等間隔のデータ用であることがわかっているので， pyvista はデフォルトで原点と間隔を ``(0, 0, 0)`` と ``(1,"
" 1, 1)`` "
"に設定します．これは，PyVistaとPythonのもう一つの素晴らしい点です．VTKライブラリのすべてを前もって知っておく必要はなく，非常に簡単に始めることができます．慣れてきて，もっと複雑なことをする必要が出てきたら，もっと深く掘り下げることができます．例えば，原点と間隔の変更は以下のように簡単にできます．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:221
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:126
msgid ""
"The name for the :attr:`point_array <pyvista.point_array>` is given directly"
" in dictionary-style fashion. Also, since VTK stores data on the heap "
"(linear segments of RAM; a C++ concept), the data must be flattened and put "
"in Fortran ordering (which controls how multidimensional data is laid out in"
" physically 1d memory; numpy uses \"C\"-style memory layout by default). "
"This is why in our earlier example, the first argument to ``SetValue()`` was"
" written as ``x*300 + y``. Here, numpy takes care of this for us quite "
"nicely and it's made more explicit in the code, following the Python best "
"practice of \"Explicit is better than implicit\"."
msgstr ""
":attr:`point_array &lt;pyvista.point_array&gt;` "
"の名前は，辞書形式で直接与えられます．また，VTKはデータをヒープ(RAMの線形セグメント．C++の概念)に保存するため，データをフラット化してFortranの順序(多次元データが物理的に1次元のメモリにどのようにレイアウトされるかを制御する．numpyはデフォルトで"
" \"C \"スタイルのメモリレイアウトを使用する)にする必要があります．先ほどの例で， ``SetValue()`` の最初の引数が ``x*300 "
"+ y`` と書かれていたのはこのためです．ここでは，numpyがこれをうまく処理してくれるので，Pythonのベストプラクティスである "
"\"Explicit is better than implicit\" に従って，コードの中でより明示的にしています．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:232
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:137
msgid ""
"Finally, with PyVista, each geometry class contains methods that allow you "
"to immediately plot the mesh without also setting up the plot. For example, "
"in VTK you would have to do:"
msgstr ""
"最後に，PyVistaでは，各ジオメトリクラスにメソッドが用意されているので，プロットの設定をしなくても，すぐにメッシュをプロットすることができます．例えば，VTKでは次のようにする必要があります．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:253
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:156
msgid "However, with PyVista you only need:"
msgstr "しかし，PyVistaでは，必要なのは以下だけです:"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:300
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:168
msgid "PointSet Construction"
msgstr "ポイントセット構築"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:301
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:169
msgid ""
"PyVista heavily relies on NumPy to efficiently allocate and access VTK's C "
"arrays.  For example, to create an array of points within VTK one would "
"normally loop through all the points of a list and supply that to a  "
"`vtkPoints`_ class.  For example:"
msgstr ""
"PyVista は，VTK の C 配列を効率的に割り当て，アクセスするために NumPy に大きく依存しています． "
"例えば，VTKで点の配列を作るには，通常，リストのすべての点をループして，それを `vtkPoints`_ クラスに供給します． "
"例えば，以下のようになります．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:335
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:194
msgid ""
"To do the same within PyVista, you simply need to create a NumPy array:"
msgstr "PyVistaで同じことをするには，単にNumPyの配列を作成する必要があります．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:354
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:203
msgid ""
"You can use :func:`pyvista.vtk_points` to construct a `vtkPoints`_ object, "
"but this is unnecessary in almost all situations."
msgstr ""
":func:`pyvista.vtk_points` を使って `vtkPoints`_ "
"オブジェクトを構築することもできますが，ほとんどの状況では必要ありません．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:357
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:206
msgid ""
"Since the end goal is to construct a :class:`pyvista.DataSet "
"<pyvista.core.dataset.DataSet>`, you would simply pass the ``np_points`` "
"array to the :class:`pyvista.PolyData` constructor:"
msgstr ""
"最終的な目的は， :class:`pyvista.DataSet &lt;pyvista.core.dataset.DataSet&gt;` "
"を構築することなので， :class:`pyvista.PolyData` のコンストラクタに ``np_points`` の配列を渡すだけです．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:378
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:216
msgid "Whereas in VTK you would have to do:"
msgstr "VTKではそうする必要があります．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:397
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:224
msgid ""
"The same goes with assigning face or cell connectivity/topology.  With VTK "
"you would normally have to loop using :func:`InsertNextCell` and "
":func:`InsertCellPoint`.  For example, to create a single cell (triangle) "
"and then assign it to `vtkPolyData`_:"
msgstr ""
"面やセルの接続性/トポロジーを割り当てる場合も同様です． VTKでは通常， :func:`InsertNextCell` と "
":func:`InsertCellPoint` を使ってループする必要があります． 例えば，一つのセル(三角形)を作成して，それを "
"`vtkPolyData`_ に割り当てる場合:"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:423
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:239
msgid ""
"In PyVista, we can assign this directly in the constructor and then access "
"it (or change it) from the :attr:`faces <pyvista.PolyData.faces>` attribute."
msgstr ""
"PyVistaでは，コンストラクタでこれを直接割り当て， :attr:`faces &lt;pyvista.PolyData.faces&gt;` "
"属性からアクセス（変更）することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:453
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:252
msgid "PyVista Tradeoffs"
msgstr "PyVistaのトレードオフ"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:454
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:253
msgid ""
"While most features can, not everything can be simplified in PyVista without"
" losing functionality or performance."
msgstr "ほとんどの機能は可能ですが，PyVistaでは機能や性能を落とさずにすべてを簡略化できるわけではありません．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:457
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:256
msgid ""
"In the :class:`collision <pyvista.PolyDataFilters.collision>` filter, we "
"demonstrate how to calculate the collision between two meshes.  For example:"
msgstr ""
":class:`collision &lt;pyvista.PolyDataFilters.collision&gt;` "
"フィルターでは，2つのメッシュ間のコリジョンを計算する方法を示します． 例えば，以下のようになります．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:525
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:288
msgid ""
"Under the hood, the collision filter detects mesh collisions using oriented "
"bounding box (OBB) trees.  For a single collision, this filter is as "
"performant as the VTK counterpart, but when computing multiple collisions "
"with the same meshes, as in the `Collision Example "
"<https://docs.pyvista.org/examples/01-filter/collisions.html>`_ example, it "
"is more efficient to use the `vtkCollisionDetectionFilter "
"<https://vtk.org/doc/nightly/html/classvtkCollisionDetectionFilter.html>`_, "
"as the OBB tree is computed once for each mesh.  In most cases, pure PyVista"
" is sufficient for most data science, but there are times when you may want "
"to use VTK classes directly."
msgstr ""
"フードの下では，コリジョンフィルタは OBB (oriented bounding box) ツリーを使ってメッシュの衝突を検出します． しかし， "
"`Collision Example "
"<https://docs.pyvista.org/examples/01-filter/collisions.html>`_ "
"の例のように，同じメッシュで複数の衝突を計算する場合には，OBBツリーが各メッシュに対して一度ずつ計算されるため， "
"`vtkCollisionDetectionFilter "
"<https://vtk.org/doc/nightly/html/classvtkCollisionDetectionFilter.html>`_ "
"を使用した方が効率的です． ほとんどのデータサイエンスでは，純粋なPyVistaで十分ですが，VTKクラスを直接使用したい場合もあります．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:548
msgid "**Total running time of the script:** (0 minutes 1.665 seconds)"
msgstr "**Total running time of the script:** (0 minutes 1.665 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:566
msgid ""
":download:`Download Jupyter notebook: a_1_transition_vtk.ipynb "
"<a_1_transition_vtk.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_1_transition_vtk.ipynb "
"<a_1_transition_vtk.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:570
msgid ""
":download:`Download Python source code: a_1_transition_vtk.py "
"<a_1_transition_vtk.py>`"
msgstr ""
":download:`Download Python source code: a_1_transition_vtk.py "
"<a_1_transition_vtk.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_1_transition_vtk.rst:574
msgid ""
":download:`Download zipped: a_1_transition_vtk.zip <a_1_transition_vtk.zip>`"
msgstr ""
":download:`Download zipped: a_1_transition_vtk.zip <a_1_transition_vtk.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_06_vtk_a_2_pyvista_vtk.py>` "
"to download the full example code. or to run this example in your browser "
"via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_06_vtk_a_2_pyvista_vtk.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:22
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:300
msgid "PyVista and VTK Together"
msgstr "PyVistaとVTKの連携"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:24
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:302
msgid ""
"PyVista is best known for is easy to use plotting API -- being familiar to "
"most Python users already experienced with libraries like Matplotlib. Many "
"people benefit from combining the power of VTK's Python bindings for their "
"data pipelines and the flexibility and simplicity of PyVista for 3D "
"rendering. The following section demonstrates this usage scenario."
msgstr ""
"PyVistaは，使いやすいプロットAPIでよく知られており，Matplotlibのようなライブラリですでに経験を積んだほとんどのPythonユーザーにとってなじみ深いものです．多くの人が，データパイプラインにVTKのPythonバインディングの力を，3DレンダリングにPyVistaの柔軟性とシンプルさを組み合わせることで利益を得ています．次のセクションでは，この使用シナリオを説明します．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:28
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:306
msgid ""
"In case it was not made clear in the :ref:`mesh` section, PyVista mesh "
"classes are subclasses of their VTK counterparts - which means PyVista can "
"be intermixed with VTK workflows."
msgstr ""
":ref:`mesh` "
"のセクションで明確にされていないかもしれませんが，PyVistaのメッシュクラスはVTKの対応するクラスのサブクラスであり，これはPyVistaとVTKのワークフローを混在させることができることを意味しています．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:30
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:308
msgid ""
"Nothing stops you from using VTK classes and then wrapping the output with "
"PyVista for streamlined plotting. For example:"
msgstr "VTKのクラスを使って，出力をPyVistaでラップして，効率的にプロットすることを止めるものはありません．例えば"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:56
msgid "Create a circle using vtk"
msgstr "vtkを使用して円を作成する"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:78
msgid "wrap and plot using pyvista"
msgstr "Pyvistaを使ったラップとプロット"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:123
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:329
msgid ""
"In this manner, you can get the \"best of both worlds\" should you need the "
"flexibility of PyVista and the raw power of VTK."
msgstr ""
"このようにして， PyVistaの柔軟性とVTKの原動力の両方を必要とする \"best of both worlds\" を得ることができるのです．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:127
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:333
msgid ""
"You can use :func:`pyvista.Polygon` for a one line replacement of the above "
"VTK code."
msgstr "上記のVTKコードを1行で置き換えるために， :func:`pyvista.Polygon` を使用することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:133
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:337
msgid "VTK Algorithms"
msgstr "VTKアルゴリズム"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:135
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:339
msgid ""
"Perhaps there is a VTK algorithm that is not (yet) exposed in PyVista that "
"you'd like to use. This is easy enough to work with since PyVista objects "
"are VTK objects. We can pass our PyVista meshes to the VTK algorithm, then "
"wrap the output for plotting, further filtering, or anything."
msgstr ""
"おそらく，PyVistaで（まだ）公開されていないVTKアルゴリズムで，使いたいものがあるのでしょう．PyVistaのオブジェクトはVTKのオブジェクトなので，これは十分に簡単に扱えます．PyVistaのメッシュをVTKアルゴリズムに渡して，出力をラップしてプロットしたり，さらにフィルタリングしたり，何でもできるのです．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:153
msgid "Initialize VTK algorithm"
msgstr "VTKアルゴリズムの初期化"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:170
msgid "Pass PyVista object as input to VTK"
msgstr "VTKへの入力としてPyVistaオブジェクトを渡す"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:187
msgid "Set parameters"
msgstr "パラメータの設定"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:209
msgid "Retrieve output and wrap with PyVista"
msgstr "PyVistaで出力とラップを取得する"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:226
msgid "Use PyVista to produce contours"
msgstr "PyVistaを使って輪郭線を作成する"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:243
msgid "Use PyVista to plot"
msgstr "PyVistaを使ってプロットする"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:292
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:380
msgid ""
"The above example was adapted from VTK's `Embed Points Into Volume "
"<https://kitware.github.io/vtk-"
"examples/site/Cxx/PolyData/EmbedPointsIntoVolume/>`_"
msgstr ""
"上記の例は，VTKの `Embed Points Into Volume <https://kitware.github.io/vtk-"
"examples/site/Cxx/PolyData/EmbedPointsIntoVolume/>`_ から引用したものです．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:307
msgid "**Total running time of the script:** (0 minutes 2.312 seconds)"
msgstr "**Total running time of the script:** (0 minutes 2.312 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:325
msgid ""
":download:`Download Jupyter notebook: a_2_pyvista_vtk.ipynb "
"<a_2_pyvista_vtk.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_2_pyvista_vtk.ipynb "
"<a_2_pyvista_vtk.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:329
msgid ""
":download:`Download Python source code: a_2_pyvista_vtk.py "
"<a_2_pyvista_vtk.py>`"
msgstr ""
":download:`Download Python source code: a_2_pyvista_vtk.py "
"<a_2_pyvista_vtk.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/a_2_pyvista_vtk.rst:333
msgid ":download:`Download zipped: a_2_pyvista_vtk.zip <a_2_pyvista_vtk.zip>`"
msgstr ""
":download:`Download zipped: a_2_pyvista_vtk.zip <a_2_pyvista_vtk.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_06_vtk_b_create_vtk.py>` to "
"download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_06_vtk_b_create_vtk.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:22
msgid "Create VTK Objects"
msgstr "VTKオブジェクトの作成"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:24
msgid ""
"This exercise walks through the creation of a few different types of VTK "
"datasets."
msgstr "この演習では，いくつかの異なるタイプのVTKデータセットの作成について説明します．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:50
msgid "Create ``vtkImageData``"
msgstr "``vtkImageData`` を作成する"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:70
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:185
msgid "Add point data"
msgstr "ポイントデータの追加"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:98
#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:211
msgid "Plot with PyVista for simplicity"
msgstr "PyVistaを使った簡単なプロット"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:143
msgid "Create ``vtkStructuredGrid``"
msgstr "``vtkStructuredGrid`` を作成する"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:266
msgid "**Total running time of the script:** (0 minutes 0.577 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.577 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:284
msgid ""
":download:`Download Jupyter notebook: b_create_vtk.ipynb "
"<b_create_vtk.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: b_create_vtk.ipynb "
"<b_create_vtk.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:288
msgid ""
":download:`Download Python source code: b_create_vtk.py <b_create_vtk.py>`"
msgstr ""
":download:`Download Python source code: b_create_vtk.py <b_create_vtk.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/b_create_vtk.rst:292
msgid ":download:`Download zipped: b_create_vtk.zip <b_create_vtk.zip>`"
msgstr ":download:`Download zipped: b_create_vtk.zip <b_create_vtk.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_06_vtk_c_vtk_algorithms.py>`"
" to download the full example code. or to run this example in your browser "
"via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_06_vtk_c_vtk_algorithms.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:22
msgid "Using VTK Algorithms"
msgstr "VTKアルゴリズムの使用"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:24
msgid ""
"In this exercise, you will use a VTK Algorithm directly to filter a PyVista "
"mesh."
msgstr "この演習では，VTK Algorithm を直接使用して PyVista メッシュをフィルタリングします．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:26
msgid "VTK algorithms (filters) follow a standard flow for most cases:"
msgstr "VTKのアルゴリズム（フィルター）は，ほとんどの場合，標準的なフローに従います．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:28
msgid "Instantiate the algorithm"
msgstr "アルゴリズムのインスタンス化"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:29
msgid "Set the input data object or connection: ``.SetInputDataObject(mesh)``"
msgstr "入力データオブジェクトまたはコネクションの設定: ``.SetInputDataObject(mesh)``"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:30
msgid ""
"Adjust algorithm parameters with the setter methods, e.g., "
"``SetParameterName(value)``"
msgstr "アルゴリズムのパラメータをセッターメソッドで調整する，例., ``SetParameterName(value)``"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:31
msgid "Call ``.Update()`` to run the algorithm"
msgstr "アルゴリズムを実行するために ``.Update()`` を呼び出します．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:32
msgid "Retrieve the output of the algorithm: ``output = alg.GetOutput()``"
msgstr "アルゴリズムの出力を取得する: ``output = alg.GetOutput()``"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:34
msgid ""
"Let's see if we can try a few VTK algorithms with that standard workflow."
msgstr "その標準的なワークフローで，VTKのアルゴリズムをいくつか試してみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:54
msgid "Here is a sample mesh"
msgstr "以下はメッシュのサンプルです．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:138
msgid "Simple Filter"
msgstr "簡易フィルター"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:139
msgid "Let's start out with a simple VTK filter: ``vtkOutlineFilter``"
msgstr "まずは，シンプルな VTK フィルタである ``vtkOutlineFilter`` から始めましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:1351
msgid "Try using this VTK filter yourself here:"
msgstr "このVTKフィルタを自分で使ってみるには，こちらをご覧ください．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:1353
msgid ""
"Remember that you will have to wrap the output of the algorithm with "
":func:`pyvista.wrap`"
msgstr "アルゴリズムの出力を :func:`pyvista.wrap` でラップする必要があることを忘れないでください．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:1431
msgid ""
"Note that the about filter can be replaced with a ``.outline()`` filter in "
"PyVista"
msgstr "PyVistaでは，aboutフィルタを ``.outline()`` フィルタで置き換えることができることに注意してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:1480
msgid "Find your own filter"
msgstr "自分だけのフィルターを探す"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:1482
msgid ""
"Take a look at VTK's examples and documentation to find a filter you'd like "
"to apply to your mesh. The instructors will be around to help you implement."
msgstr "VTKのサンプルやドキュメントを見て，自分のメッシュに適用したいフィルタを探してみましょう．インストラクターが実装のお手伝いをします．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:1485
msgid "See https://kitware.github.io/vtk-examples/site/Python/"
msgstr "https://kitware.github.io/vtk-examples/site/Python/ をご覧ください．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:1500
msgid "**Total running time of the script:** (0 minutes 0.804 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.804 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:1518
msgid ""
":download:`Download Jupyter notebook: c_vtk_algorithms.ipynb "
"<c_vtk_algorithms.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: c_vtk_algorithms.ipynb "
"<c_vtk_algorithms.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:1522
msgid ""
":download:`Download Python source code: c_vtk_algorithms.py "
"<c_vtk_algorithms.py>`"
msgstr ""
":download:`Download Python source code: c_vtk_algorithms.py "
"<c_vtk_algorithms.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/c_vtk_algorithms.rst:1526
msgid ""
":download:`Download zipped: c_vtk_algorithms.zip <c_vtk_algorithms.zip>`"
msgstr ""
":download:`Download zipped: c_vtk_algorithms.zip <c_vtk_algorithms.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/d_wasm.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_06_vtk_d_wasm.py>` to "
"download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_06_vtk_d_wasm.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/d_wasm.rst:22
msgid "VTK + WASM"
msgstr "VTK + WASM"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/d_wasm.rst:24
msgid "Use WASM local rendering. This requires a pre-release version of VTK:"
msgstr "WASMローカルレンダリングを使用する。 これにはVTKのプレリリースバージョンが必要です:"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/d_wasm.rst:231
msgid ""
"Make sure to give room for the download of WASM bundle Only needed at first "
"execution"
msgstr "WASMバンドルのダウンロードのためのスペースを確保してください。"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/d_wasm.rst:265
msgid ":download:`Download Jupyter notebook: d_wasm.ipynb <d_wasm.ipynb>`"
msgstr ":download:`Download Jupyter notebook: d_wasm.ipynb <d_wasm.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/d_wasm.rst:269
msgid ":download:`Download Python source code: d_wasm.py <d_wasm.py>`"
msgstr ":download:`Download Python source code: d_wasm.py <d_wasm.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/d_wasm.rst:273
msgid ":download:`Download zipped: d_wasm.zip <d_wasm.zip>`"
msgstr ":download:`Download zipped: d_wasm.zip <d_wasm.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_06_vtk_e_vtk_next.py>` to "
"download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_06_vtk_e_vtk_next.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:22
msgid "VTK's Next Generation API"
msgstr "VTKの次世代API"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:24
msgid "This requires a pre-release version of VTK:"
msgstr " これにはVTKのプレリリースバージョンが必要です:"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:120
msgid "Load input mesh from a vtkPartitionedDataSetCollection file"
msgstr "vtkPartitionedDataSetCollection ファイルから入力メッシュをロードする"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:144
msgid "Construct magpy coil objects for each coil in the reactor mesh."
msgstr "リアクターメッシュの各コイルに対してmagpyコイルオブジェクトを構築します。"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:155
msgid "Compute B, H in a 32x32x32 grid"
msgstr "32x32x32グリッドでB, Hを計算する"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:172
msgid "Show coils"
msgstr "コイルを表示"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:184
msgid "Compute streamlines of B field induced by toroidal coils."
msgstr "トロイダルコイルによって誘導されるB磁場のストリームラインを計算する。"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:206
msgid "Visualize streamlines"
msgstr "ストリームラインの可視化"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:223
msgid ""
"Animate the disk position such that it oscillates between y=-1 and y=1."
msgstr "ディスクの位置がy=-1とy=1の間で振動するようにアニメートする。"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:249
msgid "Sign up to receive TimerEvent"
msgstr "TimerEventの受信登録"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:281
msgid ""
":download:`Download Jupyter notebook: e_vtk_next.ipynb <e_vtk_next.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: e_vtk_next.ipynb <e_vtk_next.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:285
msgid ":download:`Download Python source code: e_vtk_next.py <e_vtk_next.py>`"
msgstr ""
":download:`Download Python source code: e_vtk_next.py <e_vtk_next.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/e_vtk_next.rst:289
msgid ":download:`Download zipped: e_vtk_next.zip <e_vtk_next.zip>`"
msgstr ":download:`Download zipped: e_vtk_next.zip <e_vtk_next.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:6
msgid "PyVista & VTK"
msgstr "PyVistaとVTK"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:8
msgid ""
"Show how PyVista uses VTK and how you can combine the best of both worlds! "
"(10 minutes for talk, 10 minutes for exercise)"
msgstr ""
"PyVistaがVTKをどのように使っているか，そして両者の長所をどのように組み合わせられるかを紹介します! (トーク10分，エクササイズ10分)"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:12
msgid ""
"This section of the tutorial was adopted from the `Transitioning from VTK to"
" PyVista <https://docs.pyvista.org/user-guide/vtk_to_pyvista.html>`_ chapter"
" of the PyVista documentation."
msgstr ""
"このチュートリアルのセクションは，PyVista ドキュメントの `Transitioning from VTK to PyVista "
"<https://docs.pyvista.org/user-guide/vtk_to_pyvista.html>`_ の章から採用されています．"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:411
msgid ":ref:`sphx_glr_tutorial_06_vtk_a_1_transition_vtk.py`"
msgstr ":ref:`sphx_glr_tutorial_06_vtk_a_1_transition_vtk.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:428
msgid ":ref:`sphx_glr_tutorial_06_vtk_a_2_pyvista_vtk.py`"
msgstr ":ref:`sphx_glr_tutorial_06_vtk_a_2_pyvista_vtk.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:445
msgid ":ref:`sphx_glr_tutorial_06_vtk_b_create_vtk.py`"
msgstr ":ref:`sphx_glr_tutorial_06_vtk_b_create_vtk.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:462
msgid ":ref:`sphx_glr_tutorial_06_vtk_c_vtk_algorithms.py`"
msgstr ":ref:`sphx_glr_tutorial_06_vtk_c_vtk_algorithms.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:479
msgid ":ref:`sphx_glr_tutorial_06_vtk_d_wasm.py`"
msgstr ":ref:`sphx_glr_tutorial_06_vtk_d_wasm.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/index.rst:496
msgid ":ref:`sphx_glr_tutorial_06_vtk_e_vtk_next.py`"
msgstr ":ref:`sphx_glr_tutorial_06_vtk_e_vtk_next.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:9
msgid ""
"**00:05.357** total execution time for 6 files **from tutorial/06_vtk**:"
msgstr ""
"**00:05.357** total execution time for 6 files **from tutorial/06_vtk**:"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_06_vtk_a_2_pyvista_vtk.py` (``a_2_pyvista_vtk.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_06_vtk_a_2_pyvista_vtk.py` (``a_2_pyvista_vtk.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:36
msgid "00:02.312"
msgstr "00:02.312"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_tutorial_06_vtk_a_1_transition_vtk.py` "
"(``a_1_transition_vtk.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_06_vtk_a_1_transition_vtk.py` "
"(``a_1_transition_vtk.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:39
msgid "00:01.665"
msgstr "00:01.665"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_tutorial_06_vtk_c_vtk_algorithms.py` "
"(``c_vtk_algorithms.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_06_vtk_c_vtk_algorithms.py` "
"(``c_vtk_algorithms.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:42
msgid "00:00.804"
msgstr "00:00.804"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:44
msgid ":ref:`sphx_glr_tutorial_06_vtk_b_create_vtk.py` (``b_create_vtk.py``)"
msgstr ":ref:`sphx_glr_tutorial_06_vtk_b_create_vtk.py` (``b_create_vtk.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:45
msgid "00:00.577"
msgstr "00:00.577"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:47
msgid ":ref:`sphx_glr_tutorial_06_vtk_d_wasm.py` (``d_wasm.py``)"
msgstr ":ref:`sphx_glr_tutorial_06_vtk_d_wasm.py` (``d_wasm.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/06_vtk/sg_execution_times.rst:50
msgid ":ref:`sphx_glr_tutorial_06_vtk_e_vtk_next.py` (``e_vtk_next.py``)"
msgstr ":ref:`sphx_glr_tutorial_06_vtk_e_vtk_next.py` (``e_vtk_next.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:6
msgid "PyVista and Sphinx"
msgstr "PyVistaとSphinx"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:8
msgid "Leverage PyVista to make some awesome interactive web documentation."
msgstr "PyVistaを活用して，素晴らしいインタラクティブなWebドキュメントを作成することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:12
msgid ""
"This section of the tutorial was adopted from `Plotting Themes "
"<https://docs.pyvista.org/user-guide/themes.html>`_ and `Sphinx PyVista Plot"
" Directive <https://docs.pyvista.org/extras/plot_directive.html>`_ chapter "
"of the PyVista documentation."
msgstr ""
"このチュートリアルのセクションは，PyVistaドキュメントの `Plotting Themes "
"<https://docs.pyvista.org/user-guide/themes.html>`_ と `Sphinx PyVista Plot "
"Directive <https://docs.pyvista.org/extras/plot_directive.html>`_ "
"の章から採用されたものです．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:18
msgid "Dynamically Generating 3D Plots in your Documentation"
msgstr "ドキュメントに3Dプロットを動的に生成する"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:19
msgid ""
"PyVista allows you to generate static or dynamic images directly within "
"Sphinx much like the `Matplotlib plot_directive "
"<https://matplotlib.org/stable/api/sphinxext_plot_directive_api.html>`_. "
"Rather than manually creating and adding plots after code sections, you can "
"instead dynamically generate images and embed them directly within your "
"documentation. This also works seamlessly with `sphinx-gallery "
"<https://sphinx-gallery.github.io/>`_, so you can create notebook examples "
"just like the `Matplotlib Example Gallery "
"<https://matplotlib.org/stable/gallery/index.html>`_."
msgstr ""
"PyVistaを使うと， `Matplotlib plot_directive "
"<https://matplotlib.org/stable/api/sphinxext_plot_directive_api.html>`_ "
"と同じように，Sphinx内で静的または動的な画像を直接生成することができます．手動でプロットを作成して，コードセクションの後に追加するのではなく，代わりに動的に画像を生成して，ドキュメントの中に直接埋め込むことができるのです．これは"
" `sphinx-gallery <https://sphinx-gallery.github.io/>`_ ともシームレスに動作しますので， "
"`Matplotlib Example Gallery "
"<https://matplotlib.org/stable/gallery/index.html>`_ "
"のようなノートブックのサンプルを作成することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:29
msgid ""
"As an added side benefit, you can be sure that the documentation you "
"generate matches your project API. If you include this within a `GitHub "
"Workflow <https://docs.github.com/en/actions/using-workflows/about-"
"workflows>`_"
msgstr ""
"さらに副次的な利点として，生成したドキュメントがプロジェクトの API と一致することを確認できます．これを `GitHub ワークフロー "
"<https://docs.github.com/en/actions/using-workflows/about-workflows>`_ "
"に組み込むと，次のようになります．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:33
msgid "This section covers the following topics."
msgstr "このセクションでは，以下の項目について説明します．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:35
msgid ":ref:`static_plots`"
msgstr ":ref:`static_plots`"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:36
msgid ":ref:`dynamic_plots`"
msgstr ":ref:`dynamic_plots`"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:41
msgid "Static Plotting - Sphinx PyVista Plot Directive"
msgstr "静的プロット - Sphinx PyVista プロットディレクティブ"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:42
msgid ""
"You can generate static images of PyVista plots within sphinx using the "
"``pyvista-plot`` directive by adding the following to your ``conf.py`` when "
"building your documentation using Sphinx."
msgstr ""
"Sphinxを使用してドキュメントをビルドする際に， ``conf.py`` に以下を追加すると， ``pyvista-plot`` "
"ディレクティブを使用して，sphinx内でPyVistaプロットの静止画像を生成することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:53
msgid ""
"You can then issue the plotting directive within your sphinx documentation "
"files::"
msgstr "そうすれば，sphinxのドキュメントファイルの中で，plottingディレクティブを発行することができます::"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:64
msgid "Which will be rendered as:"
msgstr "以下のように表示されます．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:25
msgid "This is a default sphere"
msgstr "これはデフォルトの球体"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:78
msgid "Dynamic Plotting Using the Jupyter Sphinx Extension"
msgstr "Jupyter Sphinx拡張を使った動的プロッティング"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:79
msgid ""
"PyVista also supports the `jupyter-sphinx <https://jupyter-"
"sphinx.readthedocs.io/>`_ extension. With this extension you can execute "
"code blocks within a sphinx ``*.rst`` file using the ``jupyter-execute`` "
"directive::"
msgstr ""
"PyVistaは `jupyter-sphinx <https://jupyter-sphinx.readthedocs.io/>`_ "
"拡張もサポートしています．この拡張機能を使うと， ``jupyter-execute`` ディレクティブを使って，sphinx ``*.rst`` "
"ファイル内のコードブロックを実行することができます::"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:89
msgid "Will be rendered as:"
msgstr "以下のように表示されます:"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:98
msgid ""
"Likewise, output from PyVista that would normally be rendered within a "
"notebook will be rendered in the output cell from the ``jupyter-execute`` "
"directive. For example, here's a plot using the `trame "
"<https://github.com/Kitware/trame>`_ backend::"
msgstr ""
"同様に，通常ノートブック内でレンダリングされるPyVistaからの出力は， ``jupyter-execute`` "
"ディレクティブの出力セルにレンダリングされます．例えば， `trame <https://github.com/Kitware/trame>`_ "
"バックエンドを使用したプロットは次のようになります．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:109
msgid "Which is rendered as:"
msgstr "以下のように表示されます:"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:119
msgid "Using the ``Trame`` backend with PyVista"
msgstr "PyVistaで ``Trame`` バックエンドを使用する"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:120
msgid ""
"PyVista supports the usage of the `trame "
"<https://github.com/Kitware/trame>`_ library as a ``vtk.js`` jupyterlab "
"plotting backend that can be utilized as either a standalone VTK viewer, or "
"as a tightly integrated ``pyvista`` plotting backend.  For example, within a"
" Jupyter notebook environment, you can pass ``jupyter_backend='trame'`` to "
"``plot``, or ``Plotter.show`` to automatically enable plotting with Juptyer "
"and ``trame``."
msgstr ""
"PyVistaは ``vtk.js`` jupyterlab plotting backendとして ``trame "
"<https://github.com/Kitware/trame>`_ "
"libraryの使用をサポートしています．このライブラリは，スタンドアロンのVTKビューアとして，あるいは緊密に連携した ``pyvista`` "
"plotting backendとして使用することが可能です． 例えば，Jupyterノートブック環境では， ``plot`` や "
"``Plotter.show`` に ``jupyter_backend='trame'`` を渡すと，自動的にJuptyerと ``trame`` "
"でプロットできるようになります．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:127
msgid "For example, here's the ``PyVista`` logo::"
msgstr "例えば，これは ``PyVista`` のロゴです::"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:134
msgid "Which is shown within the documentation as:"
msgstr "以下のようにドキュメント内に表示されています:"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:144
msgid "Examples and Usage"
msgstr "使用例と使用方法"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:145
msgid ""
"There are two ways to use `trame <https://github.com/Kitware/trame>`_ within"
" Jupyter notebooks.  You can use it on a plot by plot basis by setting the "
"``jupyter_backend`` in ``mesh.plot()``::"
msgstr ""
"Jupyterノートブック内で `trame <https://github.com/Kitware/trame>`_ "
"を使用するには2つの方法があります． ``mesh.plot()`` で ``jupyter_backend`` "
"を設定することにより，プロットごとに使用することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:163
msgid "And here's the resulting output in Sphinx:"
msgstr "そして，これがSphinxでの出力結果です:"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:181
msgid ""
"Or you can first hide code that sets up the plotting backend and global "
"theme::"
msgstr "または，プロットバックエンドとグローバルテーマを設定するコードを最初に隠すことができます::"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:197
msgid "And now just directly execute ``plot`` on any dataset::"
msgstr "そして，任意のデータセットに対して ``plot`` を直接実行するようにします::"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:205
msgid "Which looks like:"
msgstr "以下のように見えます:"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:215
msgid ""
"You have the option of choosing `trame <https://github.com/Kitware/trame>`_ "
"or `trame <https://github.com/Kitware/trame>`_ as a backend, but you might "
"find that `trame <https://github.com/Kitware/trame>`_ has better support as "
"it's being actively developed."
msgstr ""
"バックエンドには `panel <https://github.com/Kitware/trame>`_ と `pythreejs "
"<https://github.com/Kitware/trame>`_ がありますが，活発に開発されている `panel "
"<https://github.com/Kitware/trame>`_ の方がより良いサポートが受けられるかもしれません．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:224
msgid ""
"Generate Sphinx documentation on your own using the `pyvista/pyvista-doc-"
"example <https://github.com/pyvista/pyvista-doc-example>`_ repository. "
"Either clone the repository with::"
msgstr ""
"以下でリポジトリをクローンするか，  `pyvista/pyvista-doc-example "
"<https://github.com/pyvista/pyvista-doc-example>`_ "
"リポジトリを使って，自分自身でSphinxのドキュメントを生成します::"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:230
msgid "Or just download the zip of the repository."
msgstr "または，リポジトリのzipをダウンロードするだけです．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:232
msgid "pyvista-doc-example-main.zip"
msgstr "pyvista-doc-example-main.zip"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:240
msgid "Build the documentation"
msgstr "ドキュメントをビルドします"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:242
msgid ""
"Once you've downloaded `pyvista/pyvista-doc-example "
"<https://github.com/pyvista/pyvista-doc-example>`_, cd into the directory "
"and install the documentation build requirements with::"
msgstr ""
"`pyvista/pyvista-doc-example <https://github.com/pyvista/pyvista-doc-"
"example>`_ をダウンロードしたら，そのディレクトリにcdして，ドキュメントのビルド要件を次のようにインストールします．"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:249
msgid "Finally, build the documentation locally with::"
msgstr "最後に，次のようにしてローカルにドキュメントをビルドします::"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:254
msgid "Or, if on Windows::"
msgstr "または，Windowsの場合::"

#: ../../pyvista-tutorial/doc/source/tutorial/07_sphinx/index.rst:259
msgid ""
"You will then find the generated documentation within the ``doc/_build`` "
"directory. Open up ``index.html`` using your browser to see the "
"documentation."
msgstr ""
"``doc/_build`` ディレクトリの中に，生成されたドキュメントがあります．ブラウザで ``index.html`` "
"を開くと，ドキュメントが表示されます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_08_widgets_a_box-widget.py>`"
" to download the full example code. or to run this example in your browser "
"via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_08_widgets_a_box-widget.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:24
msgid "Box Widget"
msgstr "ボックスウィジェット"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:26
msgid ""
"The box widget can be enabled and disabled by the "
":func:`pyvista.Plotter.add_box_widget` and "
":func:`pyvista.Plotter.clear_box_widgets` methods respectively. When "
"enabling the box widget, you must provide a custom callback function "
"otherwise the box would appear and do nothing - the callback functions are "
"what allow us to leverage the widget to perform a task like "
"clipping/cropping."
msgstr ""
"ボックスウィジェットは， :func:`pyvista.Plotter.add_box_widget` および "
":func:`pyvista.Plotter.clear_box_widgets` "
"メソッドによって，それぞれ有効および無効にすることができます．ボックスウィジェットを有効にする場合は，カスタムコールバック関数を提供する必要があります．そうしないとボックスが表示されて何も実行されません．コールバック関数を使用すると，クリップやクロッピングなどのタスクをウィジェットで実行できます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:33
msgid ""
"Considering that using a box to clip/crop a mesh is one of the most common "
"use cases, we have included a helper method that will allow you to add a "
"mesh to a scene with a box widget that controls its extent, the "
":func:`pyvista.Plotter.add_mesh_clip_box` method."
msgstr ""
"メッシュをクリップ/クロップするためにボックスを使用することが最も一般的な使用例の1つであることを考慮して，メッシュの範囲を制御するボックスウィジェットを使用してシーンにメッシュを追加できるヘルパーメソッド，"
" :func:`pyvista.Plotter.add_mesh_clip_box` メソッドを含めました．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:103
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:85
msgid "After interacting with the scene, the clipped mesh is available as:"
msgstr "シーンを操作すると，クリップされたメッシュは次のように使用できます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:143
msgid "**Total running time of the script:** (0 minutes 14.806 seconds)"
msgstr "**Total running time of the script:** (0 minutes 14.806 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:161
msgid ""
":download:`Download Jupyter notebook: a_box-widget.ipynb <a_box-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_box-widget.ipynb <a_box-"
"widget.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:165
msgid ""
":download:`Download Python source code: a_box-widget.py <a_box-widget.py>`"
msgstr ""
":download:`Download Python source code: a_box-widget.py <a_box-widget.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/a_box-widget.rst:169
msgid ":download:`Download zipped: a_box-widget.zip <a_box-widget.zip>`"
msgstr ":download:`Download zipped: a_box-widget.zip <a_box-widget.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_08_widgets_b_checkbox-"
"widget.py>` to download the full example code. or to run this example in "
"your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_08_widgets_b_checkbox.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:24
msgid "Checkbox Widget"
msgstr "チェックボックスウィジェット"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:26
msgid "Use a checkbox to turn on/off the visibility of meshes in a scene."
msgstr "チェックボックスを使用して，シーン内のメッシュの表示/非表示を切り替えます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:28
msgid ""
"See :func:`pyvista.Plotter.add_checkbox_button_widget` for more details."
msgstr ""
"詳細については， :func:`pyvista.Plotter.add_checkbox_button_widget` を参照してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:47
msgid "Single Checkbox"
msgstr "単一チェックボックス"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:103
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:213
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:117
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:153
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:114
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:196
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:268
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:131
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:197
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:125
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:205
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:328
#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:111
msgid "And here is a screen capture of a user interacting with this"
msgstr "以下はユーザ対話型のスクリーンショットです"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:110
msgid "Multiple Checkboxes"
msgstr "複数のチェックボックス"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:112
msgid ""
"In this example, we will add many meshes to a scene with unique colors and "
"create corresponding checkboxes for those meshes of the same color to toggle"
" their visibility in the scene."
msgstr ""
"この例では，一意のカラーを持つ多数のメッシュをシーンに追加し，同じカラーのメッシュに対応するチェックボックスを作成してシーン内での可視性を切り替えます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:230
msgid "**Total running time of the script:** (0 minutes 0.732 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.732 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:248
msgid ""
":download:`Download Jupyter notebook: b_checkbox-widget.ipynb <b_checkbox-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: b_checkbox-widget.ipynb <b_checkbox-"
"widget.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:252
msgid ""
":download:`Download Python source code: b_checkbox-widget.py <b_checkbox-"
"widget.py>`"
msgstr ""
":download:`Download Python source code: b_checkbox-widget.py <b_checkbox-"
"widget.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/b_checkbox-widget.rst:256
msgid ""
":download:`Download zipped: b_checkbox-widget.zip <b_checkbox-widget.zip>`"
msgstr ""
":download:`Download zipped: b_checkbox-widget.zip <b_checkbox-widget.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_08_widgets_c_line-"
"widget.py>` to download the full example code. or to run this example in "
"your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_08_widgets_c_line-widget.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:24
msgid "Line Widget"
msgstr "線ウィジェット"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:26
msgid ""
"The line widget can be enabled and disabled by the "
":func:`pyvista.Plotter.add_line_widget` and "
":func:`pyvista.Plotter.clear_line_widgets` methods respectively. "
"Unfortunately, PyVista does not have any helper methods to utilize this "
"widget, so it is necessary to pass a custom callback method."
msgstr ""
"行ウィジェットは， :func:`pyvista.WidgetHelper.add_line_widget` および "
":func:`pyvista.WidgetHelper.clear_line_widgets` "
"メソッドによって，それぞれ有効および無効にすることができます．残念ながら，PyVistaにはこのウィジェットを利用するヘルパー・メソッドがないため，カスタムのコールバック・メソッドを渡す必要があります．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:32
msgid ""
"One particularly fun example is to use the line widget to create a source "
"for the :func:`pyvista.DataSetFilters.streamlines` filter. Again note the "
"use of the ``name`` argument in ``add_mesh``."
msgstr ""
"特に面白い例は，行ウィジェットを使って :func:`pyvista.DataSetFilters.streamlines` "
"フィルタのソースを作成することです． ``add_mesh`` で ``name`` 引数を使用していることに再度注意してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:134
msgid "**Total running time of the script:** (0 minutes 0.740 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.740 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:152
msgid ""
":download:`Download Jupyter notebook: c_line-widget.ipynb <c_line-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: c_line-widget.ipynb <c_line-"
"widget.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:156
msgid ""
":download:`Download Python source code: c_line-widget.py <c_line-widget.py>`"
msgstr ""
":download:`Download Python source code: c_line-widget.py <c_line-widget.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/c_line-widget.rst:160
msgid ":download:`Download zipped: c_line-widget.zip <c_line-widget.zip>`"
msgstr ":download:`Download zipped: c_line-widget.zip <c_line-widget.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_08_widgets_d_multi-slider-"
"widget.py>` to download the full example code. or to run this example in "
"your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_08_widgets_d_multi-slider-widget.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:22
msgid "Multiple Slider Widgets"
msgstr "複数のスライダウィジェット"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:24
msgid ""
"Use a class based callback to track multiple slider widgets for updating a "
"single mesh."
msgstr "クラスベースのコールバックを使用して，1つのメッシュを更新するために複数のスライダウィジェットを追跡します．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:27
msgid ""
"In this example we simply change a few parameters for the "
":func:`pyvista.Sphere` method, but this could easily be applied to any mesh-"
"generating/altering code."
msgstr ""
"この例では， :func:`pyvista.Sphere` "
"メソッドのパラメータをいくつか変更するだけですが，これはどのようなメッシュ生成/変更コードにも簡単に適用できます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:170
msgid "**Total running time of the script:** (0 minutes 0.244 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.244 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:188
msgid ""
":download:`Download Jupyter notebook: d_multi-slider-widget.ipynb <d_multi-"
"slider-widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: d_multi-slider-widget.ipynb <d_multi-"
"slider-widget.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:192
msgid ""
":download:`Download Python source code: d_multi-slider-widget.py <d_multi-"
"slider-widget.py>`"
msgstr ""
":download:`Download Python source code: d_multi-slider-widget.py <d_multi-"
"slider-widget.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/d_multi-slider-widget.rst:196
msgid ""
":download:`Download zipped: d_multi-slider-widget.zip <d_multi-slider-"
"widget.zip>`"
msgstr ""
":download:`Download zipped: d_multi-slider-widget.zip <d_multi-slider-"
"widget.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_08_widgets_e_plane-"
"widget.py>` to download the full example code. or to run this example in "
"your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_08_widgets_e_plane-widget.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:24
msgid "Plane Widget"
msgstr "平面ウィジェット"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:26
msgid ""
"The plane widget can be enabled and disabled by the "
":func:`pyvista.Plotter.add_plane_widget` and "
":func:`pyvista.Plotter.clear_plane_widgets` methods respectively. As with "
"all widgets, you must provide a custom callback method to utilize that "
"plane. Considering that planes are most commonly used for clipping and "
"slicing meshes, we have included two helper methods for doing those tasks!"
msgstr ""
"プレーンウィジェットは，それぞれ :func:`pyvista.Plotter.add_plane_widget` と "
":func:`pyvista.Plotter.clear_plane_widgets` "
"メソッドによって有効と無効にすることができます．すべてのウィジェットと同様に，このプレーンを利用するにはカスタム・コールバック・メソッドを提供する必要があります．メッシュのクリッピングとスライスに平面が最も一般的に使用されることを考慮して，これらのタスクを実行する2つのヘルパーメソッドを用意しました．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:33
msgid "Let's use a plane to clip a mesh:"
msgstr "平面を使用してメッシュをクリップしましょう:"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:120
msgid "Or you could slice a mesh using the plane widget:"
msgstr "または，平面ウィジェットを使用してメッシュをスライスすることもできます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:166
msgid "After interacting with the scene, the slice is available as:"
msgstr "シーンを操作すると，スライスは次のように表示されます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:202
msgid ""
"Or you could leverage the plane widget for some custom task like glyphing a "
"vector field along that plane. Note that we have to pass a ``name`` when "
"calling ``add_mesh`` to ensure that there is only one set of glyphs plotted "
"at a time."
msgstr ""
"あるいは，平面ウィジェットを利用して，その平面に沿ってベクトルフィールドをグリフするなどのカスタムタスクを実行することもできます． "
"``add_mesh`` を呼び出す際には，一度に出力されるグリフのセットが1つだけであることを保証するために ``name`` "
"を渡す必要があることに注意してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:274
msgid ""
"Further, a user can disable the arrow vector by setting the "
"``normal_rotation`` argument to ``False``. For example, here we "
"programmatically set the normal vector on which we want to translate the "
"plane and we disable the arrow to prevent its rotation."
msgstr ""
"さらに， ``normal_rotation`` 引数を ``False`` "
"に設定することで，矢印ベクトルを無効にすることができます．たとえば，ここでは平面を移動する法線ベクトルをプログラムで設定し，矢印を無効にして回転を防止します．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:324
msgid ""
"The vector is also forcibly disabled anytime the ``assign_to_axis`` argument"
" is set."
msgstr "また， ``assign_to_axis`` 引数が設定されているときは常に，ベクターは強制的に無効になります．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:372
msgid ""
"Additionally, users can modify the interaction event that triggers the "
"callback functions handled by the different plane widget helpers through the"
" ``interaction_event`` keyword argument when available. For example, we can "
"have continuous slicing by using the ``InteractionEvent`` observer."
msgstr ""
"さらに，ユーザは ``interaction_event`` "
"キーワード引数を通して，利用可能な場合，異なるプレーンウィジェットヘルパーが処理するコールバック関数をトリガーするインタラクションイベントを変更することができます．例えば，"
" ``InteractionEvent`` オブザーバを使用することで，連続的なスライスを行うことができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:423
msgid ""
"And here is a screen capture of a user interacting with this continuously "
"via the ``InteractionEvent`` observer:"
msgstr ""
"そして，これは ``InteractionEvent`` オブザーバを介して，ユーザーが継続的にこのイベントを操作している画面のキャプチャです．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:441
msgid "**Total running time of the script:** (0 minutes 11.239 seconds)"
msgstr "**Total running time of the script:** (0 minutes 11.239 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:459
msgid ""
":download:`Download Jupyter notebook: e_plane-widget.ipynb <e_plane-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: e_plane-widget.ipynb <e_plane-"
"widget.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:463
msgid ""
":download:`Download Python source code: e_plane-widget.py <e_plane-"
"widget.py>`"
msgstr ""
":download:`Download Python source code: e_plane-widget.py <e_plane-"
"widget.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/e_plane-widget.rst:467
msgid ":download:`Download zipped: e_plane-widget.zip <e_plane-widget.zip>`"
msgstr ":download:`Download zipped: e_plane-widget.zip <e_plane-widget.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_08_widgets_f_slider-bar-"
"widget.py>` to download the full example code. or to run this example in "
"your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_08_widgets_f_slider-widget.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:24
msgid "Slider Bar Widget"
msgstr "スライダバーウィジェット"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:26
msgid ""
"The slider widget can be enabled and disabled by the "
":func:`pyvista.Plotter.add_slider_widget` and "
":func:`pyvista.Plotter.clear_slider_widgets` methods respectively. This is "
"one of the most versatile widgets as it can control a value that can be used"
" for just about anything."
msgstr ""
"スライダウィジェットは， :func:`pyvista.Plotter.add_slider_widget` メソッドおよび "
":func:`pyvista.Plotter.clear_slider_widgets` "
"メソッドによって，それぞれ有効および無効にすることができます．これは，ほぼすべてのものに使用できる値を制御できるため，最も用途の広いウィジェットの1つです．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:48
msgid ""
"One helper method we've added is the "
":func:`pyvista.Plotter.add_mesh_threshold` method which leverages the slider"
" widget to control a thresholding value."
msgstr ""
"追加したヘルパーメソッドの1つに :func:`pyvista.Plotter.add_mesh_threshold` "
"メソッドがあります．これは，スライダウィジェットを利用して閾値を制御します．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:102
msgid "After interacting with the scene, the threshold mesh is available as:"
msgstr "シーンを操作すると，しきい値メッシュは次のように使用できます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:138
msgid "Custom Callback"
msgstr "カスタムコールバック"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:140
msgid ""
"Or you could leverage a custom callback function that takes a single value "
"from the slider as its argument to do something like control the resolution "
"of a mesh. Again note the use of the ``name`` argument in ``add_mesh``:"
msgstr ""
"あるいは，スライダから1つの値を引数として取るカスタムコールバック関数を利用して，メッシュの解像度を制御するなどのことができます．ここでも "
"``add_mesh`` における ``name`` 引数の使用に注意してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:214
msgid "**Total running time of the script:** (0 minutes 3.085 seconds)"
msgstr "**Total running time of the script:** (0 minutes 3.085 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:232
msgid ""
":download:`Download Jupyter notebook: f_slider-bar-widget.ipynb <f_slider-"
"bar-widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: f_slider-bar-widget.ipynb <f_slider-"
"bar-widget.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:236
msgid ""
":download:`Download Python source code: f_slider-bar-widget.py <f_slider-"
"bar-widget.py>`"
msgstr ""
":download:`Download Python source code: f_slider-bar-widget.py <f_slider-"
"bar-widget.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/f_slider-bar-widget.rst:240
msgid ""
":download:`Download zipped: f_slider-bar-widget.zip <f_slider-bar-"
"widget.zip>`"
msgstr ""
":download:`Download zipped: f_slider-bar-widget.zip <f_slider-bar-"
"widget.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_08_widgets_g_sphere-"
"widget.py>` to download the full example code. or to run this example in "
"your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_08_widgets_g_sphere-widget.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:22
msgid "Sphere Widget"
msgstr "球体ウィジェット"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:24
msgid ""
"The sphere widget can be enabled and disabled by the "
":func:`pyvista.Plotter.add_sphere_widget` and "
":func:`pyvista.Plotter.clear_sphere_widgets` methods respectively. This is a"
" very versatile widget as it can control vertex location that can be used to"
" control or update the location of just about anything."
msgstr ""
"球ウィジェットは， :func:`pyvista.Plotter.add_sphere_widget` メソッドおよび "
":func:`pyvista.Plotter.clear_sphere_widgets` "
"メソッドによって，それぞれ有効および無効にすることができます．このウィジェットは，頂点の位置を制御できるため，非常に用途が広く，ほとんどすべてのオブジェクトの位置を制御または更新できます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:30
msgid ""
"We don't have any convenient helper methods that utilize this widget out of "
"the box, but we have added a lot of ways to use this widget so that you can "
"easily add several widgets to a scene."
msgstr ""
"このウィジェットをそのまま使用する便利なヘルパーメソッドはありませんが，このウィジェットを使用する方法が多数追加されているため，シーンに複数のウィジェットを簡単に追加できます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:34
msgid "Let's look at a few use cases that all update a surface mesh."
msgstr "サーフェスメッシュをすべて更新するいくつかの使用例を見てみましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:53
msgid "Example A"
msgstr "例A"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:55
msgid "Use a single sphere widget"
msgstr "単一の球ウィジェットを使用します"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:132
msgid "Example B"
msgstr "例B"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:134
msgid "Use several sphere widgets at once"
msgstr "一度に複数の球体ウィジェットを使用します"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:212
msgid "Example C"
msgstr "例C"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:214
msgid ""
"This one is the coolest - use four sphere widgets to update perturbations on"
" a surface and interpolate between them with some boundary conditions"
msgstr "これは，4つの球体ウィジェットを使用してサーフェス上の摂動を更新し，いくつかの境界条件でそれらの間を補間する最もクールな方法です．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:345
msgid "**Total running time of the script:** (0 minutes 1.362 seconds)"
msgstr "**Total running time of the script:** (0 minutes 1.362 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:363
msgid ""
":download:`Download Jupyter notebook: g_sphere-widget.ipynb <g_sphere-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: g_sphere-widget.ipynb <g_sphere-"
"widget.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:367
msgid ""
":download:`Download Python source code: g_sphere-widget.py <g_sphere-"
"widget.py>`"
msgstr ""
":download:`Download Python source code: g_sphere-widget.py <g_sphere-"
"widget.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/g_sphere-widget.rst:371
msgid ":download:`Download zipped: g_sphere-widget.zip <g_sphere-widget.zip>`"
msgstr ""
":download:`Download zipped: g_sphere-widget.zip <g_sphere-widget.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_08_widgets_h_spline-"
"widget.py>` to download the full example code. or to run this example in "
"your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_08_widgets_h_spline-widget.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:22
msgid "Spline Widget"
msgstr "スプラインウィジェット"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:25
msgid ""
"A spline widget can be enabled and disabled by the "
":func:`pyvista.Plotter.add_spline_widget` and "
":func:`pyvista.Plotter.clear_spline_widgets` methods respectively. This "
"widget allows users to interactively create a poly line (spline) through a "
"scene and use that spline."
msgstr ""
"スプラインウィジェットは， :func:`pyvista.Plotter.add_spline_widget` メソッドと "
":func:`pyvista.Plotter.clear_spline_widgets` "
"メソッドでそれぞれ有効または無効にできます．このウィジェットを使用すると，ユーザはシーンを通してポリゴンライン (スプライン) "
"をインタラクティブに作成し，そのスプラインを使用できます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:31
msgid ""
"A common task with splines is to slice a volumetric dataset using an "
"irregular path. To do this, we have added a convenient helper method which "
"leverages the :func:`pyvista.DataSetFilters.slice_along_line` filter named "
":func:`pyvista.Plotter.add_mesh_slice_spline`."
msgstr ""
"スプラインを使用する一般的なタスクは，不規則なパスを使用してボリュームデータセットをスライスすることです．これを行うために，我々は "
":func:`pyvista.WidgetHelper.add_mesh_slice_spline` という名前の "
":func:`pyvista.Plotter.slice_along_line` フィルタを活用する便利なヘルパーメソッドを追加しました．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:128
msgid "**Total running time of the script:** (0 minutes 0.444 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.444 seconds)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:146
msgid ""
":download:`Download Jupyter notebook: h_spline-widget.ipynb <h_spline-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: h_spline-widget.ipynb <h_spline-"
"widget.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:150
msgid ""
":download:`Download Python source code: h_spline-widget.py <h_spline-"
"widget.py>`"
msgstr ""
":download:`Download Python source code: h_spline-widget.py <h_spline-"
"widget.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/h_spline-widget.rst:154
msgid ":download:`Download zipped: h_spline-widget.zip <h_spline-widget.zip>`"
msgstr ""
":download:`Download zipped: h_spline-widget.zip <h_spline-widget.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:6
msgid "Widgets in PyVista"
msgstr "PyVistaのウィジェット"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:8
msgid ""
"PyVista has several widgets that can be added to the rendering scene to "
"control filters like clipping, slicing, and thresholding - specifically "
"there are widgets to control the positions of boxes, planes, and lines or "
"slider bars which can all be highly customized through the use of custom "
"callback functions."
msgstr ""
"PyVistaには，クリッピング，スライス，および閾値などのフィルタを制御するためにレンダリングシーンに追加できるいくつかのウィジェットがあります．具体的には，ボックス，プレーン，およびラインまたはスライダバーの位置を制御するウィジェットがあり，これらはすべてカスタムコールバック関数を使用して高度にカスタマイズできます．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:14
msgid ""
"Here we’ll take a look at the various widgets, some helper methods that "
"leverage those widgets to do common tasks, and demonstrate how to leverage "
"the widgets for user defined tasks and processing routines."
msgstr ""
"ここでは，様々なウィジェット，これらのウィジェットを活用して一般的なタスクを実行するヘルパーメソッドを紹介し，ユーザー定義のタスクや処理ルーチンにウィジェットを活用する方法を紹介します．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:20
msgid ""
"This section of the tutorial was adopted from the `widgets section "
"<https://docs.pyvista.org/examples/index.html?highlight=widgets#widgets>`_ "
"of the PyVista example documentation."
msgstr ""
"チュートリアルのこのセクションは，PyVistaのサンプルドキュメントの `widgets section "
"<https://docs.pyvista.org/examples/index.html?highlight=widgets#widgets>`_ "
"から採用されました．"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:26
msgid "Widget Examples"
msgstr "ウィジェットの例"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:47
msgid ":ref:`sphx_glr_tutorial_08_widgets_a_box-widget.py`"
msgstr ":ref:`sphx_glr_tutorial_08_widgets_a_box-widget.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:64
msgid ":ref:`sphx_glr_tutorial_08_widgets_b_checkbox-widget.py`"
msgstr ":ref:`sphx_glr_tutorial_08_widgets_b_checkbox-widget.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:81
msgid ":ref:`sphx_glr_tutorial_08_widgets_c_line-widget.py`"
msgstr ":ref:`sphx_glr_tutorial_08_widgets_c_line-widget.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:98
msgid ":ref:`sphx_glr_tutorial_08_widgets_d_multi-slider-widget.py`"
msgstr ":ref:`sphx_glr_tutorial_08_widgets_d_multi-slider-widget.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:115
msgid ":ref:`sphx_glr_tutorial_08_widgets_e_plane-widget.py`"
msgstr ":ref:`sphx_glr_tutorial_08_widgets_e_plane-widget.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:132
msgid ":ref:`sphx_glr_tutorial_08_widgets_f_slider-bar-widget.py`"
msgstr ":ref:`sphx_glr_tutorial_08_widgets_f_slider-bar-widget.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:149
msgid ":ref:`sphx_glr_tutorial_08_widgets_g_sphere-widget.py`"
msgstr ":ref:`sphx_glr_tutorial_08_widgets_g_sphere-widget.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/index.rst:166
msgid ":ref:`sphx_glr_tutorial_08_widgets_h_spline-widget.py`"
msgstr ":ref:`sphx_glr_tutorial_08_widgets_h_spline-widget.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:9
msgid ""
"**00:32.652** total execution time for 8 files **from tutorial/08_widgets**:"
msgstr ""
"**00:32.652** total execution time for 8 files **from tutorial/08_widgets**:"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_08_widgets_a_box-widget.py` (``a_box-widget.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_08_widgets_a_box-widget.py` (``a_box-widget.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:36
msgid "00:14.806"
msgstr "00:14.806"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_tutorial_08_widgets_e_plane-widget.py` (``e_plane-"
"widget.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_08_widgets_e_plane-widget.py` (``e_plane-"
"widget.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:39
msgid "00:11.239"
msgstr "00:11.239"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_tutorial_08_widgets_f_slider-bar-widget.py` (``f_slider-bar-"
"widget.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_08_widgets_f_slider-bar-widget.py` (``f_slider-bar-"
"widget.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:42
msgid "00:03.085"
msgstr "00:03.085"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_tutorial_08_widgets_g_sphere-widget.py` (``g_sphere-"
"widget.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_08_widgets_g_sphere-widget.py` (``g_sphere-"
"widget.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:45
msgid "00:01.362"
msgstr "00:01.362"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_tutorial_08_widgets_c_line-widget.py` (``c_line-widget.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_08_widgets_c_line-widget.py` (``c_line-widget.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:48
msgid "00:00.740"
msgstr "00:00.740"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_tutorial_08_widgets_b_checkbox-widget.py` (``b_checkbox-"
"widget.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_08_widgets_b_checkbox-widget.py` (``b_checkbox-"
"widget.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:51
msgid "00:00.732"
msgstr "00:00.732"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_tutorial_08_widgets_h_spline-widget.py` (``h_spline-"
"widget.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_08_widgets_h_spline-widget.py` (``h_spline-"
"widget.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:54
msgid "00:00.444"
msgstr "00:00.444"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:56
msgid ""
":ref:`sphx_glr_tutorial_08_widgets_d_multi-slider-widget.py` (``d_multi-"
"slider-widget.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_08_widgets_d_multi-slider-widget.py` (``d_multi-"
"slider-widget.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/08_widgets/sg_execution_times.rst:57
msgid "00:00.244"
msgstr "00:00.244"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:6
msgid "PyVista and QT"
msgstr "PyVistaとQT"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:8
msgid ""
"Demonstrate how to use PyVista to create standalone applications using "
"`pyinstaller <https://www.pyinstaller.org/>`_ and the Qt framework."
msgstr ""
"PyVista を使用して， `pyinstaller <https://www.pyinstaller.org/>`_ と Qt "
"フレームワークを使用したスタンドアロンアプリケーションを作成する方法を説明します．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:13
msgid ""
"This section of the tutorial was adopted from the `pyvistaqt documentation "
"<https://qtdocs.pyvista.org/>`_ and the `Extras "
"<https://docs.pyvista.org/extras/>`_ chapters of the PyVista documentation."
msgstr ""
"チュートリアルのこのセクションは，PyVistaドキュメントの `pyvistaqt documentation "
"<https://qtdocs.pyvista.org/>`_ と `Extras "
"<https://docs.pyvista.org/extras/>`_ の章から採用されています．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:19
msgid "Using PyVista with QT"
msgstr "PyVistaとQTの併用"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:21
msgid ""
"PyVista has an interface for placing plots in QT `(see QT) "
"<https://www.qt.io/>`_ in the `pyvistaqt <https://qtdocs.pyvista.org/>`_ "
"library that allows you to combine QT with VTK.  This simplifies adding "
"meshes, updating, and controlling them when using Qt."
msgstr ""
"PyVistaは，QTにプロットを置くためのインタフェース `(QT参照) <https://www.qt.io/>`_ を `pyvistaqt "
"<https://qtdocs.pyvista.org/>`_ ライブラリに持ち，QTとVTKを組み合わせることができるようにしました． "
"これにより，Qt を使用する際のメッシュの追加，更新，制御が簡素化されます．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:26
msgid "Installation using ``pip`` is::"
msgstr "``pip`` を使ったインストールは::"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:31
msgid "To install this package with ``conda`` run::"
msgstr "このパッケージを ``conda`` と共にインストールするには次のように実行します．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:35
msgid ""
"Once installed, use the :class:`pyvistaqt.BackgroundPlotter` like any "
"PyVista plotter."
msgstr ""
"インストールしたら，他のPyVistaプロッタと同じように :class:`pyvistaqt.BackgroundPlotter` を使ってください．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:40
msgid "Brief Example"
msgstr "簡単な例"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:42
msgid ""
"Create an instance of the :class:`pyvistaqt.BackgroundPlotter` and plot a "
"sphere."
msgstr ":class:`pyvistaqt.BackgroundPlotter` のインスタンスを作成し，球体を描画します．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:58
msgid "Sample PyQt5 pyvista QtInteractor"
msgstr "サンプル PyQt5 pyvista QtInteractor"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:62
msgid "Background Plotting"
msgstr "背景のプロット"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:64
msgid ""
"Normal PyVista plotting windows exhibit blocking behavior, but it is "
"possible to plot in the background and update the plotter in real-time using"
" :class:`pyvistaqt.BackgroundPlotter`.  This requires `pyvistaqt "
"<https://qtdocs.pyvista.org/>`_, but otherwise appears and functions like a "
"normal PyVista :class:`pyvista.Plotter` instance. For example:"
msgstr ""
"通常の PyVista のプロットウィンドウはブロッキング動作をしますが， :class:`pyvistaqt.BackgroundPlotter` "
"を使ってバックグラウンドでプロットし，リアルタイムでプロッタを更新することが可能です． これは `pyvistaqt "
"<https://qtdocs.pyvista.org/>`_ を必要としますが，それ以外は通常の PyVista "
":class:`pyvista.Plotter` インスタンスのように表示され，機能します．例えば:"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:85
msgid "Multiple Plotters"
msgstr "マルチプロッタ"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:87
msgid ""
"The following example shows how to use an interface with multiple plotters. "
"Each plotter can be selected and functions like a normal PyVista "
":class:`pyvista.Plotter` instance:"
msgstr ""
"次の例は，複数のプロッターを持つインターフェースを使用する方法を示しています．それぞれのプロッタは選択することができ，通常のPyVista "
":class:`pyvista.Plotter` のインスタンスのように機能します．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:104
msgid "Freezing PyVista with pyinstaller"
msgstr "pyinstallerでPyVistaをフリーズさせる"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:105
msgid ""
"You can make some fantastic standalone programs with `pyinstaller "
"<https://www.pyinstaller.org/>`_ and PyVista, and you can even make a "
"graphical user interface incorporating `PyQt5 "
"<https://pypi.org/project/PyQt5/>`_ or `pyside2 "
"<https://pypi.org/project/PySide2/>`_.  Depending on your version of VTK, "
"this requires some extra steps to setup."
msgstr ""
"`pyinstaller <https://www.pyinstaller.org/>`_ と PyVista "
"を使って素晴らしいスタンドアロンプログラムを作ることができますし， `PyQt5 <https://pypi.org/project/PyQt5/>`_"
" や `pyside2 <https://pypi.org/project/PySide2/>`_ "
"を組み込んでグラフィカルユーザーインターフェースを作ることさえ可能です． VTKのバージョンによっては，セットアップにいくつかの追加手順が必要です．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:112
msgid ""
"When running VTK v9, you need to add several additional ``hiddenimports``.  "
"For clarity and completeness, create a spec file (we'll name it "
"``pyvista.spec``) following the directions given at `Using Spec Files "
"<https://pyinstaller.readthedocs.io/en/stable/spec-files.html>`__.  Modify "
"the ``Analysis`` and add the following hidden imports:"
msgstr ""
"VTK v9 を実行する場合，いくつかの ``hiddenimports`` を追加する必要があります． 分かりやすくするために， `Using "
"Spec Files <https://pyinstaller.readthedocs.io/en/stable/spec-files.html>`__"
" の説明に従って，specファイル(ここでは ``pyvista.spec`` という名前にします)を作成します．  ``Analysis`` "
"を修正し，以下の hidden imports を追加してください:"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:132
msgid ""
"From there, you can freeze an application using PyVista and create a "
"standalone application."
msgstr "そこからPyVistaを使ってアプリケーションをフリーズさせ，スタンドアロンアプリケーションを作ることができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_qt/index.rst:137
msgid "Examples"
msgstr "事例紹介"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_09_trame_a_getting_started.py>` to download the "
"full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_09_trame_a_getting_started.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:22
msgid "Getting started"
msgstr "スタート"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:24
msgid "Getting started with PyVista and Trame"
msgstr "PyVistaとTrameを使い始める"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:37
msgid ""
"PyVista's Jupyter backend is powered by **Trame**. So by default you are "
"using trame without knowing it."
msgstr ""
"PyVistaのJupyterバックエンドは **Trame** で動いています。 "
"そのため、デフォルトでは知らないうちにtrameを使っていることになります。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:40
msgid ""
"By default PyVista is serving you a micro trame application that let you "
"toggle between **Remote** and **Local** rendering along with some various "
"options to configure your visualization."
msgstr ""
"PyVistaのデフォルトでは、 **リモート** と **ローカル** のレンダリングを切り替えることができるmicro "
"trameアプリケーションが提供されます。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:44
msgid ""
"**First try the Remote/Local rendering toggle and notice the differences**"
msgstr "**まず、リモート/ローカルレンダリングのトグルを試してみて、その違いに気づくだろう**"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:52
msgid ""
"One sends images generated on the server side while the other is sending "
"geometry to vtk.js."
msgstr "一方はサーバーサイドで生成された画像を送信し、もう一方は vtk.js にジオメトリを送信している。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:64
msgid "Building applications with PyVista and Trame"
msgstr "PyVistaとTrameを使ったアプリケーションの構築"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:66
msgid ""
"Now, let's build a simple application that updates the mesh color with the "
"click of a button."
msgstr "では、ボタンをクリックしてメッシュの色を更新する簡単なアプリケーションを作ってみましょう。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:122
msgid ""
":download:`Download Jupyter notebook: a_getting_started.ipynb "
"<a_getting_started.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_getting_started.ipynb "
"<a_getting_started.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:126
msgid ""
":download:`Download Python source code: a_getting_started.py "
"<a_getting_started.py>`"
msgstr ""
":download:`Download Python source code: a_getting_started.py "
"<a_getting_started.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_getting_started.rst:130
msgid ""
":download:`Download zipped: a_getting_started.zip <a_getting_started.zip>`"
msgstr ""
":download:`Download zipped: a_getting_started.zip <a_getting_started.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_trame_simple.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_09_trame_a_trame_simple.py>`"
" to download the full example code. or to run this example in your browser "
"via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_09_trame_a_trame_simple.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_trame_simple.rst:22
msgid "Simple Trame App"
msgstr "シンプルなTrameアプリ"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_trame_simple.rst:24
msgid "A simple example of how to create a Trame app with a PyVista Plotter."
msgstr "PyVista Plotterを使用したTrameアプリの作成方法の簡単な例．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_trame_simple.rst:26
msgid ""
"This example contains the boilerplate code to use anytime you are creating a"
" new Trame application with PyVista."
msgstr "この例では、PyVistaで新しいTrameアプリケーションを作成するときに使用する定型的なコードを示します．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_trame_simple.rst:83
msgid ""
":download:`Download Jupyter notebook: a_trame_simple.ipynb "
"<a_trame_simple.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: a_trame_simple.ipynb "
"<a_trame_simple.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_trame_simple.rst:87
msgid ""
":download:`Download Python source code: a_trame_simple.py "
"<a_trame_simple.py>`"
msgstr ""
":download:`Download Python source code: a_trame_simple.py "
"<a_trame_simple.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/a_trame_simple.rst:91
msgid ":download:`Download zipped: a_trame_simple.zip <a_trame_simple.zip>`"
msgstr ":download:`Download zipped: a_trame_simple.zip <a_trame_simple.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_actor_color.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_09_trame_b_trame_actor_color.py>` to download "
"the full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_09_trame_b_trame_actor_color.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_actor_color.rst:22
msgid "Control the Color of an Actor"
msgstr "アクターの色をコントロールします"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_actor_color.rst:24
msgid ""
"Extending our simple example to have a dropdown menu to control the color of"
" the actor."
msgstr "シンプルな例を拡張して，アクターの色をコントロールするドロップダウンメニューを用意しました．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_actor_color.rst:111
msgid ""
":download:`Download Jupyter notebook: b_trame_actor_color.ipynb "
"<b_trame_actor_color.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: b_trame_actor_color.ipynb "
"<b_trame_actor_color.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_actor_color.rst:115
msgid ""
":download:`Download Python source code: b_trame_actor_color.py "
"<b_trame_actor_color.py>`"
msgstr ""
":download:`Download Python source code: b_trame_actor_color.py "
"<b_trame_actor_color.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_actor_color.rst:119
msgid ""
":download:`Download zipped: b_trame_actor_color.zip "
"<b_trame_actor_color.zip>`"
msgstr ""
":download:`Download zipped: b_trame_actor_color.zip "
"<b_trame_actor_color.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_vtk.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_tutorial_09_trame_b_trame_vtk.py>` to"
" download the full example code. or to run this example in your browser via "
"Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_09_trame_b_trame_vtk.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_vtk.rst:22
msgid "Using VTK/PyVista and Trame"
msgstr "VTK/PyVistaとTrameの使用"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_vtk.rst:24
msgid "In this application, we will connect a VTK filter with PyVista."
msgstr "このアプリケーションでは、VTKフィルタとPyVistaを接続します。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_vtk.rst:26
msgid ""
"It will use Trame to visualize the results and interactively control "
"parameters of the VTK filter."
msgstr "Trameを使用して、結果を視覚化し、VTKフィルターのパラメーターをインタラクティブに制御します。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_vtk.rst:109
msgid ""
":download:`Download Jupyter notebook: b_trame_vtk.ipynb <b_trame_vtk.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: b_trame_vtk.ipynb <b_trame_vtk.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_vtk.rst:113
msgid ""
":download:`Download Python source code: b_trame_vtk.py <b_trame_vtk.py>`"
msgstr ""
":download:`Download Python source code: b_trame_vtk.py <b_trame_vtk.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/b_trame_vtk.rst:117
msgid ":download:`Download zipped: b_trame_vtk.zip <b_trame_vtk.zip>`"
msgstr ":download:`Download zipped: b_trame_vtk.zip <b_trame_vtk.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/c_trame_scalars.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_09_trame_c_trame_scalars.py>` to download the "
"full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_09_trame_c_trame_scalars.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/c_trame_scalars.rst:22
msgid "Control Scalar Array"
msgstr "スカラー配列の制御"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/c_trame_scalars.rst:24
msgid ""
"Extending our simple example to have a dropdown menu to control which scalar"
" array is used to color the mesh."
msgstr "単純な例を拡張して，メッシュの色付けにどのスカラー配列を使うかをドロップダウンメニューでコントロールできるようにしました．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/c_trame_scalars.rst:126
msgid ""
":download:`Download Jupyter notebook: c_trame_scalars.ipynb "
"<c_trame_scalars.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: c_trame_scalars.ipynb "
"<c_trame_scalars.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/c_trame_scalars.rst:130
msgid ""
":download:`Download Python source code: c_trame_scalars.py "
"<c_trame_scalars.py>`"
msgstr ""
":download:`Download Python source code: c_trame_scalars.py "
"<c_trame_scalars.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/c_trame_scalars.rst:134
msgid ":download:`Download zipped: c_trame_scalars.zip <c_trame_scalars.zip>`"
msgstr ""
":download:`Download zipped: c_trame_scalars.zip <c_trame_scalars.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/d_trame_scalar_range.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_09_trame_d_trame_scalar_range.py>` to download "
"the full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_09_trame_d_trame_scalar_range.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/d_trame_scalar_range.rst:22
msgid "Control Scalar Range"
msgstr "スカラー範囲の制御"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/d_trame_scalar_range.rst:24
msgid ""
"Extending our simple example to control the color limits of the mapped "
"scalars."
msgstr "単純な例を拡張して，マッピングされたスカラーの色の限界をコントロールします．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/d_trame_scalar_range.rst:110
msgid ""
":download:`Download Jupyter notebook: d_trame_scalar_range.ipynb "
"<d_trame_scalar_range.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: d_trame_scalar_range.ipynb "
"<d_trame_scalar_range.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/d_trame_scalar_range.rst:114
msgid ""
":download:`Download Python source code: d_trame_scalar_range.py "
"<d_trame_scalar_range.py>`"
msgstr ""
":download:`Download Python source code: d_trame_scalar_range.py "
"<d_trame_scalar_range.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/d_trame_scalar_range.rst:118
msgid ""
":download:`Download zipped: d_trame_scalar_range.zip "
"<d_trame_scalar_range.zip>`"
msgstr ""
":download:`Download zipped: d_trame_scalar_range.zip "
"<d_trame_scalar_range.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/e_trame_algorithm.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_09_trame_e_trame_algorithm.py>` to download the "
"full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_09_trame_e_trame_algorithm.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/e_trame_algorithm.rst:22
msgid "Using VTK, PyVista, and Trame"
msgstr "VTK，PyVista，Trameの使用"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/e_trame_algorithm.rst:24
msgid ""
"This example demonstrates how to use VTK, PyVista, and Trame together to "
"show how the three libraries complement each other."
msgstr "この例では，VTK，PyVista，Trameを一緒に使用する方法を示し，3つのライブラリがどのようにお互いを補い合うかを示します．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/e_trame_algorithm.rst:116
msgid ""
":download:`Download Jupyter notebook: e_trame_algorithm.ipynb "
"<e_trame_algorithm.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: e_trame_algorithm.ipynb "
"<e_trame_algorithm.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/e_trame_algorithm.rst:120
msgid ""
":download:`Download Python source code: e_trame_algorithm.py "
"<e_trame_algorithm.py>`"
msgstr ""
":download:`Download Python source code: e_trame_algorithm.py "
"<e_trame_algorithm.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/e_trame_algorithm.rst:124
msgid ""
":download:`Download zipped: e_trame_algorithm.zip <e_trame_algorithm.zip>`"
msgstr ""
":download:`Download zipped: e_trame_algorithm.zip <e_trame_algorithm.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/f_trame_open_file.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_tutorial_09_trame_f_trame_open_file.py>` to download the "
"full example code. or to run this example in your browser via Binder"
msgstr ""
"完全なサンプルコードをダウンロードしたり、Binderを使ってブラウザでこのサンプルを実行するには、 :ref:`最後に進んでください "
"<sphx_glr_download_tutorial_09_trame_f_trame_open_file.py>` 。"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/f_trame_open_file.rst:22
msgid "Open Mesh File"
msgstr "メッシュファイルを開きます"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/f_trame_open_file.rst:24
msgid ""
"An example of opening a mesh file from the browser and viewing it with "
"PyVista."
msgstr "ブラウザからメッシュファイルを開き，PyVistaで表示する例．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/f_trame_open_file.rst:120
msgid ""
":download:`Download Jupyter notebook: f_trame_open_file.ipynb "
"<f_trame_open_file.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: f_trame_open_file.ipynb "
"<f_trame_open_file.ipynb>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/f_trame_open_file.rst:124
msgid ""
":download:`Download Python source code: f_trame_open_file.py "
"<f_trame_open_file.py>`"
msgstr ""
":download:`Download Python source code: f_trame_open_file.py "
"<f_trame_open_file.py>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/f_trame_open_file.rst:128
msgid ""
":download:`Download zipped: f_trame_open_file.zip <f_trame_open_file.zip>`"
msgstr ""
":download:`Download zipped: f_trame_open_file.zip <f_trame_open_file.zip>`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:6
msgid "Trame"
msgstr "Trame"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:8
msgid ""
"`Kitware's Trame <https://kitware.github.io/trame/index.html>`_ is an open-"
"source platform for creating interactive and powerful visual analytics "
"applications. Based on Python, and leveraging platforms such as VTK, "
"ParaView, and Vega, it is possible to create web-based applications in "
"minutes."
msgstr ""
"`Kitware's Trame <https://kitware.github.io/trame/index.html>`_ "
"は，インタラクティブで強力なビジュアル分析アプリケーションを作成するためのオープンソースプラットフォームです．Pythonをベースとし，VTK，ParaView，Vegaなどのプラットフォームを活用することで，ウェブベースのアプリケーションを数分で作成することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:16
msgid "What is Trame?"
msgstr "Trameとは?"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:18
msgid "Trame is a Python framework for building reactive web applications."
msgstr "Trameはリアクティブなウェブアプリケーションを構築するためのPythonフレームワークです．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:20
msgid "All the logic and UI definition can be done in plain Python"
msgstr "すべてのロジックとUI定義は，プレーンなPython で行うことができます"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:21
msgid ""
"Runs on laptops, desktops, clusters, and the cloud while displaying "
"everywhere (phone, tablet, laptop, workstation)"
msgstr ""
"ラップトップ，デスクトップ，クラスター，クラウド上で動作し，あらゆる場所(携帯電話，タブレット，ラップトップ，ワークステーション)で表示されます．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:0
msgid "Documentation"
msgstr "文書化"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:28
msgid "Learn more about Trame"
msgstr "Trameについてさらに詳しく"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:30
msgid "Trame Documentation"
msgstr "Trameドキュメンテーション"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:0
msgid "Tutorial"
msgstr "チュートリアル"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:39
msgid "Gain hands on experience with Trame through the tutorial."
msgstr "チュートリアルを通じて，Trameを実際に体験してください．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:42
msgid "Trame Tutorial"
msgstr "Trameチュートリアル"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:50
msgid "3D visualization in web applications"
msgstr "ウェブアプリケーションにおける3Dビジュアライゼーション"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:52
#: ../../pyvista-tutorial/doc/source/tutorial/10_trame/index.rst:14
msgid ""
"PyVista and Trame work excellently together to provide a cutting-edge "
"capabilities for 3D visualization in reactive web applications."
msgstr "PyVistaとTrameは，リアクティブなWebアプリケーションで3D視覚化のための最先端機能を提供するために，見事に連携します．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:55
#: ../../pyvista-tutorial/doc/source/tutorial/10_trame/index.rst:17
msgid ""
"Trame provides a high-level framework for building reactive, stateful web "
"applications"
msgstr "Trameはリアクティブでステートフルなウェブアプリケーションを構築するためのハイレベルなフレームワークを提供します．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:56
#: ../../pyvista-tutorial/doc/source/tutorial/10_trame/index.rst:18
msgid ""
"PyVista provides a high-level framework for 3D visualization, exposing VTK "
"in a “Pythonic” manner"
msgstr "PyVistaは3Dビジュアライゼーションのためのハイレベルなフレームワークを提供し，VTKを \"Pythonic\" な方法で公開する．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:58
#: ../../pyvista-tutorial/doc/source/tutorial/10_trame/index.rst:20
msgid ""
"High-level framework 1 + high-level framework 2 = a streamlined approach to "
"making powerful web applications with 3D visualization front and center."
msgstr ""
"ハイレベルなフレームワーク1 + ハイレベルなフレームワーク2 = "
"3Dビジュアライゼーションを前面に押し出したパワフルなウェブアプリケーションを作るための合理的なアプローチです．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:60
msgid ""
"The following code creates a simple Trame application with a PyVista plotter"
" embedded in the UI. This code can be used as a base for building all of "
"your Trame applications with PyVista as it contains all of the boilerplate "
"code needed to get started."
msgstr ""
"次のコードは，UI に PyVista プロッタを組み込んだシンプルな Trame "
"アプリケーションを作成します．このコードは，PyVistaですべてのTrameアプリケーションを構築するためのベースとして使用できます．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:0
msgid "Code"
msgstr "コード"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:0
msgid "Web App"
msgstr "ウェブアプリ"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:98
msgid "A simple Trame application with PyVista"
msgstr "PyVistaを使ったシンプルなTrameアプリケーション"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:105
msgid ""
"PyVista's Jupyter backend is powered by Trame! If you've been using PyVista "
"in Jupyter lately, you've been using Trame all along -- our Jupyter backend "
"is a micro Trame application."
msgstr ""
"PyVistaのJupyterバックエンドはTrameで動いています! "
"最近JupyterでPyVistaを使っているなら，ずっとTrameを使っているはずです．JupyterバックエンドはマイクロTrameアプリケーションです．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:111
msgid "Trame applications"
msgstr "Trame アプリケーション"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:113
msgid "Using an existing app"
msgstr "既存のアプリを使用する"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:124
msgid "Try Pan3D: ``pip install pan3d``"
msgstr "Pan3Dを試す: ``pip install pan3d``"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:142
msgid "Do not run these examples in Jupyter but rather as standalone scripts."
msgstr "これらの例をJupyterで実行するのではなく，スタンドアロンのスクリプトとして実行すること．"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:161
msgid ":ref:`sphx_glr_tutorial_09_trame_a_getting_started.py`"
msgstr ":ref:`sphx_glr_tutorial_09_trame_a_getting_started.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:178
msgid ":ref:`sphx_glr_tutorial_09_trame_a_trame_simple.py`"
msgstr ":ref:`sphx_glr_tutorial_09_trame_a_trame_simple.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:195
msgid ":ref:`sphx_glr_tutorial_09_trame_b_trame_actor_color.py`"
msgstr ":ref:`sphx_glr_tutorial_09_trame_b_trame_actor_color.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:212
msgid ":ref:`sphx_glr_tutorial_09_trame_b_trame_vtk.py`"
msgstr ":ref:`sphx_glr_tutorial_09_trame_b_trame_vtk.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:229
msgid ":ref:`sphx_glr_tutorial_09_trame_c_trame_scalars.py`"
msgstr ":ref:`sphx_glr_tutorial_09_trame_c_trame_scalars.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:246
msgid ":ref:`sphx_glr_tutorial_09_trame_d_trame_scalar_range.py`"
msgstr ":ref:`sphx_glr_tutorial_09_trame_d_trame_scalar_range.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:263
msgid ":ref:`sphx_glr_tutorial_09_trame_e_trame_algorithm.py`"
msgstr ":ref:`sphx_glr_tutorial_09_trame_e_trame_algorithm.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/index.rst:280
msgid ":ref:`sphx_glr_tutorial_09_trame_f_trame_open_file.py`"
msgstr ":ref:`sphx_glr_tutorial_09_trame_f_trame_open_file.py`"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 6 files **from tutorial/09_trame**:"
msgstr ""
"**00:00.000** total execution time for 6 files **from tutorial/09_trame**:"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_tutorial_09_trame_a_trame_simple.py` (``a_trame_simple.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_09_trame_a_trame_simple.py` (``a_trame_simple.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_tutorial_09_trame_b_trame_actor_color.py` "
"(``b_trame_actor_color.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_09_trame_b_trame_actor_color.py` "
"(``b_trame_actor_color.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_tutorial_09_trame_c_trame_scalars.py` "
"(``c_trame_scalars.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_09_trame_c_trame_scalars.py` "
"(``c_trame_scalars.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_tutorial_09_trame_d_trame_scalar_range.py` "
"(``d_trame_scalar_range.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_09_trame_d_trame_scalar_range.py` "
"(``d_trame_scalar_range.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_tutorial_09_trame_e_trame_algorithm.py` "
"(``e_trame_algorithm.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_09_trame_e_trame_algorithm.py` "
"(``e_trame_algorithm.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/09_trame/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_tutorial_09_trame_f_trame_open_file.py` "
"(``f_trame_open_file.py``)"
msgstr ""
":ref:`sphx_glr_tutorial_09_trame_f_trame_open_file.py` "
"(``f_trame_open_file.py``)"

#: ../../pyvista-tutorial/doc/source/tutorial/10_trame/index.rst:6
msgid "PyVista and Trame"
msgstr "PyVistaとTrame"

#: ../../pyvista-tutorial/doc/source/tutorial/10_trame/index.rst:8
msgid ""
"Trame is an open-source platform for creating interactive and powerful "
"visual analytics applications. Based on Python, and leveraging platforms "
"such as VTK, ParaView, and Vega, it is possible to create web-based "
"applications in minutes."
msgstr ""
"Trame "
"は，インタラクティブで強力なビジュアル分析アプリケーションを作成するためのオープンソースプラットフォームです．Pythonをベースとし，VTK，ParaView，Vegaなどのプラットフォームを活用することで，ウェブベースのアプリケーションを数分で作成することができます．"

#: ../../pyvista-tutorial/doc/source/tutorial/10_trame/index.rst:12
msgid ""
"Learn more about `Kitware's Trame "
"<https://kitware.github.io/trame/index.html>`_."
msgstr ""
" `Kitware's Trame <https://kitware.github.io/trame/index.html>`_ "
"についてもっと知りましょう．"

#: ../../pyvista-tutorial/doc/source/tutorial/10_trame/index.rst:24
msgid ""
"PyVista's Jupyter backend is powered by Trame! Our Jupyter backend is a "
"micro Trame application."
msgstr ""
"PyVistaのJupyterバックエンドはTrameで動いています！私たちのJupyterバックエンドはマイクロTrameアプリケーションです．"

#: ../../pyvista-tutorial/doc/source/tutorial/10_trame/index.rst:29
msgid "To be continued..."
msgstr "続く..."
