name: Preview Pull Request
on:
  issue_comment:
    types:
      - created

env:
  PYVISTA_OFF_SCREEN: "True"
  ALLOW_PLOTTING: true
  SHELLOPTS: "errexit:pipefail"
  DISPLAY: ":99.0"

jobs:
  build-doc:
    if: |
      github.event_name == 'issue_comment'
      && github.event.action == 'created'
      && github.event.issue.pull_request != null
      && startsWith(github.event.comment.body, 'github-actions preview')
    runs-on: ubuntu-latest
    steps:
      - uses: sushichop/action-repository-permission@v2
        with:
          required-permission: write
          reaction-permitted: rocket
          comment-not-permitted: You don't have permission to deploy. Please ask @pyvista/developers to deploy.
      - uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          requirement_files: requirements_docs.txt

      - name: Install OS Packages
        run: |
          sudo apt-get update
          sudo apt-get install -yqq libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 libopengl0 libegl1
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render -noreset
          sudo apt-get update
          sudo apt-get install libosmesa6-dev libgl1-mesa-dev python3-tk pandoc git-restore-mtime
          sudo apt-get install python3-tk xcb

      - name: Install Dependencies
        run: |
          sudo apt -y install libgeos-dev
          pip install -r requirements_docs.txt

      - name: PyVista Report
        run: |
          python -c "import pyvista;print(pyvista.Report())"
          echo PYVISTA_EXAMPLE_DATA_PATH=$(python -c "import pyvista; print(pyvista.EXAMPLES_PATH)") >> $GITHUB_ENV

      - name: Build Documentation
        run: make -C doc html SPHINXOPTS="-W --keep-going"

      - name: Tar build
        run: tar -zcvf doc-build.tar.gz doc/build/

      - uses: actions/upload-artifact@v4
        with:
          name: doc-build
          path: doc-build.tar.gz

  preview:
    if: |
      github.event_name == 'issue_comment'
      && github.event.action == 'created'
      && github.event.issue.pull_request != null
      && startsWith(github.event.comment.body, 'github-actions preview')
    name: Preview Documentation
    runs-on: ubuntu-latest
    needs: build-doc
    steps:
      - uses: sushichop/action-repository-permission@v2
        with:
          required-permission: write
          reaction-permitted: rocket
          comment-not-permitted: You don't have permission to deploy. Please ask @pyvista/developers to deploy.

      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: doc-build
          path: .

      - name: UnTar build
        run: tar -xzvf doc-build.tar.gz

      - name: Zip Notebooks
        run: |
          cp -r doc/build/html/notebooks/tutorial/ notebooks
          zip -r notebooks.zip notebooks/
          mv notebooks.zip doc/build/html/

      - uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: doc/build/html
          production-deploy: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
